{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebKit Web Inspector",
      "version": "1.0"
    },
    "pages": [
      {
        "startedDateTime": "2025-07-22T03:40:09.231Z",
        "id": "page_0",
        "title": "http://127.0.0.1:5000/results",
        "pageTimings": {
          "onContentLoad": 639299.0739166707,
          "onLoad": 639299.1949999996
        }
      }
    ],
    "entries": [
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.247Z",
        "time": 0.3545833387761377,
        "request": {
          "method": "GET",
          "url": "https://unpkg.com/vis-network@10.0.1/standalone/umd/vis-network.min.js",
          "httpVersion": "",
          "cookies": [],
          "headers": [],
          "queryString": [],
          "headersSize": -1,
          "bodySize": -1
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "",
          "cookies": [],
          "headers": [
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "name": "Access-Control-Allow-Methods",
              "value": "GET, HEAD, OPTIONS"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Server-Timing",
              "value": "cfExtPri"
            },
            {
              "name": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "name": "Access-Control-Allow-Headers",
              "value": "*"
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:39:50 GMT"
            },
            {
              "name": "Expires",
              "value": "Wed, 22 Jul 2026 03:39:50 GMT"
            },
            {
              "name": "Access-Control-Expose-Headers",
              "value": "*"
            },
            {
              "name": "Age",
              "value": "760864"
            },
            {
              "name": "Content-Type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "Last-Modified",
              "value": "Sun, 13 Jul 2025 08:17:39 GMT"
            }
          ],
          "content": {
            "size": 0,
            "compression": 0,
            "mimeType": "text/javascript"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": -1,
          "connect": -1,
          "ssl": -1,
          "send": 0,
          "wait": 0.32879166974453256,
          "receive": 0.025791669031605124
        },
        "_fetchType": "Memory Cache"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.243Z",
        "time": 4.7063100937521085,
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:5000/static/css/style.css",
          "httpVersion": "HTTP/1.1",
          "cookies": [
            {
              "name": "session",
              "value": ".eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            }
          ],
          "headers": [
            {
              "name": "Accept",
              "value": "text/css,*/*;q=0.1"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "If-Modified-Since",
              "value": "Thu, 17 Jul 2025 21:38:13 GMT"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "If-None-Match",
              "value": "\"1752788293.480996-31605-111025123\""
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:5000/results"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "style"
            },
            {
              "name": "Cookie",
              "value": "session=.eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            },
            {
              "name": "Priority",
              "value": "u=1, i"
            }
          ],
          "queryString": [],
          "headersSize": 1081,
          "bodySize": 0
        },
        "response": {
          "status": 304,
          "statusText": "NOT MODIFIED",
          "httpVersion": "HTTP/1.1",
          "cookies": [],
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:40:09 GMT, Tue, 22 Jul 2025 03:40:09 GMT"
            },
            {
              "name": "ETag",
              "value": "\"1752788293.480996-31605-111025123\""
            },
            {
              "name": "Content-Disposition",
              "value": "inline; filename=style.css"
            },
            {
              "name": "Connection",
              "value": "close"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Server",
              "value": "Werkzeug/3.1.3 Python/3.13.1"
            }
          ],
          "content": {
            "size": 0,
            "compression": 0,
            "mimeType": "text/plain",
            "text": "/* Basic CSS for SBOM Analyzer */\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: Arial, sans-serif;\n    line-height: 1.6;\n    color: #333;\n    background-color: #f4f4f4;\n}\n\n.container {\n    max-width: 2000px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\nheader {\n    text-align: center;\n    margin-bottom: 30px;\n    background: linear-gradient(135deg, #012169 0%, #01194a 100%);\n}\n\nheader h1 {\n    color: #012169;\n    margin-bottom: 10px;\n}\n\n.upload-section {\n    background: white;\n    padding: 30px;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    margin-bottom: 20px;\n}\n\n.file-input {\n    margin-bottom: 20px;\n}\n\n.file-input input[type=\"file\"] {\n    display: none;\n}\n\n.file-input label {\n    display: inline-block;\n    padding: 12px 24px;\n    background: #012169;\n    color: white;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background 0.3s;\n}\n\n.file-input label:hover {\n    background: #2980b9;\n}\n\n.analysis-options {\n    margin-bottom: 20px;\n}\n\n.analysis-options h3 {\n    margin-bottom: 15px;\n    color: #012169;\n}\n\n.analysis-options label {\n    display: block;\n    margin-bottom: 10px;\n    cursor: pointer;\n}\n\n.analyze-btn {\n    background: #27ae60;\n    color: white;\n    padding: 12px 30px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n    transition: background 0.3s;\n}\n\n.analyze-btn:hover {\n    background: #229954;\n}\n\n.loading {\n    text-align: center;\n    padding: 40px;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    border-radius: 12px;\n    color: white;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n    margin: 20px 0;\n}\n\n.loading h3 {\n    margin-bottom: 20px;\n    font-size: 1.4em;\n    font-weight: 300;\n    opacity: 0.9;\n}\n\n/* Modern animated progress bar */\n.progress-container {\n    width: 100%;\n    max-width: 400px;\n    margin: 0 auto;\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 25px;\n    padding: 3px;\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.progress-bar {\n    width: 100%;\n    height: 20px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 20px;\n    overflow: hidden;\n    position: relative;\n}\n\n.progress-fill {\n    height: 100%;\n    background: linear-gradient(90deg, #4facfe 0%, #00f2fe 100%);\n    border-radius: 20px;\n    position: relative;\n    box-shadow: 0 0 20px rgba(79, 172, 254, 0.5);\n    width: 0%; /* Start at 0% */\n    transition: width 0.3s ease-out;\n}\n\n.loading-status {\n    margin-top: 15px;\n    font-size: 0.9em;\n    color: #666;\n    font-style: italic;\n}\n\n.progress-fill::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);\n    animation: shimmer 1.5s ease-in-out infinite;\n}\n\n/* Progress animation - now handled by JavaScript */\n\n/* Shimmer effect */\n@keyframes shimmer {\n    0% { transform: translateX(-100%); }\n    100% { transform: translateX(100%); }\n}\n\n\n\n.hidden {\n    display: none;\n}\n\n\n\n\n\n\n\n/* Graph styles */\n.graph-section {\n    margin-bottom: 80px;\n}\n\n.graph-container {\n    position: relative;\n    min-height: 1000px;\n    border: 1px solid #e9ecef;\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 40px;\n}\n\n.dependency-graph {\n    width: 100%;\n    height: 1000px;\n    background: #fafafa;\n    position: relative;\n    transition: border-color 0.3s ease;\n    border: 1px solid #e1e8ed;\n    border-radius: 8px;\n}\n\n.dependency-graph.interactive {\n    cursor: grab;\n}\n\n.dependency-graph.interactive:active {\n    cursor: grabbing;\n}\n\n\n\n.graph-legend {\n    display: flex;\n    justify-content: center;\n    gap: 20px;\n    margin-bottom: 20px;\n    flex-wrap: wrap;\n}\n\n.legend-item {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.legend-color {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n}\n\n.legend-color.critical { background-color: #dc3545; }\n.legend-color.high { background-color: #dc3545; }\n.legend-color.medium { background-color: #f1c40f; }\n.legend-color.low { background-color: #2ecc71; }\n.legend-color.safe { background-color: #2ecc71; }\n.legend-color.na { background-color: #95a5a6; }\n\n.graph-nodes {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    justify-content: center;\n    margin: 20px 0;\n}\n\n.graph-node {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    color: white;\n    font-size: 0.7em;\n    font-weight: bold;\n    cursor: pointer;\n    transition: transform 0.2s;\n    position: relative;\n}\n\n.graph-node:hover {\n    transform: scale(1.1);\n}\n\n.node-label {\n    text-align: center;\n    line-height: 1.2;\n}\n\n.graph-note {\n    color: #666;\n    font-style: italic;\n    margin-top: 20px;\n}\n\n/* Security overview styles */\n.security-overview {\n    text-align: center;\n}\n\n.security-stats {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 20px;\n    margin-top: 20px;\n}\n\n.security-stats .stat {\n    padding: 20px;\n    background: #f8f9fa;\n    border-radius: 8px;\n}\n\n.security-stats .score {\n    font-size: 2em;\n    font-weight: bold;\n    margin-top: 10px;\n}\n\n.score.critical { color: #dc3545; }\n.score.high { color: #dc3545; }\n.score.medium { color: #f1c40f; }\n.score.low { color: #2ecc71; }\n\n/* Error and no-data styles */\n.error-message {\n    text-align: center;\n    padding: 40px;\n    background: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n.error-message h3 {\n    color: #dc3545;\n    margin-bottom: 15px;\n}\n\n.no-data {\n    text-align: center;\n    color: #666;\n    font-style: italic;\n    padding: 40px;\n}\n\n/* Risk level colors for summary */\n.risk-critical { color: #dc3545; }\n.risk-high { color: #dc3545; }\n.risk-medium { color: #f1c40f; }\n.risk-low { color: #2ecc71; }\n\n/* Responsive design */\n@media (max-width: 768px) {\n    .summary-stats {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    \n    .security-stats {\n        grid-template-columns: 1fr;\n    }\n    \n    .graph-legend {\n        flex-direction: column;\n        align-items: center;\n    }\n    \n    .components-table {\n        font-size: 0.9em;\n    }\n}\n\n/* Graph Controls Styles */\n.graph-controls {\n    background: #f8f9fa;\n    border: 1px solid #dee2e6;\n    border-radius: 8px;\n    padding: 15px;\n    margin: 15px 0;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.controls-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid #dee2e6;\n}\n\n.controls-header h4 {\n    margin: 0;\n    color: #2c3e50;\n    font-size: 16px;\n}\n\n.graph-stats {\n    background: #e9ecef;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 12px;\n    color: #6c757d;\n    font-weight: 500;\n}\n\n.controls-buttons {\n    display: flex;\n    gap: 10px;\n    flex-wrap: wrap;\n    margin-bottom: 10px;\n}\n\n.control-btn {\n    background: #ffffff;\n    border: 1px solid #ced4da;\n    border-radius: 6px;\n    padding: 8px 12px;\n    font-size: 13px;\n    color: #495057;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    font-weight: 500;\n}\n\n.control-btn:hover {\n    background: #e9ecef;\n    border-color: #adb5bd;\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.control-btn:active {\n    transform: translateY(0);\n    box-shadow: 0 1px 2px rgba(0,0,0,0.1);\n}\n\n.control-btn i {\n    font-size: 12px;\n}\n\n.controls-info {\n    font-size: 11px;\n    color: #6c757d;\n    text-align: center;\n    padding-top: 8px;\n    border-top: 1px solid #dee2e6;\n}\n\n/* Responsive design for large graphs */\n@media (max-width: 768px) {\n    .controls-buttons {\n        flex-direction: column;\n    }\n    \n    .control-btn {\n        justify-content: center;\n    }\n    \n    .controls-header {\n        flex-direction: column;\n        gap: 8px;\n        text-align: center;\n    }\n}\n\n/* Compact mode optimizations */\n.graph-container.compact-mode {\n    font-size: 12px;\n}\n\n.graph-container.compact-mode .vis-network {\n    border: 1px solid #dee2e6;\n}\n\n/* Enhanced zoom controls */\n.zoom-controls {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 6px;\n    padding: 8px;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.15);\n    z-index: 1000;\n}\n\n.zoom-btn {\n    background: #ffffff;\n    border: 1px solid #dee2e6;\n    border-radius: 4px;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    margin: 2px;\n    transition: all 0.2s ease;\n}\n\n.zoom-btn:hover {\n    background: #e9ecef;\n    border-color: #adb5bd;\n}\n\n.zoom-btn:active {\n    transform: scale(0.95);\n}\n\n/* Performance optimizations for large graphs */\n.large-graph {\n    position: relative;\n    overflow: hidden;\n}\n\n.large-graph .vis-network {\n    background: #fafafa;\n}\n\n/* Loading states */\n.graph-loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 400px;\n    background: #f8f9fa;\n    border: 2px dashed #dee2e6;\n    border-radius: 8px;\n    color: #6c757d;\n    font-size: 16px;\n}\n\n.graph-loading::before {\n    content: \"🔄\";\n    font-size: 24px;\n    margin-right: 10px;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n}\n\n/* Error states */\n.graph-error {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 400px;\n    background: #fff5f5;\n    border: 2px dashed #feb2b2;\n    border-radius: 8px;\n    color: #c53030;\n    font-size: 16px;\n    text-align: center;\n    padding: 20px;\n}\n\n.graph-error::before {\n    content: \"⚠️\";\n    font-size: 24px;\n    margin-right: 10px;\n}\n\n/* Disable all tooltips completely */\n.vis-tooltip {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n    pointer-events: none !important;\n}\n\n/* Hide tooltips when modal is open */\n.modal-overlay ~ .vis-tooltip,\n.modal-overlay .vis-tooltip {\n    display: none !important;\n}\n\n/* Accessibility improvements */\n.control-btn:focus {\n    outline: 2px solid #007bff;\n    outline-offset: 2px;\n}\n\n.control-btn:focus:not(:focus-visible) {\n    outline: none;\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n    .graph-controls {\n        border: 2px solid #000;\n        background: #fff;\n    }\n    \n    .control-btn {\n        border: 2px solid #000;\n        background: #fff;\n        color: #000;\n    }\n    \n    .control-btn:hover {\n        background: #000;\n        color: #fff;\n    }\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n    .control-btn {\n        transition: none;\n    }\n    \n    .control-btn:hover {\n        transform: none;\n    }\n    \n    .graph-loading::before {\n        animation: none;\n    }\n}\n\n/* Placeholder styles for future features */\n.vulnerability-placeholder,\n.security-placeholder {\n    text-align: center;\n    padding: 40px 20px;\n    background: #f8f9fa;\n    border-radius: 8px;\n    border: 2px dashed #dee2e6;\n    margin: 20px 0;\n}\n\n.placeholder-icon {\n    font-size: 3em;\n    color: #6c757d;\n    margin-bottom: 20px;\n}\n\n.vulnerability-placeholder h4,\n.security-placeholder h4 {\n    color: #495057;\n    margin-bottom: 15px;\n    font-size: 1.3em;\n}\n\n.vulnerability-placeholder p,\n.security-placeholder p {\n    color: #6c757d;\n    margin-bottom: 15px;\n    line-height: 1.6;\n}\n\n.vulnerability-placeholder ul,\n.security-placeholder ul {\n    text-align: left;\n    max-width: 400px;\n    margin: 0 auto;\n    color: #6c757d;\n}\n\n.vulnerability-placeholder li,\n.security-placeholder li {\n    margin-bottom: 8px;\n    padding-left: 20px;\n    position: relative;\n}\n\n.vulnerability-placeholder li::before,\n.security-placeholder li::before {\n    content: \"→\";\n    position: absolute;\n    left: 0;\n    color: #012169;\n    font-weight: bold;\n}\n\n/* Enhanced summary styles */\n.summary-section {\n    margin-bottom: 30px;\n}\n\n.summary-card {\n    background: #ffffff;\n    border-radius: 12px;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n    overflow: hidden;\n}\n\n.summary-header {\n    background: linear-gradient(135deg, #012169 0%, #01194a 100%);\n    color: white;\n    padding: 20px;\n}\n\n.summary-header h2 {\n    margin: 0;\n    font-size: 1.4em;\n    font-weight: 500;\n    color: #fff;\n}\n\n.summary-content {\n    padding: 25px;\n}\n\n.summary-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 20px;\n}\n\n.summary-item {\n    text-align: center;\n    padding: 20px;\n    background: #f8f9fa;\n    border-radius: 8px;\n    border: 1px solid #e9ecef;\n}\n\n.summary-label {\n    font-size: 0.9em;\n    color: #6c757d;\n    margin-bottom: 8px;\n    font-weight: 500;\n}\n\n.summary-value {\n    font-size: 1.8em;\n    font-weight: bold;\n    color: #2c3e50;\n}\n\n/* Tab navigation styles */\n.tab-navigation {\n    display: flex;\n    background: #f8f9fa;\n    border-radius: 8px;\n    padding: 5px;\n    margin-bottom: 20px;\n    overflow-x: auto;\n}\n\n.tab-btn {\n    background: transparent;\n    border: none;\n    padding: 12px 20px;\n    border-radius: 6px;\n    cursor: pointer;\n    font-size: 0.9em;\n    font-weight: 500;\n    color: #6c757d;\n    transition: all 0.3s ease;\n    white-space: nowrap;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.tab-btn:hover {\n    background: #e9ecef;\n    color: #495057;\n}\n\n.tab-btn.active {\n    background: #012169;\n    color: white;\n}\n\n.tab-content {\n    background: #ffffff;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.08);\n}\n\n.tab-pane {\n    display: none;\n    padding: 25px;\n}\n\n.tab-pane.active {\n    display: block;\n}\n\n.tab-header {\n    margin-bottom: 25px;\n    padding-bottom: 15px;\n    border-bottom: 1px solid #e9ecef;\n}\n\n.tab-header h3 {\n    margin: 0 0 8px 0;\n    color: #2c3e50;\n    font-size: 1.3em;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.tab-header p {\n    margin: 0;\n    color: #6c757d;\n    font-size: 0.95em;\n}\n\n/* Components table styles */\n.components-table {\n    overflow-x: auto;\n}\n\n.components-table table {\n    width: 100%;\n    border-collapse: collapse;\n    background: white;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.components-table th {\n    background: #f8f9fa;\n    padding: 15px 12px;\n    text-align: left;\n    font-weight: 600;\n    color: #495057;\n    border-bottom: 2px solid #dee2e6;\n}\n\n.components-table td {\n    padding: 12px;\n    border-bottom: 1px solid #e9ecef;\n    color: #2c3e50;\n}\n\n.components-table tr:hover {\n    background: #f8f9fa;\n}\n\n/* Responsive design improvements */\n@media (max-width: 768px) {\n    .summary-grid {\n        grid-template-columns: repeat(2, 1fr);\n        gap: 15px;\n    }\n    \n    .summary-item {\n        padding: 15px;\n    }\n    \n    .summary-value {\n        font-size: 1.5em;\n    }\n    \n    .tab-navigation {\n        flex-wrap: wrap;\n    }\n    \n    .tab-btn {\n        flex: 1;\n        min-width: 120px;\n        justify-content: center;\n    }\n    \n    .components-table {\n        font-size: 0.9em;\n    }\n    \n    .components-table th,\n    .components-table td {\n        padding: 8px 6px;\n    }\n}\n\n@media (max-width: 480px) {\n    .summary-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .tab-btn {\n        min-width: 100px;\n        font-size: 0.8em;\n        padding: 10px 12px;\n    }\n    \n    .tab-btn i {\n        display: none;\n    }\n}\n\n/* Modal styles */\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n    animation: fadeIn 0.3s ease-in-out;\n}\n\n.modal-content {\n    background: white;\n    padding: 25px;\n    border-radius: 12px;\n    max-width: 600px;\n    max-height: 80vh;\n    overflow-y: auto;\n    position: relative;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n    border: 1px solid #e1e8ed;\n    animation: slideIn 0.3s ease-out;\n}\n\n.modal-close {\n    position: absolute;\n    top: 15px;\n    right: 20px;\n    font-size: 28px;\n    cursor: pointer;\n    color: #666;\n    font-weight: bold;\n    transition: color 0.2s ease;\n}\n\n.modal-close:hover {\n    color: #e74c3c;\n}\n\n@keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n@keyframes slideIn {\n    from { \n        opacity: 0;\n        transform: translateY(-20px) scale(0.95);\n    }\n    to { \n        opacity: 1;\n        transform: translateY(0) scale(1);\n    }\n}\n\n/* Vulnerability modal styles */\n.node-details-popup {\n    max-width: 100%;\n}\n\n.node-details-popup h3 {\n    color: #2c3e50;\n    margin-bottom: 20px;\n    border-bottom: 2px solid #012169;\n    padding-bottom: 10px;\n}\n\n.detail-row {\n    margin-bottom: 12px;\n    padding: 8px 0;\n    border-bottom: 1px solid #ecf0f1;\n}\n\n.detail-row:last-child {\n    border-bottom: none;\n}\n\n.security-section {\n    margin: 20px 0;\n    padding: 15px;\n    background: #f8f9fa;\n    border-radius: 8px;\n    border-left: 4px solid #012169;\n}\n\n.security-section h4 {\n    color: #2c3e50;\n    margin-bottom: 15px;\n}\n\n.risk-summary {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    gap: 15px;\n    margin-bottom: 15px;\n}\n\n.risk-level, .risk-score, .vuln-count {\n    padding: 10px;\n    border-radius: 6px;\n    text-align: center;\n    font-weight: 500;\n}\n\n.risk-level.safe {\n    background: #d5e8d4;\n    color: #2e7d32;\n    border: 1px solid #4caf50;\n}\n\n.risk-level.low {\n    background: #fff3e0;\n    color: #f57c00;\n    border: 1px solid #ff9800;\n}\n\n.risk-level.medium {\n    background: #fff8e1;\n    color: #f57f17;\n    border: 1px solid #ffc107;\n}\n\n.risk-level.high {\n    background: #ffebee;\n    color: #c62828;\n    border: 1px solid #f44336;\n}\n\n.risk-level.critical {\n    background: #ffebee;\n    color: #b71c1c;\n    border: 1px solid #d32f2f;\n}\n\n.risk-level.na {\n    color: #95a5a6;\n    font-weight: bold;\n}\n\n.na-status {\n    color: #95a5a6;\n    font-weight: bold;\n    font-style: italic;\n}\n\n.risk-safe {\n    color: #012169;\n}\n\n.recommendation {\n    padding: 12px;\n    background: #e3f2fd;\n    border-radius: 6px;\n    margin-top: 15px;\n}\n\n.vulnerabilities-section {\n    margin-top: 20px;\n}\n\n.vulnerabilities-section h4 {\n    color: #2c3e50;\n    margin-bottom: 15px;\n}\n\n.vuln-list {\n    max-height: 70vh;\n    overflow-y: auto;\n    padding-right: 8px;\n}\n\n.vuln-item {\n    border: 1px solid #e9ecef;\n    border-radius: 6px;\n    padding: 12px;\n    margin-bottom: 12px;\n    background: #fff;\n    transition: all 0.2s ease;\n}\n\n.vuln-item:hover {\n    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n    transform: translateY(-1px);\n}\n\n.vuln-item.risk-critical {\n    border-left: 4px solid #dc3545;\n    background: linear-gradient(135deg, #fff 0%, #fff5f5 100%);\n}\n\n.vuln-item.risk-high {\n    border-left: 4px solid #fd7e14;\n    background: linear-gradient(135deg, #fff 0%, #fff8f0 100%);\n}\n\n.vuln-item.risk-medium {\n    border-left: 4px solid #f1c40f;\n    background: linear-gradient(135deg, #fff 0%, #fffdf0 100%);\n}\n\n.vuln-item.risk-low {\n    border-left: 4px solid #2ecc71;\n    background: linear-gradient(135deg, #fff 0%, #f0fff0 100%);\n}\n\n.vuln-item.risk-none {\n    border-left: 4px solid #6c757d;\n    background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n}\n\n.vuln-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: 8px;\n    flex-wrap: wrap;\n    gap: 8px;\n}\n\n.vuln-id-section {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    flex: 1;\n    min-width: 0;\n}\n\n.vuln-id-section strong {\n    font-size: 14px;\n    color: #2c3e50;\n    word-break: break-all;\n}\n\n.cvss-badge {\n    background: #6c757d;\n    color: white;\n    padding: 2px 6px;\n    border-radius: 4px;\n    font-size: 11px;\n    font-weight: bold;\n    white-space: nowrap;\n}\n\n.vuln-title {\n    font-weight: 600;\n    color: #495057;\n    margin-bottom: 6px;\n    font-size: 13px;\n    line-height: 1.4;\n}\n\n.vuln-description {\n    color: #6c757d;\n    margin-bottom: 8px;\n    font-size: 12px;\n    line-height: 1.5;\n}\n\n.severity-badge {\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 10px;\n    font-weight: bold;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    white-space: nowrap;\n    min-width: 60px;\n    text-align: center;\n}\n\n.severity-badge.critical {\n    background: #dc3545;\n    color: white;\n}\n\n.severity-badge.high {\n    background: #dc3545;\n    color: white;\n}\n\n.severity-badge.medium {\n    background: #ffc107;\n    color: #212529;\n}\n\n.severity-badge.low {\n    background: #28a745;\n    color: white;\n}\n\n.severity-badge.none {\n    background: #6c757d;\n    color: white;\n}\n\n.vuln-item {\n    border: 1px solid #e9ecef;\n    border-radius: 6px;\n    padding: 12px;\n    margin-bottom: 12px;\n    background: #fff;\n    transition: all 0.2s ease;\n}\n\n.vuln-item:hover {\n    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n    transform: translateY(-1px);\n}\n\n.vuln-item.risk-critical {\n    border-left: 4px solid #dc3545;\n    background: linear-gradient(135deg, #fff 0%, #fff5f5 100%);\n}\n\n.vuln-item.risk-high {\n    border-left: 4px solid #fd7e14;\n    background: linear-gradient(135deg, #fff 0%, #fff8f0 100%);\n}\n\n.vuln-item.risk-medium {\n    border-left: 4px solid #f1c40f;\n    background: linear-gradient(135deg, #fff 0%, #fffdf0 100%);\n}\n\n.vuln-item.risk-low {\n    border-left: 4px solid #2ecc71;\n    background: linear-gradient(135deg, #fff 0%, #f0fff0 100%);\n}\n\n.vuln-item.risk-none {\n    border-left: 4px solid #6c757d;\n    background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n}\n\n.vuln-recommendation {\n    background: #f8f9fa;\n    padding: 8px 12px;\n    border-radius: 4px;\n    margin: 8px 0;\n    font-size: 12px;\n    border-left: 3px solid #007bff;\n}\n\n.vuln-references {\n    margin-top: 8px;\n}\n\n.vuln-references ul {\n    list-style: none;\n    padding: 0;\n    margin: 4px 0 0 0;\n}\n\n.vuln-references li {\n    margin-bottom: 4px;\n}\n\n.vuln-references a {\n    color: #007bff;\n    text-decoration: none;\n    font-size: 11px;\n    word-break: break-all;\n    display: inline-block;\n    padding: 2px 0;\n}\n\n.vuln-references a:hover {\n    color: #0056b3;\n    text-decoration: underline;\n}\n\n.subdeps-list {\n    margin-top: 15px;\n    padding: 10px;\n    background: #f8f9fa;\n    border-radius: 6px;\n}\n\n.subdeps-list ul {\n    list-style: none;\n    padding-left: 0;\n    margin-top: 8px;\n}\n\n.subdeps-list li {\n    padding: 4px 0;\n    border-bottom: 1px solid #e9ecef;\n}\n\n.subdeps-list li:last-child {\n    border-bottom: none;\n}\n\n/* Development mode notice */\n.dev-notice {\n    margin: 20px 0;\n    padding: 15px;\n    background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);\n    border: 1px solid #ffc107;\n    border-radius: 8px;\n    border-left: 4px solid #ffc107;\n}\n\n/* Package Health Warning - Black background with white text */\n.package-health-warning {\n    background: #000000 !important;\n    border: 1px solid #333333 !important;\n    border-left: 4px solid #dc3545 !important;\n    color: #ffffff !important;\n}\n\n.package-health-warning .notice-content h3 {\n    color: #ffffff !important;\n}\n\n.package-health-warning .notice-content p {\n    color: #ffffff !important;\n}\n\n.package-health-warning .notice-content i {\n    color: #ffffff !important;\n}\n\n.notice-content h3 {\n    color: #856404;\n    margin-bottom: 8px;\n    font-size: 1.1em;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.notice-content p {\n    color: #856404;\n    margin: 0;\n    line-height: 1.5;\n    font-size: 0.95em;\n} \n\n.graph-info-box {\n    position: absolute;\n    top: 18px;\n    right: 32px;\n    background: rgba(255,255,255,0.97);\n    border: 1px solid #e1e8ed;\n    border-radius: 8px;\n    box-shadow: 0 2px 8px rgba(44,62,80,0.08);\n    padding: 16px 22px 12px 18px;\n    z-index: 10;\n    min-width: 260px;\n    max-width: 340px;\n    font-size: 1em;\n    color: #2c3e50;\n    line-height: 1.5;\n    pointer-events: auto;\n    margin: 0;\n    float: none;\n    clear: none;\n} \n\n/* Vulnerability indicator in node labels */\n.vis-network .vis-node .vis-label {\n    text-align: center;\n    line-height: 1.2;\n}\n\n/* Style for the vulnerability count indicator in node labels */\n.vis-network .vis-node .vis-label {\n    text-align: center;\n    line-height: 1.2;\n    font-size: 14px;\n}\n\n/* Legacy vuln tag styles (keeping for backward compatibility) */\n.vis-network span.vuln, .vuln, vuln, vuln {\n    color: #111 !important;\n    background: #ffd700;\n    border-radius: 8px;\n    font-size: 0.95em;\n    font-weight: bold;\n    padding: 1px 6px;\n    margin-left: 6px;\n    margin-top: 2px;\n    display: inline-block;\n    vertical-align: middle;\n    box-shadow: 0 1px 2px rgba(0,0,0,0.08);\n} \n\n.wide-node-modal {\n    max-width: 1400px !important;\n    min-width: 1000px;\n    width: 98vw;\n    padding: 32px 36px 28px 36px;\n    display: block;\n    min-height: 700px;\n    max-height: 95vh;\n    height: auto;\n    overflow-y: auto;\n}\n.node-modal-columns {\n    display: flex;\n    flex-direction: row;\n    gap: 48px;\n    min-height: 600px;\n    height: 70vh;\n}\n.node-modal-left {\n    flex: 1 1 380px;\n    min-width: 320px;\n    max-width: 500px;\n    padding-right: 24px;\n    border-right: 1.5px solid #e1e8ed;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n}\n.node-modal-right {\n    flex: 3 1 900px;\n    min-width: 400px;\n    padding-left: 24px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    overflow-y: visible;\n}\n.future-vulnerabilities-section {\n    margin-top: 32px;\n    background: #f8f9fa;\n    border: 1.5px solid #ffe58f;\n    border-radius: 8px;\n    padding: 18px 18px 12px 18px;\n}\n.future-vuln-explanation {\n    color: #ad8b00;\n    font-size: 1em;\n    margin-bottom: 10px;\n} \n\n.spaced-security-section {\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n    margin-top: 18px;\n    margin-bottom: 18px;\n}\n.risk-summary {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    margin-top: 8px;\n    margin-bottom: 8px;\n} \n\n/* GitHub Section Styles */\n.github-section {\n    margin: 20px 0;\n    padding: 15px;\n    background: #f8f9fa;\n    border-radius: 8px;\n    border-left: 4px solid #333;\n}\n\n.github-section h4 {\n    margin: 0 0 15px 0;\n    color: #333;\n    font-size: 1.1em;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.github-section h4 i {\n    color: #333;\n}\n\n.github-info {\n    font-size: 0.9em;\n}\n\n.github-stats {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n    margin-top: 10px;\n    padding-top: 10px;\n    border-top: 1px solid #e9ecef;\n}\n\n.github-stat {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #6c757d;\n    font-size: 0.85em;\n}\n\n.github-stat i {\n    color: #333;\n}\n\n.github-stat:first-child i {\n    color: #f1c40f;\n}\n\n.github-stat:nth-child(2) i {\n    color: #012169;\n}\n\n.github-stat:nth-child(3) i {\n    color: #e74c3c;\n}\n\n.github-stat:nth-child(4) i {\n    color: #9b59b6;\n}\n\n.github-info .detail-row {\n    margin-bottom: 8px;\n}\n\n.github-info .detail-row a {\n    color: #012169;\n    text-decoration: none;\n}\n\n.github-info .detail-row a:hover {\n    text-decoration: underline;\n}\n\n/* Package Health Warning Styles */\n.health-issues-list {\n    margin-top: 15px;\n}\n\n.health-issue {\n    margin-bottom: 15px;\n    padding: 15px;\n    border-radius: 8px;\n    background: #2c3e50;\n    color: white;\n}\n\n.health-issue.health-critical {\n    background: #dc3545;\n    color: white;\n}\n\n.health-issue.health-high {\n    background: #e74c3c;\n    color: white;\n}\n\n.health-issue.health-medium {\n    background: #f39c12;\n    color: white;\n}\n\n.health-issue.health-low {\n    background: #f1c40f;\n    color: #2c3e50;\n}\n\n.health-issue-header {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 10px;\n    font-weight: bold;\n}\n\n.health-issue-header i {\n    font-size: 1.2em;\n}\n\n.health-issue.health-critical .health-issue-header i {\n    color: white;\n}\n\n.health-issue.health-high .health-issue-header i {\n    color: white;\n}\n\n.health-issue.health-medium .health-issue-header i {\n    color: white;\n}\n\n.health-issue.health-low .health-issue-header i {\n    color: #2c3e50;\n}\n\n.health-issue-details {\n    font-size: 0.9em;\n    line-height: 1.4;\n}\n\n.health-issue-details p {\n    margin: 5px 0;\n}\n\n.health-issue-details strong {\n    color: white;\n} \n\n.health-metric {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 0;\n    border-bottom: 1px solid #eee;\n}\n\n.health-metric:last-child {\n    border-bottom: none;\n}\n\n.metric-label {\n    font-weight: bold;\n    color: #333;\n    min-width: 120px;\n}\n\n.metric-value {\n    font-weight: 500;\n    text-transform: capitalize;\n}\n\n.metric-detail {\n    font-size: 0.85em;\n    color: #666;\n    font-style: italic;\n    margin-left: 8px;\n} \n\n.vulnerability-list-container {\n    flex: 1;\n    overflow-y: visible;\n    padding-top: 20px;\n}\n\n.vulnerability-list-container .vulnerabilities-section {\n    margin-bottom: 30px;\n}\n\n.vulnerability-list-container .future-vulnerabilities-section {\n    margin-bottom: 20px;\n} \n\n.dependency-risk.risk-na {\n    color: #95a5a6;\n    font-weight: bold;\n    font-style: italic;\n}\n\n.dependency-item[style*=\"#95a5a6\"] {\n    background-color: #f8f9fa;\n} \n\n.instruction-box {\n    background: rgba(52, 152, 219, 0.18) !important; /* translucent blue */\n    border: 1.5px solid #012169 !important;\n    border-left: 4px solid #2980b9 !important;\n    color: #154360 !important;\n    box-shadow: 0 2px 12px rgba(52, 152, 219, 0.08);\n}\n.instruction-box .notice-content h3 {\n    color: #154360 !important;\n}\n.instruction-box .notice-content p {\n    color: #154360 !important;\n} \n\n/* Health issue indicators */\n.dependency-health {\n    display: inline-block;\n    padding: 2px 6px;\n    border-radius: 3px;\n    font-size: 0.8em;\n    font-weight: bold;\n    margin-left: 8px;\n    background: rgba(220, 53, 69, 0.1);\n    color: #dc3545;\n    border: 1px solid rgba(220, 53, 69, 0.3);\n}\n\n.dependency-health[title*=\"critical\"] {\n    background: rgba(220, 53, 69, 0.15);\n    color: #dc3545;\n    border-color: rgba(220, 53, 69, 0.4);\n}\n\n.dependency-health[title*=\"high\"] {\n    background: rgba(220, 53, 69, 0.1);\n    color: #dc3545;\n    border-color: rgba(220, 53, 69, 0.3);\n}\n\n.dependency-health[title*=\"medium\"] {\n    background: rgba(241, 196, 15, 0.15);\n    color: #f39c12;\n    border-color: rgba(241, 196, 15, 0.4);\n}\n\n.dependency-health[title*=\"low\"] {\n    background: rgba(46, 204, 113, 0.1);\n    color: #27ae60;\n    border-color: rgba(46, 204, 113, 0.3);\n}\n\n/* Graph node health indicators */\n.vis-network .vis-node .vis-label {\n    font-family: Arial, sans-serif;\n    font-size: 14px;\n    font-weight: bold;\n    color: #fff;\n    text-shadow: 1px 1px 2px rgba(0,0,0,0.5);\n    line-height: 1.2;\n}\n\n/* Health issue styling for graph nodes */\n.health-critical-node {\n    border: 3px solid #dc3545 !important;\n    box-shadow: 0 0 10px rgba(220, 53, 69, 0.5) !important;\n}\n\n.health-high-node {\n    border: 2px solid #dc3545 !important;\n    box-shadow: 0 0 8px rgba(220, 53, 69, 0.4) !important;\n}\n\n.health-medium-node {\n    border: 2px solid #f39c12 !important;\n    box-shadow: 0 0 6px rgba(241, 196, 15, 0.4) !important;\n}\n\n.health-low-node {\n    border: 1px solid #27ae60 !important;\n    box-shadow: 0 0 4px rgba(46, 204, 113, 0.3) !important;\n} \n\n/* Used for the layout of the dependency list cards (name, version, risk, vuln count) */\n.dep-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n.dep-info .dep-right {\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n} "
          },
          "redirectURL": "",
          "headersSize": 277,
          "bodySize": 0,
          "_transferSize": 277
        },
        "cache": {},
        "timings": {
          "blocked": 0.8389553622691892,
          "dns": 0.00008333154255524278,
          "connect": 0.00012499367585405707,
          "ssl": -1,
          "send": 1.522624384961091,
          "wait": 2.3351548952632584,
          "receive": 0.009283787221647799
        },
        "serverIPAddress": "127.0.0.1",
        "_serverPort": 5000,
        "connection": "34",
        "_fetchType": "Memory Cache",
        "_priority": "high"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.261Z",
        "time": 14.01278607227141,
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:5000/api/scan_data",
          "httpVersion": "HTTP/1.1",
          "cookies": [
            {
              "name": "session",
              "value": ".eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            }
          ],
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Cookie",
              "value": "session=.eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:5000/results"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Priority",
              "value": "u=3, i"
            }
          ],
          "queryString": [],
          "headersSize": 954,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "cookies": [],
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:40:09 GMT"
            },
            {
              "name": "Vary",
              "value": "Cookie"
            },
            {
              "name": "Connection",
              "value": "close"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Content-Length",
              "value": "39766"
            },
            {
              "name": "Server",
              "value": "Werkzeug/3.1.3 Python/3.13.1"
            }
          ],
          "content": {
            "size": 39766,
            "compression": 0,
            "mimeType": "application/json",
            "text": "{\"dependencies\":[{\"name\":\"httpx\",\"type\":\"python\",\"version\":\"flexible\"},{\"github\":{\"cached_at\":\"2025-07-17 20:48:26\",\"closed_issues_count\":0,\"description\":\"An async GitHub API library for Python\",\"forks_count\":58,\"full_name\":\"gidgethub/gidgethub\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":38,\"score\":3,\"status\":\"active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":58,\"score\":3,\"status\":\"moderate_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":38,\"issue_ratio\":1.0,\"open_issues\":25,\"raw_score\":0.448,\"recency_score\":0.896,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":58,\"raw_score\":14.51,\"score\":4,\"stars\":395,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":13,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/gidgethub/gidgethub\",\"language\":\"Python\",\"open_issues_count\":25,\"platform\":\"github\",\"pushed_at\":\"2025-06-09T17:29:15Z\",\"stargazers_count\":395},\"name\":\"gidgethub\",\"type\":\"python\",\"version\":\"4.0.0\"},{\"github\":{\"cached_at\":\"2025-07-17 21:09:42\",\"closed_issues_count\":0,\"description\":\"The Web framework for perfectionists with deadlines.\",\"forks_count\":32720,\"full_name\":\"django/django\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":0,\"score\":4,\"status\":\"very_active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":32720,\"score\":4,\"status\":\"strong_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":0,\"issue_ratio\":1.0,\"open_issues\":358,\"raw_score\":0.5,\"recency_score\":1.0,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":32720,\"raw_score\":31.36,\"score\":4,\"stars\":84251,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":15,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/django/django\",\"language\":\"Python\",\"open_issues_count\":358,\"platform\":\"github\",\"pushed_at\":\"2025-07-17T20:36:02Z\",\"stargazers_count\":84251},\"name\":\"django\",\"type\":\"python\",\"version\":\"2.1\"},{\"github\":{\"cached_at\":\"2025-07-17 21:09:42\",\"closed_issues_count\":0,\"description\":\"The Web framework for perfectionists with deadlines.\",\"forks_count\":32720,\"full_name\":\"django/django\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":0,\"score\":4,\"status\":\"very_active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":32720,\"score\":4,\"status\":\"strong_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":0,\"issue_ratio\":1.0,\"open_issues\":358,\"raw_score\":0.5,\"recency_score\":1.0,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":32720,\"raw_score\":31.36,\"score\":4,\"stars\":84251,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":15,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/django/django\",\"language\":\"Python\",\"open_issues_count\":358,\"platform\":\"github\",\"pushed_at\":\"2025-07-17T20:36:02Z\",\"stargazers_count\":84251},\"name\":\"django\",\"type\":\"python\",\"version\":\"2.0\"},{\"name\":\"PyQt5\",\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"rich\",\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"click\",\"type\":\"python\",\"version\":\"flexible\"}],\"dependency_tree\":[{\"dev\":false,\"name\":\"httpx\",\"subdependencies\":[{\"name\":\"anyio\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"certifi\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"httpcore\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"1.*\"},{\"name\":\"idna\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":false,\"name\":\"gidgethub\",\"subdependencies\":[{\"name\":\"uritemplate\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.0.1\"},{\"name\":\"PyJWT\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"2.4.0\"}],\"type\":\"python\",\"version\":\"4.0.0\"},{\"dev\":false,\"name\":\"django\",\"subdependencies\":[{\"name\":\"asgiref\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.8.1\"},{\"name\":\"sqlparse\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"0.3.1\"},{\"name\":\"tzdata; sys_platform\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"win32\\\"\"}],\"type\":\"python\",\"version\":\"2.1\"},{\"dev\":false,\"name\":\"django\",\"subdependencies\":[{\"name\":\"asgiref\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.8.1\"},{\"name\":\"sqlparse\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"0.3.1\"},{\"name\":\"tzdata; sys_platform\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"win32\\\"\"}],\"type\":\"python\",\"version\":\"2.0\"},{\"dev\":true,\"name\":\"PyQt5\",\"subdependencies\":[{\"name\":\"PyQt5-sip\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"PyQt5-Qt5\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":true,\"name\":\"rich\",\"subdependencies\":[{\"name\":\"typing-extensions\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"pygments\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"markdown-it-py\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"2.2.0\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":true,\"name\":\"click\",\"subdependencies\":[{\"name\":\"colorama; platform_system\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"Windows\\\"\"}],\"type\":\"python\",\"version\":\"flexible\"}],\"filename\":\"requirements.txt\",\"project_type\":\"python\",\"sbom_data\":{\"dependencies\":[{\"name\":\"httpx\",\"type\":\"python\",\"version\":\"flexible\"},{\"github\":{\"cached_at\":\"2025-07-17 20:48:26\",\"closed_issues_count\":0,\"description\":\"An async GitHub API library for Python\",\"forks_count\":58,\"full_name\":\"gidgethub/gidgethub\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":38,\"score\":3,\"status\":\"active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":58,\"score\":3,\"status\":\"moderate_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":38,\"issue_ratio\":1.0,\"open_issues\":25,\"raw_score\":0.448,\"recency_score\":0.896,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":58,\"raw_score\":14.51,\"score\":4,\"stars\":395,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":13,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/gidgethub/gidgethub\",\"language\":\"Python\",\"open_issues_count\":25,\"platform\":\"github\",\"pushed_at\":\"2025-06-09T17:29:15Z\",\"stargazers_count\":395},\"name\":\"gidgethub\",\"type\":\"python\",\"version\":\"4.0.0\"},{\"github\":{\"cached_at\":\"2025-07-17 21:09:42\",\"closed_issues_count\":0,\"description\":\"The Web framework for perfectionists with deadlines.\",\"forks_count\":32720,\"full_name\":\"django/django\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":0,\"score\":4,\"status\":\"very_active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":32720,\"score\":4,\"status\":\"strong_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":0,\"issue_ratio\":1.0,\"open_issues\":358,\"raw_score\":0.5,\"recency_score\":1.0,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":32720,\"raw_score\":31.36,\"score\":4,\"stars\":84251,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":15,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/django/django\",\"language\":\"Python\",\"open_issues_count\":358,\"platform\":\"github\",\"pushed_at\":\"2025-07-17T20:36:02Z\",\"stargazers_count\":84251},\"name\":\"django\",\"type\":\"python\",\"version\":\"2.1\"},{\"github\":{\"cached_at\":\"2025-07-17 21:09:42\",\"closed_issues_count\":0,\"description\":\"The Web framework for perfectionists with deadlines.\",\"forks_count\":32720,\"full_name\":\"django/django\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":0,\"score\":4,\"status\":\"very_active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":32720,\"score\":4,\"status\":\"strong_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":0,\"issue_ratio\":1.0,\"open_issues\":358,\"raw_score\":0.5,\"recency_score\":1.0,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":32720,\"raw_score\":31.36,\"score\":4,\"stars\":84251,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":15,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/django/django\",\"language\":\"Python\",\"open_issues_count\":358,\"platform\":\"github\",\"pushed_at\":\"2025-07-17T20:36:02Z\",\"stargazers_count\":84251},\"name\":\"django\",\"type\":\"python\",\"version\":\"2.0\"},{\"name\":\"PyQt5\",\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"rich\",\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"click\",\"type\":\"python\",\"version\":\"flexible\"}],\"dependency_tree\":[{\"dev\":false,\"name\":\"httpx\",\"subdependencies\":[{\"name\":\"anyio\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"certifi\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"httpcore\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"1.*\"},{\"name\":\"idna\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":false,\"name\":\"gidgethub\",\"subdependencies\":[{\"name\":\"uritemplate\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.0.1\"},{\"name\":\"PyJWT\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"2.4.0\"}],\"type\":\"python\",\"version\":\"4.0.0\"},{\"dev\":false,\"name\":\"django\",\"subdependencies\":[{\"name\":\"asgiref\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.8.1\"},{\"name\":\"sqlparse\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"0.3.1\"},{\"name\":\"tzdata; sys_platform\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"win32\\\"\"}],\"type\":\"python\",\"version\":\"2.1\"},{\"dev\":false,\"name\":\"django\",\"subdependencies\":[{\"name\":\"asgiref\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.8.1\"},{\"name\":\"sqlparse\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"0.3.1\"},{\"name\":\"tzdata; sys_platform\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"win32\\\"\"}],\"type\":\"python\",\"version\":\"2.0\"},{\"dev\":true,\"name\":\"PyQt5\",\"subdependencies\":[{\"name\":\"PyQt5-sip\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"PyQt5-Qt5\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":true,\"name\":\"rich\",\"subdependencies\":[{\"name\":\"typing-extensions\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"pygments\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"markdown-it-py\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"2.2.0\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":true,\"name\":\"click\",\"subdependencies\":[{\"name\":\"colorama; platform_system\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"Windows\\\"\"}],\"type\":\"python\",\"version\":\"flexible\"}]},\"skipped_dependencies\":[\"PyQt5\",\"click\",\"httpx\",\"rich\",\"tzdata; sys_platform\"],\"vulnerabilities\":{\"PyJWT\":{\"package_name\":\"PyJWT\",\"recommendation\":\"This package appears to be secure with no known vulnerabilities.\",\"risk_level\":\"safe\",\"risk_score\":0.0,\"version\":\"2.4.0\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"PyQt5\":{\"package_name\":\"PyQt5\",\"recommendation\":\"Cannot scan vulnerabilities without specific version number\",\"risk_level\":\"na\",\"risk_score\":0,\"version\":\"unknown\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"asgiref\":{\"package_name\":\"asgiref\",\"recommendation\":\"This package appears to be secure with no known vulnerabilities.\",\"risk_level\":\"safe\",\"risk_score\":0.0,\"version\":\"3.8.1\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"click\":{\"package_name\":\"click\",\"recommendation\":\"Cannot scan vulnerabilities without specific version number\",\"risk_level\":\"na\",\"risk_score\":0,\"version\":\"unknown\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"django\":{\"package_name\":\"django\",\"recommendation\":\"CRITICAL: This package has severe vulnerabilities. Consider replacing it with a secure alternative or updating to a patched version immediately.\",\"risk_level\":\"critical\",\"risk_score\":100.0,\"version\":\"2.0\",\"vulnerabilities\":[{\"cve_id\":\"GHSA-2f9x-5v75-3qv4\",\"cvss_score\":3.0,\"description\":\"Django Denial-of-service possibility in truncatechars_html and truncatewords_html template filters\",\"id\":\"GHSA-2f9x-5v75-3qv4\",\"recommendation\":\"Monitor django for security updates and apply them when available.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2018-7537\",\"https://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c\",\"https://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539\",\"https://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa\",\"https://access.redhat.com/errata/RHSA-2018:2927\",\"https://access.redhat.com/errata/RHSA-2019:0265\",\"https://github.com/advisories/GHSA-2f9x-5v75-3qv4\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2018-6.yaml\",\"https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html\",\"https://usn.ubuntu.com/3591-1\",\"https://www.debian.org/security/2018/dsa-4161\",\"https://www.djangoproject.com/weblog/2018/mar/06/security-releases\",\"https://osv.dev/vulnerability/GHSA-2f9x-5v75-3qv4\"],\"severity\":\"low\",\"title\":\"GHSA-2f9x-5v75-3qv4\"},{\"cve_id\":\"GHSA-337x-4q8g-prc5\",\"cvss_score\":8.0,\"description\":\"Improper Input Validation in Django\",\"id\":\"GHSA-337x-4q8g-prc5\",\"recommendation\":\"Update django to a patched version as soon as possible.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2019-3498\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"https://github.com/advisories/GHSA-337x-4q8g-prc5\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2019-17.yaml\",\"https://groups.google.com/forum/#!topic/django-announce/VYU7xQQTEPQ\",\"https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HVXDOVCXLD74SHR2BENGCE2OOYYYWJHZ\",\"https://usn.ubuntu.com/3851-1\",\"https://web.archive.org/web/20200227094237/http://www.securityfocus.com/bid/106453\",\"https://www.debian.org/security/2019/dsa-4363\",\"https://www.djangoproject.com/weblog/2019/jan/04/security-releases\",\"https://osv.dev/vulnerability/GHSA-337x-4q8g-prc5\"],\"severity\":\"high\",\"title\":\"GHSA-337x-4q8g-prc5\"},{\"cve_id\":\"GHSA-5hg3-6c2f-f3wr\",\"cvss_score\":5.5,\"description\":\"Django open redirect\",\"id\":\"GHSA-5hg3-6c2f-f3wr\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2018-14574\",\"https://github.com/django/django/commit/6fffc3c6d420e44f4029d5643f38d00a39b08525\",\"https://github.com/django/django/commit/c4e5ff7fdb5fce447675e90291fd33fddd052b3c\",\"https://github.com/django/django/commit/d6eaee092709aad477a9894598496c6deec532ff\",\"https://access.redhat.com/errata/RHSA-2019:0265\",\"https://github.com/advisories/GHSA-5hg3-6c2f-f3wr\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2018-2.yaml\",\"https://usn.ubuntu.com/3726-1\",\"https://web.archive.org/web/20190901075632/http://www.securitytracker.com/id/1041403\",\"https://web.archive.org/web/20200227115315/http://www.securityfocus.com/bid/104970\",\"https://www.debian.org/security/2018/dsa-4264\",\"https://www.djangoproject.com/weblog/2018/aug/01/security-releases\",\"https://osv.dev/vulnerability/GHSA-5hg3-6c2f-f3wr\"],\"severity\":\"medium\",\"title\":\"GHSA-5hg3-6c2f-f3wr\"},{\"cve_id\":\"GHSA-68w8-qjq3-2gfm\",\"cvss_score\":5.5,\"description\":\"Path Traversal in Django\",\"id\":\"GHSA-68w8-qjq3-2gfm\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2021-33203\",\"https://github.com/django/django/commit/053cc9534d174dc89daba36724ed2dcb36755b90\",\"https://github.com/django/django/commit/20c67a0693c4ede2b09af02574823485e82e4c8f\",\"https://github.com/django/django/commit/dfaba12cda060b8b292ae1d271b44bf810b1c5b9\",\"https://docs.djangoproject.com/en/3.2/releases/security\",\"https://github.com/advisories/GHSA-68w8-qjq3-2gfm\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2021-98.yaml\",\"https://groups.google.com/forum/#!forum/django-announce\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV\",\"https://security.netapp.com/advisory/ntap-20210727-0004\",\"https://www.djangoproject.com/weblog/2021/jun/02/security-releases\",\"https://osv.dev/vulnerability/GHSA-68w8-qjq3-2gfm\"],\"severity\":\"medium\",\"title\":\"GHSA-68w8-qjq3-2gfm\"},{\"cve_id\":\"GHSA-6c3j-c64m-qhgq\",\"cvss_score\":5.5,\"description\":\"XSS in jQuery as used in Drupal, Backdrop CMS, and other products\",\"id\":\"GHSA-6c3j-c64m-qhgq\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2019-11358\",\"https://github.com/maximebf/php-debugbar/issues/447\",\"https://github.com/jquery/jquery/pull/4333\",\"https://github.com/maximebf/php-debugbar/commit/847216e60544258c881f2733d699bbcfeefac0fc\",\"https://github.com/django/django/commit/34ec52269ade54af31a021b12969913129571a3f\",\"https://github.com/django/django/commit/95649bc08547a878cebfa1d019edec8cb1b80829\",\"https://github.com/django/django/commit/baaf187a4e354bf3976c51e2c83a0d2f8ee6e6ad\",\"https://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WZW27UCJ5CYFL4KFFFMYMIBNMIU2ALG5\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4UOAZIFCSZ3ENEFOR5IXX6NFAD3HV7FA\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5IABSKTYZ5JUGL735UKGXL5YPRYOPUYI\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KYH3OAGR2RTCHRA5NOKX2TES7SNQMWGO\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QV3PKZC3PQCO3273HAT76PAQZFBEO4KP\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RLXRX23725JL366CNZGJZ7AQQB7LHQ6F\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WZW27UCJ5CYFL4KFFFMYMIBNMIU2ALG5\",\"https://seclists.org/bugtraq/2019/Apr/32\",\"https://seclists.org/bugtraq/2019/Jun/12\",\"https://seclists.org/bugtraq/2019/May/18\",\"https://www.tenable.com/security/tns-2020-02\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RLXRX23725JL366CNZGJZ7AQQB7LHQ6F\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QV3PKZC3PQCO3273HAT76PAQZFBEO4KP\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KYH3OAGR2RTCHRA5NOKX2TES7SNQMWGO\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/5IABSKTYZ5JUGL735UKGXL5YPRYOPUYI\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4UOAZIFCSZ3ENEFOR5IXX6NFAD3HV7FA\",\"https://lists.debian.org/debian-lts-announce/2023/08/msg00040.html\",\"https://lists.debian.org/debian-lts-announce/2020/02/msg00024.html\",\"https://lists.debian.org/debian-lts-announce/2019/05/msg00029.html\",\"https://lists.debian.org/debian-lts-announce/2019/05/msg00006.html\",\"https://lists.apache.org/thread.html/rca37935d661f4689cb4119f1b3b224413b22be161b678e6e6ce0c69b@%3Ccommits.nifi.apache.org%3E\",\"https://lists.apache.org/thread.html/rca37935d661f4689cb4119f1b3b224413b22be161b678e6e6ce0c69b%40%3Ccommits.nifi.apache.org%3E\",\"https://lists.apache.org/thread.html/rac25da84ecdcd36f6de5ad0d255f4e967209bbbebddb285e231da37d@%3Cissues.flink.apache.org%3E\",\"https://www.tenable.com/security/tns-2019-08\",\"https://www.synology.com/security/advisory/Synology_SA_19_19\",\"https://www.privacy-wise.com/mitigating-cve-2019-11358-in-old-versions-of-jquery\",\"https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html\",\"https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\",\"https://www.oracle.com/security-alerts/cpuoct2021.html\",\"https://www.oracle.com/security-alerts/cpuoct2020.html\",\"https://www.oracle.com/security-alerts/cpujul2020.html\",\"https://www.oracle.com/security-alerts/cpujan2022.html\",\"https://www.oracle.com/security-alerts/cpujan2021.html\",\"https://www.oracle.com/security-alerts/cpujan2020.html\",\"https://www.oracle.com/security-alerts/cpuapr2020.html\",\"https://www.oracle.com/security-alerts/cpuApr2021.html\",\"https://www.oracle.com//security-alerts/cpujul2021.html\",\"https://www.drupal.org/sa-core-2019-006\",\"https://www.djangoproject.com/weblog/2019/jun/03/security-releases\",\"https://www.debian.org/security/2019/dsa-4460\",\"https://www.debian.org/security/2019/dsa-4434\",\"https://web.archive.org/web/20190824065237/http://www.securityfocus.com/bid/108023\",\"https://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1\",\"https://snyk.io/vuln/SNYK-JS-JQUERY-174006\",\"https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450226\",\"https://security.netapp.com/advisory/ntap-20190919-0001\",\"https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442%40%3Cdev.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/88fb0362fd40e5b605ea8149f63241537b8b6fb5bfa315391fc5cbb7@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/88fb0362fd40e5b605ea8149f63241537b8b6fb5bfa315391fc5cbb7%40%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/6097cdbd6f0a337bedd9bb5cc441b2d525ff002a96531de367e4259f@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/6097cdbd6f0a337bedd9bb5cc441b2d525ff002a96531de367e4259f%40%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/5928aa293e39d248266472210c50f176cac1535220f2486e6a7fa844@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/5928aa293e39d248266472210c50f176cac1535220f2486e6a7fa844%40%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f%40%3Cdev.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/08720ef215ee7ab3386c05a1a90a7d1c852bf0706f176a7816bf65fc@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/08720ef215ee7ab3386c05a1a90a7d1c852bf0706f176a7816bf65fc%40%3Ccommits.airflow.apache.org%3E\",\"https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601\",\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2019-11358.yml\",\"https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#434\",\"https://github.com/jquery/jquery\",\"https://blog.jquery.com/2019/04/10/jquery-3-4-0-released\",\"https://backdropcms.org/security/backdrop-sa-core-2019-009\",\"https://access.redhat.com/errata/RHSA-2019:3024\",\"https://access.redhat.com/errata/RHSA-2019:3023\",\"https://access.redhat.com/errata/RHSA-2019:2587\",\"https://access.redhat.com/errata/RHSA-2019:1456\",\"https://access.redhat.com/errata/RHBA-2019:1570\",\"https://lists.apache.org/thread.html/rac25da84ecdcd36f6de5ad0d255f4e967209bbbebddb285e231da37d%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r7e8ebccb7c022e41295f6fdb7b971209b83702339f872ddd8cf8bf73@%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r7e8ebccb7c022e41295f6fdb7b971209b83702339f872ddd8cf8bf73%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r7d64895cc4dff84d0becfc572b20c0e4bf9bfa7b10c6f5f73e783734@%3Cdev.storm.apache.org%3E\",\"https://lists.apache.org/thread.html/r7d64895cc4dff84d0becfc572b20c0e4bf9bfa7b10c6f5f73e783734%40%3Cdev.storm.apache.org%3E\",\"https://lists.apache.org/thread.html/r7aac081cbddb6baa24b75e74abf0929bf309b176755a53e3ed810355@%3Cdev.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r7aac081cbddb6baa24b75e74abf0929bf309b176755a53e3ed810355%40%3Cdev.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r41b5bfe009c845f67d4f68948cc9419ac2d62e287804aafd72892b08@%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r41b5bfe009c845f67d4f68948cc9419ac2d62e287804aafd72892b08%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r38f0d1aa3c923c22977fe7376508f030f22e22c1379fbb155bf29766@%3Cdev.syncope.apache.org%3E\",\"https://lists.apache.org/thread.html/r38f0d1aa3c923c22977fe7376508f030f22e22c1379fbb155bf29766%40%3Cdev.syncope.apache.org%3E\",\"https://lists.apache.org/thread.html/r2baacab6e0acb5a2092eb46ae04fd6c3e8277b4fd79b1ffb7f3254fa@%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r2baacab6e0acb5a2092eb46ae04fd6c3e8277b4fd79b1ffb7f3254fa%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r2041a75d3fc09dec55adfd95d598b38d22715303f65c997c054844c9@%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r2041a75d3fc09dec55adfd95d598b38d22715303f65c997c054844c9%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc%40%3Cissues.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/bcce5a9c532b386c68dab2f6b3ce8b0cc9b950ec551766e76391caa3@%3Ccommits.nifi.apache.org%3E\",\"https://lists.apache.org/thread.html/bcce5a9c532b386c68dab2f6b3ce8b0cc9b950ec551766e76391caa3%40%3Ccommits.nifi.apache.org%3E\",\"https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E\",\"https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6%40%3Ccommits.roller.apache.org%3E\",\"https://lists.apache.org/thread.html/b736d0784cf02f5a30fbb4c5902762a15ad6d47e17e2c5a17b7d6205@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/b736d0784cf02f5a30fbb4c5902762a15ad6d47e17e2c5a17b7d6205%40%3Ccommits.airflow.apache.org%3E\",\"http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00006.html\",\"http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00025.html\",\"http://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html\",\"http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html\",\"http://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\",\"http://seclists.org/fulldisclosure/2019/May/10\",\"http://seclists.org/fulldisclosure/2019/May/11\",\"http://seclists.org/fulldisclosure/2019/May/13\",\"http://www.openwall.com/lists/oss-security/2019/06/03/2\",\"http://www.securityfocus.com/bid/108023\",\"https://osv.dev/vulnerability/GHSA-6c3j-c64m-qhgq\"],\"severity\":\"medium\",\"title\":\"GHSA-6c3j-c64m-qhgq\"},{\"cve_id\":\"GHSA-7xr5-9hcq-chf9\",\"cvss_score\":5.5,\"description\":\"Django Improper Output Neutralization for Logs vulnerability\",\"id\":\"GHSA-7xr5-9hcq-chf9\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2025-48432\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml\",\"https://groups.google.com/g/django-announce\",\"https://www.djangoproject.com/weblog/2025/jun/04/security-releases\",\"https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases\",\"http://www.openwall.com/lists/oss-security/2025/06/04/5\",\"http://www.openwall.com/lists/oss-security/2025/06/10/2\",\"http://www.openwall.com/lists/oss-security/2025/06/10/3\",\"http://www.openwall.com/lists/oss-security/2025/06/10/4\",\"https://osv.dev/vulnerability/GHSA-7xr5-9hcq-chf9\"],\"severity\":\"medium\",\"title\":\"GHSA-7xr5-9hcq-chf9\"},{\"cve_id\":\"GHSA-8x94-hmjh-97hq\",\"cvss_score\":8.0,\"description\":\"Django vulnerable to Reflected File Download attack\",\"id\":\"GHSA-8x94-hmjh-97hq\",\"recommendation\":\"Update django to a patched version as soon as possible.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2022-36359\",\"https://github.com/django/django/commit/b3e4494d759202a3b6bf247fd34455bf13be5b80\",\"https://github.com/django/django/commit/b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3\",\"https://github.com/django/django/commit/bd062445cffd3f6cc6dcd20d13e2abed818fa173\",\"https://docs.djangoproject.com/en/4.0/releases/security\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2022-245.yaml\",\"https://groups.google.com/g/django-announce/c/8cz--gvaJr4\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HWY6DQWRVBALV73BPUVBXC3QIYUM24IK\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LTZVAKU5ALQWOKFTPISE257VCVIYGFQI\",\"https://security.netapp.com/advisory/ntap-20220915-0008\",\"https://www.debian.org/security/2022/dsa-5254\",\"https://www.djangoproject.com/weblog/2022/aug/03/security-releases\",\"http://www.openwall.com/lists/oss-security/2022/08/03/1\",\"https://osv.dev/vulnerability/GHSA-8x94-hmjh-97hq\"],\"severity\":\"high\",\"title\":\"GHSA-8x94-hmjh-97hq\"},{\"cve_id\":\"GHSA-hmr4-m2h5-33qx\",\"cvss_score\":9.5,\"description\":\"SQL injection in Django\",\"id\":\"GHSA-hmr4-m2h5-33qx\",\"recommendation\":\"Immediately update django to the latest secure version or consider alternative packages.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2020-7471\",\"https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd\",\"https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b\",\"https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147\",\"https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136\",\"https://www.openwall.com/lists/oss-security/2020/02/03/1\",\"https://www.djangoproject.com/weblog/2020/feb/03/security-releases\",\"https://www.debian.org/security/2020/dsa-4629\",\"https://usn.ubuntu.com/4264-1\",\"https://security.netapp.com/advisory/ntap-20200221-0006\",\"https://security.gentoo.org/glsa/202004-17\",\"https://seclists.org/bugtraq/2020/Feb/30\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ\",\"https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2020-35.yaml\",\"https://github.com/django/django\",\"https://github.com/advisories/GHSA-hmr4-m2h5-33qx\",\"https://docs.djangoproject.com/en/3.0/releases/security\",\"http://www.openwall.com/lists/oss-security/2020/02/03/1\",\"https://osv.dev/vulnerability/GHSA-hmr4-m2h5-33qx\"],\"severity\":\"critical\",\"title\":\"GHSA-hmr4-m2h5-33qx\"},{\"cve_id\":\"GHSA-r28v-mw67-m5p9\",\"cvss_score\":5.5,\"description\":\"Django denial-of-service possibility in urlize and urlizetrunc template filters\",\"id\":\"GHSA-r28v-mw67-m5p9\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2018-7536\",\"https://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2\",\"https://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16\",\"https://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8\",\"https://access.redhat.com/errata/RHSA-2018:2927\",\"https://access.redhat.com/errata/RHSA-2019:0051\",\"https://access.redhat.com/errata/RHSA-2019:0082\",\"https://access.redhat.com/errata/RHSA-2019:0265\",\"https://github.com/advisories/GHSA-r28v-mw67-m5p9\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2018-5.yaml\",\"https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html\",\"https://usn.ubuntu.com/3591-1\",\"https://web.archive.org/web/20200227131019/http://www.securityfocus.com/bid/103361\",\"https://www.debian.org/security/2018/dsa-4161\",\"https://www.djangoproject.com/weblog/2018/mar/06/security-releases\",\"https://osv.dev/vulnerability/GHSA-r28v-mw67-m5p9\"],\"severity\":\"medium\",\"title\":\"GHSA-r28v-mw67-m5p9\"},{\"cve_id\":\"GHSA-rf4j-j272-fj86\",\"cvss_score\":8.0,\"description\":\"Django vulnerable to information leakage in AuthenticationForm\",\"id\":\"GHSA-rf4j-j272-fj86\",\"recommendation\":\"Update django to a patched version as soon as possible.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2018-6188\",\"https://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae\",\"https://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2\",\"https://github.com/advisories/GHSA-rf4j-j272-fj86\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2018-4.yaml\",\"https://usn.ubuntu.com/3559-1\",\"https://web.archive.org/web/20200517143909/http://www.securitytracker.com/id/1040422\",\"https://www.djangoproject.com/weblog/2018/feb/01/security-releases\",\"https://osv.dev/vulnerability/GHSA-rf4j-j272-fj86\"],\"severity\":\"high\",\"title\":\"GHSA-rf4j-j272-fj86\"},{\"cve_id\":\"GHSA-rrqc-c2jx-6jgv\",\"cvss_score\":5.5,\"description\":\"Django allows enumeration of user e-mail addresses\",\"id\":\"GHSA-rrqc-c2jx-6jgv\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2024-45231\",\"https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca\",\"https://github.com/django/django/commit/96d84047715ea1715b4bd1594e46122b8a77b9e2\",\"https://github.com/django/django/commit/bf4888d317ba4506d091eeac6e8b4f1fcc731199\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"https://github.com/django/django\",\"https://groups.google.com/forum/#%21forum/django-announce\",\"https://www.djangoproject.com/weblog/2024/sep/03/security-releases\",\"https://osv.dev/vulnerability/GHSA-rrqc-c2jx-6jgv\"],\"severity\":\"medium\",\"title\":\"GHSA-rrqc-c2jx-6jgv\"},{\"cve_id\":\"GHSA-vfq6-hq5r-27r6\",\"cvss_score\":9.5,\"description\":\"Django Potential account hijack via password reset form\",\"id\":\"GHSA-vfq6-hq5r-27r6\",\"recommendation\":\"Immediately update django to the latest secure version or consider alternative packages.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2019-19844\",\"https://github.com/django/django/commit/302a4ff1e8b1c798aab97673909c7a3dfda42c26\",\"https://github.com/django/django/commit/4d334bea06cac63dc1272abcec545b85136cca0e\",\"https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70\",\"https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2\",\"https://www.djangoproject.com/weblog/2019/dec/18/security-releases\",\"https://www.debian.org/security/2020/dsa-4598\",\"https://usn.ubuntu.com/4224-1\",\"https://security.netapp.com/advisory/ntap-20200110-0003\",\"https://security.gentoo.org/glsa/202004-17\",\"https://seclists.org/bugtraq/2020/Jan/9\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD\",\"https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2019-16.yaml\",\"https://github.com/django/django\",\"https://github.com/advisories/GHSA-vfq6-hq5r-27r6\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html\",\"https://osv.dev/vulnerability/GHSA-vfq6-hq5r-27r6\"],\"severity\":\"critical\",\"title\":\"GHSA-vfq6-hq5r-27r6\"},{\"cve_id\":\"GHSA-wh4h-v3f2-r2pp\",\"cvss_score\":8.0,\"description\":\"Uncontrolled Memory Consumption in Django\",\"id\":\"GHSA-wh4h-v3f2-r2pp\",\"recommendation\":\"Update django to a patched version as soon as possible.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2019-6975\",\"https://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227\",\"https://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676\",\"https://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3\",\"https://www.openwall.com/lists/oss-security/2019/02/11/1\",\"https://www.djangoproject.com/weblog/2019/feb/11/security-releases\",\"https://www.debian.org/security/2019/dsa-4476\",\"https://web.archive.org/web/20200227084713/http://www.securityfocus.com/bid/106964\",\"https://usn.ubuntu.com/3890-1\",\"https://seclists.org/bugtraq/2019/Jul/10\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HVXDOVCXLD74SHR2BENGCE2OOYYYWJHZ\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/66WMXHGBXD7GSM3PEXVCMCAGLMQYHZCU\",\"https://groups.google.com/forum/#!topic/django-announce/WTwEAprR0IQ\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2019-18.yaml\",\"https://github.com/django/django\",\"https://github.com/advisories/GHSA-wh4h-v3f2-r2pp\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"https://osv.dev/vulnerability/GHSA-wh4h-v3f2-r2pp\"],\"severity\":\"high\",\"title\":\"GHSA-wh4h-v3f2-r2pp\"}],\"vulnerability_count\":13},\"gidgethub\":{\"package_name\":\"gidgethub\",\"recommendation\":\"This package has a high ratio of open issues (25 issues, 395 stars). It may be poorly maintained.\",\"risk_level\":\"low\",\"risk_score\":30.0,\"version\":\"4.0.0\",\"vulnerabilities\":[],\"vulnerability_count\":1},\"httpx\":{\"package_name\":\"httpx\",\"recommendation\":\"Cannot scan vulnerabilities without specific version number\",\"risk_level\":\"na\",\"risk_score\":0,\"version\":\"unknown\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"rich\":{\"package_name\":\"rich\",\"recommendation\":\"Cannot scan vulnerabilities without specific version number\",\"risk_level\":\"na\",\"risk_score\":0,\"version\":\"unknown\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"sqlparse\":{\"package_name\":\"sqlparse\",\"recommendation\":\"This package has a high ratio of open issues (260 issues, 3902 stars). It may be poorly maintained.\",\"risk_level\":\"low\",\"risk_score\":30.0,\"version\":\"0.3.1\",\"vulnerabilities\":[],\"vulnerability_count\":1},\"tzdata; sys_platform\":{\"package_name\":\"tzdata; sys_platform\",\"recommendation\":\"Cannot scan vulnerabilities - no vulnerability data available for this package.\",\"risk_level\":\"na\",\"risk_score\":0.0,\"version\":\"\\\"win32\\\"\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"uritemplate\":{\"package_name\":\"uritemplate\",\"recommendation\":\"This package appears to be secure with no known vulnerabilities.\",\"risk_level\":\"safe\",\"risk_score\":0.0,\"version\":\"3.0.1\",\"vulnerabilities\":[],\"vulnerability_count\":0}}}\n"
          },
          "redirectURL": "",
          "headersSize": 182,
          "bodySize": 39766,
          "_transferSize": 39948
        },
        "cache": {},
        "timings": {
          "blocked": 0.29067496507195756,
          "dns": 0.00008333154255524278,
          "connect": 0.00012499367585405707,
          "ssl": -1,
          "send": 1.894318949780427,
          "wait": 11.803668676293455,
          "receive": 0.023831817088648677
        },
        "serverIPAddress": "127.0.0.1",
        "_serverPort": 5000,
        "connection": "36",
        "_fetchType": "Network Load",
        "_priority": "medium"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.261Z",
        "time": 17.61492319201352,
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:5000/api/scan_data",
          "httpVersion": "HTTP/1.1",
          "cookies": [
            {
              "name": "session",
              "value": ".eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            }
          ],
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Cookie",
              "value": "session=.eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:5000/results"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Priority",
              "value": "u=3, i"
            }
          ],
          "queryString": [],
          "headersSize": 954,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "cookies": [],
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:40:09 GMT"
            },
            {
              "name": "Vary",
              "value": "Cookie"
            },
            {
              "name": "Connection",
              "value": "close"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Content-Length",
              "value": "39766"
            },
            {
              "name": "Server",
              "value": "Werkzeug/3.1.3 Python/3.13.1"
            }
          ],
          "content": {
            "size": 39766,
            "compression": 0,
            "mimeType": "application/json",
            "text": "{\"dependencies\":[{\"name\":\"httpx\",\"type\":\"python\",\"version\":\"flexible\"},{\"github\":{\"cached_at\":\"2025-07-17 20:48:26\",\"closed_issues_count\":0,\"description\":\"An async GitHub API library for Python\",\"forks_count\":58,\"full_name\":\"gidgethub/gidgethub\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":38,\"score\":3,\"status\":\"active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":58,\"score\":3,\"status\":\"moderate_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":38,\"issue_ratio\":1.0,\"open_issues\":25,\"raw_score\":0.448,\"recency_score\":0.896,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":58,\"raw_score\":14.51,\"score\":4,\"stars\":395,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":13,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/gidgethub/gidgethub\",\"language\":\"Python\",\"open_issues_count\":25,\"platform\":\"github\",\"pushed_at\":\"2025-06-09T17:29:15Z\",\"stargazers_count\":395},\"name\":\"gidgethub\",\"type\":\"python\",\"version\":\"4.0.0\"},{\"github\":{\"cached_at\":\"2025-07-17 21:09:42\",\"closed_issues_count\":0,\"description\":\"The Web framework for perfectionists with deadlines.\",\"forks_count\":32720,\"full_name\":\"django/django\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":0,\"score\":4,\"status\":\"very_active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":32720,\"score\":4,\"status\":\"strong_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":0,\"issue_ratio\":1.0,\"open_issues\":358,\"raw_score\":0.5,\"recency_score\":1.0,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":32720,\"raw_score\":31.36,\"score\":4,\"stars\":84251,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":15,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/django/django\",\"language\":\"Python\",\"open_issues_count\":358,\"platform\":\"github\",\"pushed_at\":\"2025-07-17T20:36:02Z\",\"stargazers_count\":84251},\"name\":\"django\",\"type\":\"python\",\"version\":\"2.1\"},{\"github\":{\"cached_at\":\"2025-07-17 21:09:42\",\"closed_issues_count\":0,\"description\":\"The Web framework for perfectionists with deadlines.\",\"forks_count\":32720,\"full_name\":\"django/django\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":0,\"score\":4,\"status\":\"very_active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":32720,\"score\":4,\"status\":\"strong_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":0,\"issue_ratio\":1.0,\"open_issues\":358,\"raw_score\":0.5,\"recency_score\":1.0,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":32720,\"raw_score\":31.36,\"score\":4,\"stars\":84251,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":15,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/django/django\",\"language\":\"Python\",\"open_issues_count\":358,\"platform\":\"github\",\"pushed_at\":\"2025-07-17T20:36:02Z\",\"stargazers_count\":84251},\"name\":\"django\",\"type\":\"python\",\"version\":\"2.0\"},{\"name\":\"PyQt5\",\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"rich\",\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"click\",\"type\":\"python\",\"version\":\"flexible\"}],\"dependency_tree\":[{\"dev\":false,\"name\":\"httpx\",\"subdependencies\":[{\"name\":\"anyio\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"certifi\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"httpcore\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"1.*\"},{\"name\":\"idna\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":false,\"name\":\"gidgethub\",\"subdependencies\":[{\"name\":\"uritemplate\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.0.1\"},{\"name\":\"PyJWT\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"2.4.0\"}],\"type\":\"python\",\"version\":\"4.0.0\"},{\"dev\":false,\"name\":\"django\",\"subdependencies\":[{\"name\":\"asgiref\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.8.1\"},{\"name\":\"sqlparse\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"0.3.1\"},{\"name\":\"tzdata; sys_platform\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"win32\\\"\"}],\"type\":\"python\",\"version\":\"2.1\"},{\"dev\":false,\"name\":\"django\",\"subdependencies\":[{\"name\":\"asgiref\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.8.1\"},{\"name\":\"sqlparse\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"0.3.1\"},{\"name\":\"tzdata; sys_platform\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"win32\\\"\"}],\"type\":\"python\",\"version\":\"2.0\"},{\"dev\":true,\"name\":\"PyQt5\",\"subdependencies\":[{\"name\":\"PyQt5-sip\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"PyQt5-Qt5\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":true,\"name\":\"rich\",\"subdependencies\":[{\"name\":\"typing-extensions\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"pygments\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"markdown-it-py\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"2.2.0\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":true,\"name\":\"click\",\"subdependencies\":[{\"name\":\"colorama; platform_system\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"Windows\\\"\"}],\"type\":\"python\",\"version\":\"flexible\"}],\"filename\":\"requirements.txt\",\"project_type\":\"python\",\"sbom_data\":{\"dependencies\":[{\"name\":\"httpx\",\"type\":\"python\",\"version\":\"flexible\"},{\"github\":{\"cached_at\":\"2025-07-17 20:48:26\",\"closed_issues_count\":0,\"description\":\"An async GitHub API library for Python\",\"forks_count\":58,\"full_name\":\"gidgethub/gidgethub\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":38,\"score\":3,\"status\":\"active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":58,\"score\":3,\"status\":\"moderate_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":38,\"issue_ratio\":1.0,\"open_issues\":25,\"raw_score\":0.448,\"recency_score\":0.896,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":58,\"raw_score\":14.51,\"score\":4,\"stars\":395,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":13,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/gidgethub/gidgethub\",\"language\":\"Python\",\"open_issues_count\":25,\"platform\":\"github\",\"pushed_at\":\"2025-06-09T17:29:15Z\",\"stargazers_count\":395},\"name\":\"gidgethub\",\"type\":\"python\",\"version\":\"4.0.0\"},{\"github\":{\"cached_at\":\"2025-07-17 21:09:42\",\"closed_issues_count\":0,\"description\":\"The Web framework for perfectionists with deadlines.\",\"forks_count\":32720,\"full_name\":\"django/django\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":0,\"score\":4,\"status\":\"very_active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":32720,\"score\":4,\"status\":\"strong_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":0,\"issue_ratio\":1.0,\"open_issues\":358,\"raw_score\":0.5,\"recency_score\":1.0,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":32720,\"raw_score\":31.36,\"score\":4,\"stars\":84251,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":15,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/django/django\",\"language\":\"Python\",\"open_issues_count\":358,\"platform\":\"github\",\"pushed_at\":\"2025-07-17T20:36:02Z\",\"stargazers_count\":84251},\"name\":\"django\",\"type\":\"python\",\"version\":\"2.1\"},{\"github\":{\"cached_at\":\"2025-07-17 21:09:42\",\"closed_issues_count\":0,\"description\":\"The Web framework for perfectionists with deadlines.\",\"forks_count\":32720,\"full_name\":\"django/django\",\"health\":{\"max_score\":16,\"metrics\":{\"activity\":{\"days_since_update\":0,\"score\":4,\"status\":\"very_active\",\"threshold\":{\"abandoned\":730,\"moderate\":90,\"recent\":30,\"stale\":365}},\"community\":{\"forks\":32720,\"score\":4,\"status\":\"strong_community\",\"threshold\":{\"forks_high\":100,\"forks_low\":5,\"forks_medium\":20}},\"maintenance\":{\"closed_issues\":0,\"days_since_update\":0,\"issue_ratio\":1.0,\"open_issues\":358,\"raw_score\":0.5,\"recency_score\":1.0,\"score\":3,\"status\":\"decently_maintained\",\"threshold\":{\"issues_high\":100,\"issues_low\":10,\"issues_medium\":50}},\"popularity\":{\"forks\":32720,\"raw_score\":31.36,\"score\":4,\"stars\":84251,\"status\":\"very_popular\",\"threshold\":{\"high\":1000,\"low\":10,\"medium\":100}}},\"overall_score\":15,\"overall_status\":\"excellent\",\"recommendation\":\"Highly recommended - well-maintained and popular\"},\"html_url\":\"https://github.com/django/django\",\"language\":\"Python\",\"open_issues_count\":358,\"platform\":\"github\",\"pushed_at\":\"2025-07-17T20:36:02Z\",\"stargazers_count\":84251},\"name\":\"django\",\"type\":\"python\",\"version\":\"2.0\"},{\"name\":\"PyQt5\",\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"rich\",\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"click\",\"type\":\"python\",\"version\":\"flexible\"}],\"dependency_tree\":[{\"dev\":false,\"name\":\"httpx\",\"subdependencies\":[{\"name\":\"anyio\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"certifi\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"httpcore\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"1.*\"},{\"name\":\"idna\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":false,\"name\":\"gidgethub\",\"subdependencies\":[{\"name\":\"uritemplate\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.0.1\"},{\"name\":\"PyJWT\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"2.4.0\"}],\"type\":\"python\",\"version\":\"4.0.0\"},{\"dev\":false,\"name\":\"django\",\"subdependencies\":[{\"name\":\"asgiref\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.8.1\"},{\"name\":\"sqlparse\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"0.3.1\"},{\"name\":\"tzdata; sys_platform\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"win32\\\"\"}],\"type\":\"python\",\"version\":\"2.1\"},{\"dev\":false,\"name\":\"django\",\"subdependencies\":[{\"name\":\"asgiref\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"3.8.1\"},{\"name\":\"sqlparse\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"0.3.1\"},{\"name\":\"tzdata; sys_platform\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"win32\\\"\"}],\"type\":\"python\",\"version\":\"2.0\"},{\"dev\":true,\"name\":\"PyQt5\",\"subdependencies\":[{\"name\":\"PyQt5-sip\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"PyQt5-Qt5\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":true,\"name\":\"rich\",\"subdependencies\":[{\"name\":\"typing-extensions\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"pygments\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"flexible\"},{\"name\":\"markdown-it-py\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"2.2.0\"}],\"type\":\"python\",\"version\":\"flexible\"},{\"dev\":true,\"name\":\"click\",\"subdependencies\":[{\"name\":\"colorama; platform_system\",\"subdependencies\":[],\"type\":\"python\",\"version\":\"\\\"Windows\\\"\"}],\"type\":\"python\",\"version\":\"flexible\"}]},\"skipped_dependencies\":[\"PyQt5\",\"click\",\"httpx\",\"rich\",\"tzdata; sys_platform\"],\"vulnerabilities\":{\"PyJWT\":{\"package_name\":\"PyJWT\",\"recommendation\":\"This package appears to be secure with no known vulnerabilities.\",\"risk_level\":\"safe\",\"risk_score\":0.0,\"version\":\"2.4.0\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"PyQt5\":{\"package_name\":\"PyQt5\",\"recommendation\":\"Cannot scan vulnerabilities without specific version number\",\"risk_level\":\"na\",\"risk_score\":0,\"version\":\"unknown\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"asgiref\":{\"package_name\":\"asgiref\",\"recommendation\":\"This package appears to be secure with no known vulnerabilities.\",\"risk_level\":\"safe\",\"risk_score\":0.0,\"version\":\"3.8.1\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"click\":{\"package_name\":\"click\",\"recommendation\":\"Cannot scan vulnerabilities without specific version number\",\"risk_level\":\"na\",\"risk_score\":0,\"version\":\"unknown\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"django\":{\"package_name\":\"django\",\"recommendation\":\"CRITICAL: This package has severe vulnerabilities. Consider replacing it with a secure alternative or updating to a patched version immediately.\",\"risk_level\":\"critical\",\"risk_score\":100.0,\"version\":\"2.0\",\"vulnerabilities\":[{\"cve_id\":\"GHSA-2f9x-5v75-3qv4\",\"cvss_score\":3.0,\"description\":\"Django Denial-of-service possibility in truncatechars_html and truncatewords_html template filters\",\"id\":\"GHSA-2f9x-5v75-3qv4\",\"recommendation\":\"Monitor django for security updates and apply them when available.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2018-7537\",\"https://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c\",\"https://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539\",\"https://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa\",\"https://access.redhat.com/errata/RHSA-2018:2927\",\"https://access.redhat.com/errata/RHSA-2019:0265\",\"https://github.com/advisories/GHSA-2f9x-5v75-3qv4\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2018-6.yaml\",\"https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html\",\"https://usn.ubuntu.com/3591-1\",\"https://www.debian.org/security/2018/dsa-4161\",\"https://www.djangoproject.com/weblog/2018/mar/06/security-releases\",\"https://osv.dev/vulnerability/GHSA-2f9x-5v75-3qv4\"],\"severity\":\"low\",\"title\":\"GHSA-2f9x-5v75-3qv4\"},{\"cve_id\":\"GHSA-337x-4q8g-prc5\",\"cvss_score\":8.0,\"description\":\"Improper Input Validation in Django\",\"id\":\"GHSA-337x-4q8g-prc5\",\"recommendation\":\"Update django to a patched version as soon as possible.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2019-3498\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"https://github.com/advisories/GHSA-337x-4q8g-prc5\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2019-17.yaml\",\"https://groups.google.com/forum/#!topic/django-announce/VYU7xQQTEPQ\",\"https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HVXDOVCXLD74SHR2BENGCE2OOYYYWJHZ\",\"https://usn.ubuntu.com/3851-1\",\"https://web.archive.org/web/20200227094237/http://www.securityfocus.com/bid/106453\",\"https://www.debian.org/security/2019/dsa-4363\",\"https://www.djangoproject.com/weblog/2019/jan/04/security-releases\",\"https://osv.dev/vulnerability/GHSA-337x-4q8g-prc5\"],\"severity\":\"high\",\"title\":\"GHSA-337x-4q8g-prc5\"},{\"cve_id\":\"GHSA-5hg3-6c2f-f3wr\",\"cvss_score\":5.5,\"description\":\"Django open redirect\",\"id\":\"GHSA-5hg3-6c2f-f3wr\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2018-14574\",\"https://github.com/django/django/commit/6fffc3c6d420e44f4029d5643f38d00a39b08525\",\"https://github.com/django/django/commit/c4e5ff7fdb5fce447675e90291fd33fddd052b3c\",\"https://github.com/django/django/commit/d6eaee092709aad477a9894598496c6deec532ff\",\"https://access.redhat.com/errata/RHSA-2019:0265\",\"https://github.com/advisories/GHSA-5hg3-6c2f-f3wr\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2018-2.yaml\",\"https://usn.ubuntu.com/3726-1\",\"https://web.archive.org/web/20190901075632/http://www.securitytracker.com/id/1041403\",\"https://web.archive.org/web/20200227115315/http://www.securityfocus.com/bid/104970\",\"https://www.debian.org/security/2018/dsa-4264\",\"https://www.djangoproject.com/weblog/2018/aug/01/security-releases\",\"https://osv.dev/vulnerability/GHSA-5hg3-6c2f-f3wr\"],\"severity\":\"medium\",\"title\":\"GHSA-5hg3-6c2f-f3wr\"},{\"cve_id\":\"GHSA-68w8-qjq3-2gfm\",\"cvss_score\":5.5,\"description\":\"Path Traversal in Django\",\"id\":\"GHSA-68w8-qjq3-2gfm\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2021-33203\",\"https://github.com/django/django/commit/053cc9534d174dc89daba36724ed2dcb36755b90\",\"https://github.com/django/django/commit/20c67a0693c4ede2b09af02574823485e82e4c8f\",\"https://github.com/django/django/commit/dfaba12cda060b8b292ae1d271b44bf810b1c5b9\",\"https://docs.djangoproject.com/en/3.2/releases/security\",\"https://github.com/advisories/GHSA-68w8-qjq3-2gfm\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2021-98.yaml\",\"https://groups.google.com/forum/#!forum/django-announce\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV\",\"https://security.netapp.com/advisory/ntap-20210727-0004\",\"https://www.djangoproject.com/weblog/2021/jun/02/security-releases\",\"https://osv.dev/vulnerability/GHSA-68w8-qjq3-2gfm\"],\"severity\":\"medium\",\"title\":\"GHSA-68w8-qjq3-2gfm\"},{\"cve_id\":\"GHSA-6c3j-c64m-qhgq\",\"cvss_score\":5.5,\"description\":\"XSS in jQuery as used in Drupal, Backdrop CMS, and other products\",\"id\":\"GHSA-6c3j-c64m-qhgq\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2019-11358\",\"https://github.com/maximebf/php-debugbar/issues/447\",\"https://github.com/jquery/jquery/pull/4333\",\"https://github.com/maximebf/php-debugbar/commit/847216e60544258c881f2733d699bbcfeefac0fc\",\"https://github.com/django/django/commit/34ec52269ade54af31a021b12969913129571a3f\",\"https://github.com/django/django/commit/95649bc08547a878cebfa1d019edec8cb1b80829\",\"https://github.com/django/django/commit/baaf187a4e354bf3976c51e2c83a0d2f8ee6e6ad\",\"https://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WZW27UCJ5CYFL4KFFFMYMIBNMIU2ALG5\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4UOAZIFCSZ3ENEFOR5IXX6NFAD3HV7FA\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5IABSKTYZ5JUGL735UKGXL5YPRYOPUYI\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KYH3OAGR2RTCHRA5NOKX2TES7SNQMWGO\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QV3PKZC3PQCO3273HAT76PAQZFBEO4KP\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RLXRX23725JL366CNZGJZ7AQQB7LHQ6F\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WZW27UCJ5CYFL4KFFFMYMIBNMIU2ALG5\",\"https://seclists.org/bugtraq/2019/Apr/32\",\"https://seclists.org/bugtraq/2019/Jun/12\",\"https://seclists.org/bugtraq/2019/May/18\",\"https://www.tenable.com/security/tns-2020-02\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RLXRX23725JL366CNZGJZ7AQQB7LHQ6F\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QV3PKZC3PQCO3273HAT76PAQZFBEO4KP\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KYH3OAGR2RTCHRA5NOKX2TES7SNQMWGO\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/5IABSKTYZ5JUGL735UKGXL5YPRYOPUYI\",\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4UOAZIFCSZ3ENEFOR5IXX6NFAD3HV7FA\",\"https://lists.debian.org/debian-lts-announce/2023/08/msg00040.html\",\"https://lists.debian.org/debian-lts-announce/2020/02/msg00024.html\",\"https://lists.debian.org/debian-lts-announce/2019/05/msg00029.html\",\"https://lists.debian.org/debian-lts-announce/2019/05/msg00006.html\",\"https://lists.apache.org/thread.html/rca37935d661f4689cb4119f1b3b224413b22be161b678e6e6ce0c69b@%3Ccommits.nifi.apache.org%3E\",\"https://lists.apache.org/thread.html/rca37935d661f4689cb4119f1b3b224413b22be161b678e6e6ce0c69b%40%3Ccommits.nifi.apache.org%3E\",\"https://lists.apache.org/thread.html/rac25da84ecdcd36f6de5ad0d255f4e967209bbbebddb285e231da37d@%3Cissues.flink.apache.org%3E\",\"https://www.tenable.com/security/tns-2019-08\",\"https://www.synology.com/security/advisory/Synology_SA_19_19\",\"https://www.privacy-wise.com/mitigating-cve-2019-11358-in-old-versions-of-jquery\",\"https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html\",\"https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\",\"https://www.oracle.com/security-alerts/cpuoct2021.html\",\"https://www.oracle.com/security-alerts/cpuoct2020.html\",\"https://www.oracle.com/security-alerts/cpujul2020.html\",\"https://www.oracle.com/security-alerts/cpujan2022.html\",\"https://www.oracle.com/security-alerts/cpujan2021.html\",\"https://www.oracle.com/security-alerts/cpujan2020.html\",\"https://www.oracle.com/security-alerts/cpuapr2020.html\",\"https://www.oracle.com/security-alerts/cpuApr2021.html\",\"https://www.oracle.com//security-alerts/cpujul2021.html\",\"https://www.drupal.org/sa-core-2019-006\",\"https://www.djangoproject.com/weblog/2019/jun/03/security-releases\",\"https://www.debian.org/security/2019/dsa-4460\",\"https://www.debian.org/security/2019/dsa-4434\",\"https://web.archive.org/web/20190824065237/http://www.securityfocus.com/bid/108023\",\"https://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1\",\"https://snyk.io/vuln/SNYK-JS-JQUERY-174006\",\"https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450226\",\"https://security.netapp.com/advisory/ntap-20190919-0001\",\"https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442%40%3Cdev.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/88fb0362fd40e5b605ea8149f63241537b8b6fb5bfa315391fc5cbb7@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/88fb0362fd40e5b605ea8149f63241537b8b6fb5bfa315391fc5cbb7%40%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/6097cdbd6f0a337bedd9bb5cc441b2d525ff002a96531de367e4259f@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/6097cdbd6f0a337bedd9bb5cc441b2d525ff002a96531de367e4259f%40%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/5928aa293e39d248266472210c50f176cac1535220f2486e6a7fa844@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/5928aa293e39d248266472210c50f176cac1535220f2486e6a7fa844%40%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f%40%3Cdev.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/08720ef215ee7ab3386c05a1a90a7d1c852bf0706f176a7816bf65fc@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/08720ef215ee7ab3386c05a1a90a7d1c852bf0706f176a7816bf65fc%40%3Ccommits.airflow.apache.org%3E\",\"https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601\",\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2019-11358.yml\",\"https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#434\",\"https://github.com/jquery/jquery\",\"https://blog.jquery.com/2019/04/10/jquery-3-4-0-released\",\"https://backdropcms.org/security/backdrop-sa-core-2019-009\",\"https://access.redhat.com/errata/RHSA-2019:3024\",\"https://access.redhat.com/errata/RHSA-2019:3023\",\"https://access.redhat.com/errata/RHSA-2019:2587\",\"https://access.redhat.com/errata/RHSA-2019:1456\",\"https://access.redhat.com/errata/RHBA-2019:1570\",\"https://lists.apache.org/thread.html/rac25da84ecdcd36f6de5ad0d255f4e967209bbbebddb285e231da37d%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r7e8ebccb7c022e41295f6fdb7b971209b83702339f872ddd8cf8bf73@%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r7e8ebccb7c022e41295f6fdb7b971209b83702339f872ddd8cf8bf73%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r7d64895cc4dff84d0becfc572b20c0e4bf9bfa7b10c6f5f73e783734@%3Cdev.storm.apache.org%3E\",\"https://lists.apache.org/thread.html/r7d64895cc4dff84d0becfc572b20c0e4bf9bfa7b10c6f5f73e783734%40%3Cdev.storm.apache.org%3E\",\"https://lists.apache.org/thread.html/r7aac081cbddb6baa24b75e74abf0929bf309b176755a53e3ed810355@%3Cdev.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r7aac081cbddb6baa24b75e74abf0929bf309b176755a53e3ed810355%40%3Cdev.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r41b5bfe009c845f67d4f68948cc9419ac2d62e287804aafd72892b08@%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r41b5bfe009c845f67d4f68948cc9419ac2d62e287804aafd72892b08%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r38f0d1aa3c923c22977fe7376508f030f22e22c1379fbb155bf29766@%3Cdev.syncope.apache.org%3E\",\"https://lists.apache.org/thread.html/r38f0d1aa3c923c22977fe7376508f030f22e22c1379fbb155bf29766%40%3Cdev.syncope.apache.org%3E\",\"https://lists.apache.org/thread.html/r2baacab6e0acb5a2092eb46ae04fd6c3e8277b4fd79b1ffb7f3254fa@%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r2baacab6e0acb5a2092eb46ae04fd6c3e8277b4fd79b1ffb7f3254fa%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r2041a75d3fc09dec55adfd95d598b38d22715303f65c997c054844c9@%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/r2041a75d3fc09dec55adfd95d598b38d22715303f65c997c054844c9%40%3Cissues.flink.apache.org%3E\",\"https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc%40%3Cissues.drill.apache.org%3E\",\"https://lists.apache.org/thread.html/bcce5a9c532b386c68dab2f6b3ce8b0cc9b950ec551766e76391caa3@%3Ccommits.nifi.apache.org%3E\",\"https://lists.apache.org/thread.html/bcce5a9c532b386c68dab2f6b3ce8b0cc9b950ec551766e76391caa3%40%3Ccommits.nifi.apache.org%3E\",\"https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E\",\"https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6%40%3Ccommits.roller.apache.org%3E\",\"https://lists.apache.org/thread.html/b736d0784cf02f5a30fbb4c5902762a15ad6d47e17e2c5a17b7d6205@%3Ccommits.airflow.apache.org%3E\",\"https://lists.apache.org/thread.html/b736d0784cf02f5a30fbb4c5902762a15ad6d47e17e2c5a17b7d6205%40%3Ccommits.airflow.apache.org%3E\",\"http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00006.html\",\"http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00025.html\",\"http://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html\",\"http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html\",\"http://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\",\"http://seclists.org/fulldisclosure/2019/May/10\",\"http://seclists.org/fulldisclosure/2019/May/11\",\"http://seclists.org/fulldisclosure/2019/May/13\",\"http://www.openwall.com/lists/oss-security/2019/06/03/2\",\"http://www.securityfocus.com/bid/108023\",\"https://osv.dev/vulnerability/GHSA-6c3j-c64m-qhgq\"],\"severity\":\"medium\",\"title\":\"GHSA-6c3j-c64m-qhgq\"},{\"cve_id\":\"GHSA-7xr5-9hcq-chf9\",\"cvss_score\":5.5,\"description\":\"Django Improper Output Neutralization for Logs vulnerability\",\"id\":\"GHSA-7xr5-9hcq-chf9\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2025-48432\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml\",\"https://groups.google.com/g/django-announce\",\"https://www.djangoproject.com/weblog/2025/jun/04/security-releases\",\"https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases\",\"http://www.openwall.com/lists/oss-security/2025/06/04/5\",\"http://www.openwall.com/lists/oss-security/2025/06/10/2\",\"http://www.openwall.com/lists/oss-security/2025/06/10/3\",\"http://www.openwall.com/lists/oss-security/2025/06/10/4\",\"https://osv.dev/vulnerability/GHSA-7xr5-9hcq-chf9\"],\"severity\":\"medium\",\"title\":\"GHSA-7xr5-9hcq-chf9\"},{\"cve_id\":\"GHSA-8x94-hmjh-97hq\",\"cvss_score\":8.0,\"description\":\"Django vulnerable to Reflected File Download attack\",\"id\":\"GHSA-8x94-hmjh-97hq\",\"recommendation\":\"Update django to a patched version as soon as possible.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2022-36359\",\"https://github.com/django/django/commit/b3e4494d759202a3b6bf247fd34455bf13be5b80\",\"https://github.com/django/django/commit/b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3\",\"https://github.com/django/django/commit/bd062445cffd3f6cc6dcd20d13e2abed818fa173\",\"https://docs.djangoproject.com/en/4.0/releases/security\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2022-245.yaml\",\"https://groups.google.com/g/django-announce/c/8cz--gvaJr4\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HWY6DQWRVBALV73BPUVBXC3QIYUM24IK\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LTZVAKU5ALQWOKFTPISE257VCVIYGFQI\",\"https://security.netapp.com/advisory/ntap-20220915-0008\",\"https://www.debian.org/security/2022/dsa-5254\",\"https://www.djangoproject.com/weblog/2022/aug/03/security-releases\",\"http://www.openwall.com/lists/oss-security/2022/08/03/1\",\"https://osv.dev/vulnerability/GHSA-8x94-hmjh-97hq\"],\"severity\":\"high\",\"title\":\"GHSA-8x94-hmjh-97hq\"},{\"cve_id\":\"GHSA-hmr4-m2h5-33qx\",\"cvss_score\":9.5,\"description\":\"SQL injection in Django\",\"id\":\"GHSA-hmr4-m2h5-33qx\",\"recommendation\":\"Immediately update django to the latest secure version or consider alternative packages.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2020-7471\",\"https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd\",\"https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b\",\"https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147\",\"https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136\",\"https://www.openwall.com/lists/oss-security/2020/02/03/1\",\"https://www.djangoproject.com/weblog/2020/feb/03/security-releases\",\"https://www.debian.org/security/2020/dsa-4629\",\"https://usn.ubuntu.com/4264-1\",\"https://security.netapp.com/advisory/ntap-20200221-0006\",\"https://security.gentoo.org/glsa/202004-17\",\"https://seclists.org/bugtraq/2020/Feb/30\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ\",\"https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2020-35.yaml\",\"https://github.com/django/django\",\"https://github.com/advisories/GHSA-hmr4-m2h5-33qx\",\"https://docs.djangoproject.com/en/3.0/releases/security\",\"http://www.openwall.com/lists/oss-security/2020/02/03/1\",\"https://osv.dev/vulnerability/GHSA-hmr4-m2h5-33qx\"],\"severity\":\"critical\",\"title\":\"GHSA-hmr4-m2h5-33qx\"},{\"cve_id\":\"GHSA-r28v-mw67-m5p9\",\"cvss_score\":5.5,\"description\":\"Django denial-of-service possibility in urlize and urlizetrunc template filters\",\"id\":\"GHSA-r28v-mw67-m5p9\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2018-7536\",\"https://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2\",\"https://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16\",\"https://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8\",\"https://access.redhat.com/errata/RHSA-2018:2927\",\"https://access.redhat.com/errata/RHSA-2019:0051\",\"https://access.redhat.com/errata/RHSA-2019:0082\",\"https://access.redhat.com/errata/RHSA-2019:0265\",\"https://github.com/advisories/GHSA-r28v-mw67-m5p9\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2018-5.yaml\",\"https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html\",\"https://usn.ubuntu.com/3591-1\",\"https://web.archive.org/web/20200227131019/http://www.securityfocus.com/bid/103361\",\"https://www.debian.org/security/2018/dsa-4161\",\"https://www.djangoproject.com/weblog/2018/mar/06/security-releases\",\"https://osv.dev/vulnerability/GHSA-r28v-mw67-m5p9\"],\"severity\":\"medium\",\"title\":\"GHSA-r28v-mw67-m5p9\"},{\"cve_id\":\"GHSA-rf4j-j272-fj86\",\"cvss_score\":8.0,\"description\":\"Django vulnerable to information leakage in AuthenticationForm\",\"id\":\"GHSA-rf4j-j272-fj86\",\"recommendation\":\"Update django to a patched version as soon as possible.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2018-6188\",\"https://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae\",\"https://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2\",\"https://github.com/advisories/GHSA-rf4j-j272-fj86\",\"https://github.com/django/django\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2018-4.yaml\",\"https://usn.ubuntu.com/3559-1\",\"https://web.archive.org/web/20200517143909/http://www.securitytracker.com/id/1040422\",\"https://www.djangoproject.com/weblog/2018/feb/01/security-releases\",\"https://osv.dev/vulnerability/GHSA-rf4j-j272-fj86\"],\"severity\":\"high\",\"title\":\"GHSA-rf4j-j272-fj86\"},{\"cve_id\":\"GHSA-rrqc-c2jx-6jgv\",\"cvss_score\":5.5,\"description\":\"Django allows enumeration of user e-mail addresses\",\"id\":\"GHSA-rrqc-c2jx-6jgv\",\"recommendation\":\"Consider updating django to a newer version when convenient.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2024-45231\",\"https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca\",\"https://github.com/django/django/commit/96d84047715ea1715b4bd1594e46122b8a77b9e2\",\"https://github.com/django/django/commit/bf4888d317ba4506d091eeac6e8b4f1fcc731199\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"https://github.com/django/django\",\"https://groups.google.com/forum/#%21forum/django-announce\",\"https://www.djangoproject.com/weblog/2024/sep/03/security-releases\",\"https://osv.dev/vulnerability/GHSA-rrqc-c2jx-6jgv\"],\"severity\":\"medium\",\"title\":\"GHSA-rrqc-c2jx-6jgv\"},{\"cve_id\":\"GHSA-vfq6-hq5r-27r6\",\"cvss_score\":9.5,\"description\":\"Django Potential account hijack via password reset form\",\"id\":\"GHSA-vfq6-hq5r-27r6\",\"recommendation\":\"Immediately update django to the latest secure version or consider alternative packages.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2019-19844\",\"https://github.com/django/django/commit/302a4ff1e8b1c798aab97673909c7a3dfda42c26\",\"https://github.com/django/django/commit/4d334bea06cac63dc1272abcec545b85136cca0e\",\"https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70\",\"https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2\",\"https://www.djangoproject.com/weblog/2019/dec/18/security-releases\",\"https://www.debian.org/security/2020/dsa-4598\",\"https://usn.ubuntu.com/4224-1\",\"https://security.netapp.com/advisory/ntap-20200110-0003\",\"https://security.gentoo.org/glsa/202004-17\",\"https://seclists.org/bugtraq/2020/Jan/9\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD\",\"https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2019-16.yaml\",\"https://github.com/django/django\",\"https://github.com/advisories/GHSA-vfq6-hq5r-27r6\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html\",\"https://osv.dev/vulnerability/GHSA-vfq6-hq5r-27r6\"],\"severity\":\"critical\",\"title\":\"GHSA-vfq6-hq5r-27r6\"},{\"cve_id\":\"GHSA-wh4h-v3f2-r2pp\",\"cvss_score\":8.0,\"description\":\"Uncontrolled Memory Consumption in Django\",\"id\":\"GHSA-wh4h-v3f2-r2pp\",\"recommendation\":\"Update django to a patched version as soon as possible.\",\"references\":[\"https://nvd.nist.gov/vuln/detail/CVE-2019-6975\",\"https://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227\",\"https://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676\",\"https://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3\",\"https://www.openwall.com/lists/oss-security/2019/02/11/1\",\"https://www.djangoproject.com/weblog/2019/feb/11/security-releases\",\"https://www.debian.org/security/2019/dsa-4476\",\"https://web.archive.org/web/20200227084713/http://www.securityfocus.com/bid/106964\",\"https://usn.ubuntu.com/3890-1\",\"https://seclists.org/bugtraq/2019/Jul/10\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HVXDOVCXLD74SHR2BENGCE2OOYYYWJHZ\",\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/66WMXHGBXD7GSM3PEXVCMCAGLMQYHZCU\",\"https://groups.google.com/forum/#!topic/django-announce/WTwEAprR0IQ\",\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2019-18.yaml\",\"https://github.com/django/django\",\"https://github.com/advisories/GHSA-wh4h-v3f2-r2pp\",\"https://docs.djangoproject.com/en/dev/releases/security\",\"https://osv.dev/vulnerability/GHSA-wh4h-v3f2-r2pp\"],\"severity\":\"high\",\"title\":\"GHSA-wh4h-v3f2-r2pp\"}],\"vulnerability_count\":13},\"gidgethub\":{\"package_name\":\"gidgethub\",\"recommendation\":\"This package has a high ratio of open issues (25 issues, 395 stars). It may be poorly maintained.\",\"risk_level\":\"low\",\"risk_score\":30.0,\"version\":\"4.0.0\",\"vulnerabilities\":[],\"vulnerability_count\":1},\"httpx\":{\"package_name\":\"httpx\",\"recommendation\":\"Cannot scan vulnerabilities without specific version number\",\"risk_level\":\"na\",\"risk_score\":0,\"version\":\"unknown\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"rich\":{\"package_name\":\"rich\",\"recommendation\":\"Cannot scan vulnerabilities without specific version number\",\"risk_level\":\"na\",\"risk_score\":0,\"version\":\"unknown\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"sqlparse\":{\"package_name\":\"sqlparse\",\"recommendation\":\"This package has a high ratio of open issues (260 issues, 3902 stars). It may be poorly maintained.\",\"risk_level\":\"low\",\"risk_score\":30.0,\"version\":\"0.3.1\",\"vulnerabilities\":[],\"vulnerability_count\":1},\"tzdata; sys_platform\":{\"package_name\":\"tzdata; sys_platform\",\"recommendation\":\"Cannot scan vulnerabilities - no vulnerability data available for this package.\",\"risk_level\":\"na\",\"risk_score\":0.0,\"version\":\"\\\"win32\\\"\",\"vulnerabilities\":[],\"vulnerability_count\":0},\"uritemplate\":{\"package_name\":\"uritemplate\",\"recommendation\":\"This package appears to be secure with no known vulnerabilities.\",\"risk_level\":\"safe\",\"risk_score\":0.0,\"version\":\"3.0.1\",\"vulnerabilities\":[],\"vulnerability_count\":0}}}\n"
          },
          "redirectURL": "",
          "headersSize": 182,
          "bodySize": 39766,
          "_transferSize": 39948
        },
        "cache": {},
        "timings": {
          "blocked": 0.45578063145512715,
          "dns": 0.00012500095181167126,
          "connect": 1.0000525217037648,
          "ssl": -1,
          "send": 0.8689639653312042,
          "wait": 15.230262164550368,
          "receive": 0.05961390706943348
        },
        "serverIPAddress": "127.0.0.1",
        "_serverPort": 5000,
        "connection": "37",
        "_fetchType": "Network Load",
        "_priority": "medium"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.248Z",
        "time": 3.865684186166618,
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:5000/static/js/results.js",
          "httpVersion": "HTTP/1.1",
          "cookies": [
            {
              "name": "session",
              "value": ".eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            }
          ],
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "If-Modified-Since",
              "value": "Thu, 17 Jul 2025 22:00:06 GMT"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "If-None-Match",
              "value": "\"1752789606.0151668-97762-112663532\""
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:5000/results"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Cookie",
              "value": "session=.eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            },
            {
              "name": "Priority",
              "value": "u=1, i"
            }
          ],
          "queryString": [],
          "headersSize": 1068,
          "bodySize": 0
        },
        "response": {
          "status": 304,
          "statusText": "NOT MODIFIED",
          "httpVersion": "HTTP/1.1",
          "cookies": [],
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:40:09 GMT, Tue, 22 Jul 2025 03:40:09 GMT"
            },
            {
              "name": "ETag",
              "value": "\"1752789606.0151668-97762-112663532\""
            },
            {
              "name": "Content-Disposition",
              "value": "inline; filename=results.js"
            },
            {
              "name": "Connection",
              "value": "close"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Server",
              "value": "Werkzeug/3.1.3 Python/3.13.1"
            }
          ],
          "content": {
            "size": 0,
            "compression": 0,
            "mimeType": "text/plain",
            "text": "// SVG for GitHub icon\nconst githubIconSVG = `<svg aria-hidden=\"true\" height=\"15\" viewBox=\"0 0 16 16\" width=\"15\" style=\"vertical-align:middle;margin-left:4px;fill:#333;display:inline-block;\"><path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"></path></svg>`;\n\n// Results page JavaScript for SBOM Analyzer\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('=== SBOM Results Page Debug ===');\n    console.log('DOM loaded, fetching scan data from backend...');\n    \n    // Initialize dependency sections to ensure they start collapsed\n    initializeDependencySections();\n\n    // Fetch scan data from backend\n    fetch('/api/scan_data')\n        .then(response => response.json())\n        .then(data => {\n            if (data.error) {\n        showError('No analysis results found. Please upload a file for analysis.');\n        return;\n    }\n            console.log('Scan data received from backend:', data);\n            // Always set vulnerability data globally for graph and popups\n            window.vulnerabilityDataFromServer = data.vulnerabilities && typeof data.vulnerabilities === 'object' ? data.vulnerabilities : {};\n            // Defensive: ensure sbom_data is an object\n            const sbomData = (data.sbom_data && typeof data.sbom_data === 'object') ? data.sbom_data : {};\n            // Defensive: ensure dependencies and dependency_tree are arrays\n            sbomData.dependencies = Array.isArray(sbomData.dependencies) ? sbomData.dependencies : [];\n            sbomData.dependency_tree = Array.isArray(sbomData.dependency_tree) ? sbomData.dependency_tree : [];\n            // Defensive: ensure project_type and filename are strings\n            sbomData.project_type = typeof data.project_type === 'string' ? data.project_type : 'Unknown';\n            sbomData.filename = typeof data.filename === 'string' ? data.filename : '-';\n            \n            // Store sbom data globally for filter access\n            window.sbomDataFromServer = sbomData;\n            \n            // Initialize the results page with robust data\n            initializeResults(sbomData);\n            \n            // Load package health data\n            loadPackageHealthData();\n        })\n        .catch(err => {\n            console.error('Failed to fetch scan data:', err);\n            showError('No analysis results found. Please upload a file for analysis.');\n        });\n\n    // Add export graph functionality\n    const exportBtn = document.getElementById('export-graph-btn');\n    if (exportBtn) {\n        exportBtn.onclick = function() {\n            try {\n                // Try to find the vis-network canvas\n                let graphDiv = document.getElementById('dependency-graph');\n                let canvas = graphDiv.querySelector('canvas');\n                if (!canvas) throw new Error('Graph canvas not found. Please ensure the graph is loaded.');\n                let image = canvas.toDataURL('image/png');\n                let a = document.createElement('a');\n                a.href = image;\n                a.download = 'graph.png';\n                a.click();\n            } catch (err) {\n                alert('Export failed: ' + err.message);\n            }\n        };\n    }\n});\n\n// Helper: compare two version strings (semver, loose)\nfunction compareVersions(v1, v2) {\n    // Split by dot, compare each part numerically\n    const a = v1.split('.').map(Number);\n    const b = v2.split('.').map(Number);\n    for (let i = 0; i < Math.max(a.length, b.length); i++) {\n        const n1 = a[i] || 0;\n        const n2 = b[i] || 0;\n        if (n1 > n2) return 1;\n        if (n1 < n2) return -1;\n    }\n    return 0;\n}\n\n// Deduplicate dependencies by name, keeping highest version\nfunction deduplicateDependencies(tree) {\n    const nodeMap = new Map(); // name.toLowerCase() -> {node, version, originalName}\n    const edges = [];\n\n    // First pass: flatten all nodes and keep highest version\n    function flatten(tree, parentKey = 'root') {\n        if (!Array.isArray(tree)) return;\n        for (const dep of tree) {\n            if (!dep.name || !dep.version) continue;\n            const name = dep.name;\n            const key = name.toLowerCase();\n            if (!nodeMap.has(key) || compareVersions(dep.version, nodeMap.get(key).version) > 0) {\n                nodeMap.set(key, { ...dep, originalName: dep.name });\n            }\n            // Record edge from parent to this node\n            edges.push({ from: parentKey, to: key });\n            // Recurse into subdependencies\n            if (Array.isArray(dep.subdependencies)) {\n                flatten(dep.subdependencies, key);\n            }\n        }\n    }\n    flatten(tree);\n\n    // Second pass: build deduped nodes and edges\n    // All edges point to the deduped node for each name\n    return {\n        nodes: Array.from(nodeMap.values()),\n        edges\n    };\n}\n\n// Clean package name for display (remove platform-specific markers)\nfunction cleanPackageNameForDisplay(pkgName) {\n    if (!pkgName) return pkgName;\n    \n    // Remove platform-specific markers and long conditional expressions\n    let cleaned = pkgName;\n    \n    // Remove quoted platform markers like \"aarch64\", \"x86_64\", etc.\n    // Pattern: package-\"platform\" -> package\n    cleaned = cleaned.replace(/-\\s*[\"']([^\"']+)[\"']/g, '');\n    \n    // Remove long conditional expressions in parentheses\n    // Pattern: package-(long_condition) -> package\n    cleaned = cleaned.replace(/-\\s*\\([^)]{20,}\\)/g, '');\n    \n    // Remove common platform identifiers\n    const platformPatterns = [\n        /-aarch64/i, /-x86_64/i, /-amd64/i, /-ppc64le/i, /-win32/i,\n        /-linux/i, /-macos/i, /-windows/i, /-darwin/i,\n        /-cp\\d+/i, /-py\\d+/i, /-abi\\d+/i  // Python version markers\n    ];\n    \n    platformPatterns.forEach(pattern => {\n        cleaned = cleaned.replace(pattern, '');\n    });\n    \n    // Clean up any double dashes or trailing dashes\n    cleaned = cleaned.replace(/-+/g, '-');  // Replace multiple dashes with single\n    cleaned = cleaned.replace(/-+$/, '');   // Remove trailing dash\n    \n    return cleaned.trim();\n}\n\n// Build graph data using deduplication\nfunction buildGraphDataDeduped(tree) {\n    const { nodes, edges } = deduplicateDependencies(tree);\n    // Add root node\n    const graphNodes = [\n        {\n            id: 'root',\n            label: 'Project Root\\n(Your Project)',\n            level: 0,\n            shape: 'ellipse',\n            color: { background: '#2c3e50', border: '#34495e' },\n            font: { color: '#fff', size: 16, bold: true },\n            size: 35\n        },\n        ...nodes.map(node => {\n            // Try both original and lowercased keys for vulnerability data\n            let vulnData = null;\n            if (window.vulnerabilityDataFromServer) {\n                vulnData = window.vulnerabilityDataFromServer[node.originalName] || window.vulnerabilityDataFromServer[node.originalName.toLowerCase()] || null;\n            }\n            \n            // Check for health issues\n            const healthIssue = getPackageHealthIssue(node.originalName);\n            \n            function isFlexibleOrInvalidVersion(version) {\n                if (!version) return true;\n                if (typeof version !== 'string') version = String(version);\n                // Mark as N/A if it does not contain any digit OR contains a '*'\n                return !(/[0-9]/.test(version)) || version.includes('*');\n            }\n            // If no vulnData, always treat as N/A \n            let riskLevel = 'na';\n            let riskScore = 0;\n            let vulnCount = 0;\n            if (vulnData) {\n                riskLevel = vulnData.risk_level;\n                riskScore = vulnData.risk_score;\n                vulnCount = vulnData.vulnerability_count;\n            }\n            if (isFlexibleOrInvalidVersion(node.version)) {\n                riskLevel = 'na';\n                riskScore = 0;\n                vulnCount = 0;\n            }\n            \n            // Override risk level if health issue exists, but keep vulnerability info\n            if (healthIssue) {\n                // Map health severity to risk level, but don't override if vulnerability is higher\n                const healthRiskLevel = healthIssue.severity;\n                const healthRiskScore = healthIssue.severity === 'critical' ? 95.0 :\n                                       healthIssue.severity === 'high' ? 80.0 :\n                                       healthIssue.severity === 'medium' ? 60.0 : 30.0;\n                \n                // Only override if health issue is more severe than vulnerability\n                if (healthRiskScore > riskScore) {\n                    riskLevel = healthRiskLevel;\n                    riskScore = healthRiskScore;\n                }\n                // If vulnerability is more severe, keep the vulnerability risk level\n            }\n            \n            // Color coding based on risk level only (not riskScore)\n            let nodeColors;\n            if (riskLevel === 'na') {\n                // N/A - Gray (neutral)\n                nodeColors = {\n                    background: '#95a5a6',\n                    border: '#7f8c8d',\n                    highlight: {\n                        background: '#bdc3c7',\n                        border: '#95a5a6'\n                    }\n                };\n            } else if (riskLevel === 'critical') {\n                // Critical - Dark red\n                nodeColors = {\n                    background: '#dc3545',\n                    border: '#c82333',\n                    highlight: {\n                        background: '#e74c3c',\n                        border: '#dc3545'\n                    }\n                };\n            } else if (riskLevel === 'high') {\n                // High - Red\n                nodeColors = {\n                    background: '#dc3545',\n                    border: '#c82333',\n                    highlight: {\n                        background: '#e74c3c',\n                        border: '#dc3545'\n                    }\n                };\n            } else if (riskLevel === 'medium') {\n                // Medium - Yellow\n                nodeColors = {\n                    background: '#f1c40f',\n                    border: '#f39c12',\n                    highlight: {\n                        background: '#f7dc6f',\n                        border: '#f1c40f'\n                    }\n                };\n            } else if (riskLevel === 'low') {\n                // Low - Green\n                nodeColors = {\n                    background: '#2ecc71',\n                    border: '#27ae60',\n                    highlight: {\n                        background: '#58d68d',\n                        border: '#2ecc71'\n                    }\n                };\n            } else {\n                // Safe - Green\n                nodeColors = {\n                    background: '#2ecc71',\n                    border: '#27ae60',\n                    highlight: {\n                        background: '#58d68d',\n                        border: '#2ecc71'\n                    }\n                };\n            }\n            \n            // Check if this is a direct dependency and has GitHub data\n            const isDirectDependency = window.sbomDataFromServer && \n                window.sbomDataFromServer.dependencies && \n                window.sbomDataFromServer.dependencies.some(dep => \n                    dep.name && dep.name.toLowerCase() === node.originalName.toLowerCase()\n                );\n            const hasGithub = node.github && typeof node.github === 'object' && Object.keys(node.github).length > 0;\n            \n            // Use cleaned name for display, but keep original for lookups\n            const displayName = cleanPackageNameForDisplay(node.originalName);\n            let label = `${displayName}`;\n            \n            // Show vulnerability count if there are vulnerabilities, regardless of health issues\n            if (vulnCount > 0) {\n                // Add a visual indicator for vulnerability count\n                const indicator = vulnCount > 9 ? '9+' : vulnCount.toString();\n                const vulnLabel = vulnCount === 1 ? 'vuln' : 'vulns';\n                label += `\\n⚠ ${indicator} ${vulnLabel}`;\n            } else if (healthIssue) {\n                // Only show health severity if no vulnerabilities\n                label += `\\n${healthIssue.severity}`;\n            } else if (riskLevel === 'na') {\n                label += `\\nN/A`;\n            }\n            \n            // --- FIX: Define 'title' for each node ---\n            let title = `${displayName}`;\n            if (node.version) title += ` v${node.version}`;\n            if (riskLevel === 'na') {\n                title += `\\nRisk: N/A`;\n            } else {\n                title += `\\nRisk: ${riskLevel.toUpperCase()}`;\n            }\n            if (vulnCount > 0) {\n                title += `\\nVulnerabilities: ${vulnCount}`;\n            }\n            if (healthIssue) {\n                title += `\\nHealth: ${healthIssue.severity}`;\n            }\n            \n            return {\n                id: node.originalName.toLowerCase(),\n                label: label,\n                level: 1,\n                version: node.version,\n                type: node.type,\n                risk_level: riskLevel,\n                risk_score: riskScore,\n                package_name: node.originalName,\n                color: nodeColors,\n                font: { \n                    color: '#fff', \n                    size: 14, \n                    bold: true, \n                    multi: true \n                },\n                size: 20,\n                title: title,\n                vuln_count: vulnCount,\n                health_issue: healthIssue\n            };\n        })\n    ];\n    // Edges: allow multiple parents to point to the same node\n    const graphEdges = edges.map(edge => ({\n        from: edge.from === 'root' ? 'root' : edge.from.toLowerCase(),\n        to: edge.to.toLowerCase(),\n            arrows: 'to',\n            smooth: { type: 'curvedCW', roundness: 0.2 },\n            width: 2\n    }));\n    return { nodes: graphNodes, edges: graphEdges };\n}\n\n// Use deduplicated graph for rendering, with node click events\nfunction renderDependencyGraph(dependencyTree) {\n    console.log('Rendering deduplicated dependency graph...');\n    const { nodes, edges } = buildGraphDataDeduped(dependencyTree);\n    const container = document.getElementById('dependency-graph');\n    if (!container) {\n        console.log('Dependency graph container not found');\n        return;\n    }\n    if (!nodes.length) {\n        container.innerHTML = '<p>No dependencies to display.</p>';\n        return;\n    }\n    if (typeof vis === 'undefined' || typeof vis.Network === 'undefined') {\n        console.error('vis.js library not loaded. Cannot render graph.');\n        container.innerHTML = '<p>Error: Graph library not loaded. Please refresh the page.</p>';\n        return;\n    }\n    const data = { nodes: new vis.DataSet(nodes), edges: new vis.DataSet(edges) };\n    \n    // Store references for filtering\n    currentGraphData = data;\n    \n    const options = {\n        layout: {\n            improvedLayout: true,\n            hierarchical: false,\n            randomSeed: 42\n        },\n        nodes: {\n            shape: 'box',\n            font: { size: 14, face: 'Arial' }, \n            borderWidth: 2, \n            shadow: true\n        },\n        edges: {\n            arrows: 'to',\n            smooth: { type: 'curvedCW', roundness: 0.2 }, \n            width: 2,\n            length: 200 \n        },\n        interaction: {\n            hover: false,  // Disable hover tooltips\n            zoomView: false,  // Disable zoom on mouse wheel\n            dragView: false,  // Disable dragging\n            selectConnectedEdges: false,\n            keyboard: {\n                enabled: false\n            }\n        },\n        physics: {\n            enabled: true,  // Enable temporarily to apply spacing\n            solver: 'forceAtlas2Based',\n            forceAtlas2Based: {\n                gravitationalConstant: -50,\n                centralGravity: 0.01,\n                springLength: 200,\n                springConstant: 0.08,\n                avoidOverlap: 1\n            },\n            barnesHut: {\n                gravitationalConstant: -20000,\n                centralGravity: 0.3,\n                springLength: 200,\n                springConstant: 0.04,\n                avoidOverlap: 1\n            },\n            stabilization: {\n                enabled: true,\n                iterations: 250,\n                updateInterval: 25\n            },\n            minVelocity: 0.75\n        }\n    };\n    const network = new vis.Network(container, data, options);\n    \n    // Store network reference globally for toggle function\n    window.currentNetwork = network;\n    currentNetwork = network;\n    \n    // Initialize graph filters with a delay to ensure data is available\n    setTimeout(() => {\n        initializeGraphFilters();\n    }, 500);\n    \n    // Disable physics after stabilization to keep nodes static\n    network.on('stabilizationIterationsDone', function() {\n        console.log('Graph stabilized, disabling physics');\n        network.setOptions({\n            physics: {\n                enabled: false\n            }\n        });\n        // Fit the graph to show all nodes with some padding\n        setTimeout(() => {\n            network.fit({\n                animation: {\n                    duration: 1000,\n                    easingFunction: 'easeInOutQuad'\n                }\n            });\n        }, 100);\n    });\n    \n    // Add click event for node details\n    network.on('click', function(params) {\n        if (params.nodes.length > 0) {\n            const nodeId = params.nodes[0];\n            const node = data.nodes.get(nodeId);\n            showNodeDetails(node, dependencyTree);\n        }\n    });\n\n    console.log('Dependency graph rendered with', nodes.length, 'nodes and', edges.length, 'edges');\n    console.log('Click the graph controls box to toggle zoom and drag interactions');\n    \n    // Set initial graph controls styling since interactions are disabled by default\n    setTimeout(() => {\n        const toggleButton = document.getElementById('graph-toggle-button');\n        const toggleIcon = document.getElementById('graph-toggle-icon');\n        const toggleText = document.getElementById('graph-toggle-text');\n        \n        if (toggleButton && toggleIcon && toggleText) {\n            toggleButton.style.backgroundColor = 'rgba(255,255,255,0.97)';\n            toggleButton.style.borderColor = '#e1e8ed';\n            toggleIcon.classList.remove('fa-hand-pointer');\n            toggleIcon.classList.add('fa-mouse-pointer');\n            toggleText.textContent = 'Zoom & Drag';\n        }\n    }, 100);\n}\n\n\n\nfunction showNodeDetails(node, dependencyTree) {\n    console.log('=== showNodeDetails Debug ===');\n    console.log('Node clicked:', node);\n    console.log('Node id:', node.id, 'label:', node.label);\n    console.log('Dependency tree:', dependencyTree);\n    console.log('Available vulnerability data:', window.vulnerabilityDataFromServer);\n    \n    // Handle root node specially\n    if (node.id === 'root') {\n        const popupContent = `\n            <div class=\"node-details-popup\">\n                <h3>Project Root</h3>\n                <div class=\"detail-row\">\n                    <strong>Type:</strong> Your Project\n                </div>\n                <div class=\"detail-row\">\n                    <strong>Direct Dependencies:</strong> ${dependencyTree.length}\n                </div>\n                <div class=\"detail-row\">\n                    <strong>Total Dependencies:</strong> ${countTotalDependencies(dependencyTree)}\n                </div>\n            </div>\n        `;\n        showModal(popupContent);\n        return;\n    }\n\n    // Extract package name from node (handle both old and new formats)\n    let packageName = node.package_name || node.label.split('\\n')[0];\n    const [name, role] = node.label.split('\\n');\n    console.log('Extracted name:', name, 'role:', role, 'packageName:', packageName);\n    const vulnKey = packageName.toLowerCase();\n    console.log('Vulnerability lookup key:', vulnKey);\n    \n    // Find the dependency data for this node (case-insensitive)\n    const dependency = findDependencyByName(packageName, dependencyTree);\n    console.log('Found dependency:', dependency);\n    \n    if (!dependency) {\n        console.warn('No dependency found for name:', packageName, '(case-insensitive)');\n        return;\n    }\n\n    // Try both original and lowercased keys for vulnerability data\n    let vulnData = null;\n    if (window.vulnerabilityDataFromServer) {\n        vulnData = window.vulnerabilityDataFromServer[packageName] || window.vulnerabilityDataFromServer[vulnKey] || null;\n    }\n    // Enforce N/A for flexible/invalid versions\n    function isFlexibleOrInvalidVersion(version) {\n        if (!version) return true;\n        if (typeof version !== 'string') version = String(version);\n        return !(/[0-9]/.test(version)) || version.includes('*');\n    }\n    let isNA = false;\n    if (node.risk_level === 'na' || isFlexibleOrInvalidVersion(node.version)) {\n        isNA = true;\n    }\n    if (isNA) {\n        // Show N/A details modal\n        showNAPackageDetails(dependency, role, vulnData || { risk_level: 'na', recommendation: 'Cannot scan vulnerabilities - no vulnerability data available for this package.' });\n    } else if (vulnData) {\n        showVulnerabilityDetails(dependency, role, vulnData);\n    } else {\n        showBasicNodeDetails(dependency, role);\n    }\n}\n\nfunction showBasicNodeDetails(dependency, role) {\n    // Add GitHub information if available\n    let githubSection = '';\n    if (dependency.github) {\n        const github = dependency.github;\n        \n        // Health assessment display\n        let healthSection = '';\n        if (github.health) {\n            const health = github.health;\n            const statusClass = `health-${health.overall_status}`;\n            const statusIcon = health.overall_status === 'excellent' ? 'fas fa-check-circle' :\n                              health.overall_status === 'good' ? 'fas fa-thumbs-up' :\n                              health.overall_status === 'moderate' ? 'fas fa-exclamation-triangle' :\n                              health.overall_status === 'poor' ? 'fas fa-times-circle' :\n                              'fas fa-radiation';\n            \n            healthSection = `\n                <div class=\"health-assessment\">\n                    <h4><i class=\"fas fa-heartbeat\"></i> Repository Health</h4>\n                    <div class=\"health-summary ${statusClass}\">\n                        <div class=\"health-status\">\n                            <i class=\"${statusIcon}\"></i>\n                            <span class=\"health-label\">${health.overall_status.toUpperCase()}</span>\n                            <span class=\"health-score\">${health.overall_score}/${health.max_score}</span>\n                        </div>\n\n                    </div>\n                    <div class=\"health-metrics\">\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">POPULARITY:</span>\n                            <span class=\"metric-value ${health.metrics.popularity.status}\">${health.metrics.popularity.status.replace(/_/g, ' ')} (${health.metrics.popularity.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">MAINTENANCE:</span>\n                            <span class=\"metric-value ${health.metrics.maintenance.status}\">${health.metrics.maintenance.status.replace(/_/g, ' ')} (${health.metrics.maintenance.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">ACTIVITY:</span>\n                            <span class=\"metric-value ${health.metrics.activity.status}\">${health.metrics.activity.status.replace(/_/g, ' ')} (${health.metrics.activity.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">COMMUNITY:</span>\n                            <span class=\"metric-value ${health.metrics.community.status}\">${health.metrics.community.status.replace(/_/g, ' ')} (${health.metrics.community.score}/4)</span>\n                        </div>\n                    </div>\n                </div>\n            `;\n        }\n        \n        githubSection = `\n            <div class=\"github-section\">\n                <h4><i class=\"fab fa-github\"></i> GitHub Repository</h4>\n                <div class=\"github-info\">\n                    <div class=\"detail-row\">\n                        <strong>Repository:</strong> \n                        <a href=\"${github.html_url}\" target=\"_blank\" rel=\"noopener noreferrer\">${github.full_name}</a>\n                    </div>\n                    ${github.description ? `\n                        <div class=\"detail-row\">\n                            <strong>Description:</strong> ${github.description}\n                        </div>\n                    ` : ''}\n                    <div class=\"github-stats\">\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-star\"></i> ${github.stargazers_count || 0} stars\n                        </div>\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-code-branch\"></i> ${github.forks_count || 0} forks\n                        </div>\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-exclamation-circle\"></i> ${github.open_issues_count || 0} open issues\n                        </div>\n                        ${github.language ? `\n                            <div class=\"github-stat\">\n                                <i class=\"fas fa-code\"></i> ${github.language}\n                            </div>\n                        ` : ''}\n                        ${github.pushed_at ? `\n                            <div class=\"github-stat\">\n                                <i class=\"fas fa-clock\"></i> Last Updated: ${new Date(github.pushed_at).toLocaleDateString()}\n                            </div>\n                        ` : ''}\n                    </div>\n                    ${healthSection}\n                </div>\n            </div>\n        `;\n    }\n\n    const popupContent = `\n        <div class=\"node-details-popup\">\n            <h3>${dependency.name}</h3>\n            <div class=\"detail-row\">\n                <strong>Role:</strong> ${role.replace(/[()]/g, '')}\n            </div>\n            <div class=\"detail-row\">\n                <strong>Version:</strong> ${dependency.version || 'Not specified'}\n            </div>\n            <div class=\"detail-row\">\n                <strong>Type:</strong> ${dependency.type || 'python'}\n            </div>\n            <div class=\"detail-row\">\n                <strong>Sub-dependencies:</strong> ${dependency.subdependencies ? dependency.subdependencies.length : 0}\n            </div>\n            ${dependency.subdependencies && dependency.subdependencies.length > 0 ? `\n                <div class=\"subdeps-list\">\n                    <strong>Sub-dependencies:</strong>\n                    <ul>\n                        ${dependency.subdependencies.map(sub => `<li>${sub.name} (Sub-dependency)</li>`).join('')}\n                    </ul>\n                </div>\n            ` : ''}\n            ${githubSection}\n        </div>\n    `;\n    showModal(popupContent);\n}\n\nfunction showVulnerabilityDetails(dependency, role, vulnData) {\n    console.log('=== showVulnerabilityDetails Debug ===');\n    console.log('Dependency:', dependency);\n    console.log('Vulnerability data:', vulnData);\n    console.log('Vulnerabilities array:', vulnData.vulnerabilities);\n    \n    const riskClass = `risk-${vulnData.risk_level}`;\n    const riskScore = vulnData.risk_score || 0;\n    const vulnCount = vulnData.vulnerability_count || 0;\n    \n    // Separate current and future vulnerabilities\n    let currentVulns = [];\n    let futureVulns = [];\n    if (vulnData.vulnerabilities && vulnData.vulnerabilities.length > 0) {\n        vulnData.vulnerabilities.forEach(vuln => {\n            // If the vuln has an 'affected_versions' or 'fixed_versions' field, use it to determine if it's a future vuln\n            // For now, use a custom field 'future_vuln' if present, else treat all as current\n            if (vuln.future_vuln) {\n                futureVulns.push(vuln);\n            } else {\n                currentVulns.push(vuln);\n            }\n        });\n    }\n    \n    // Sort vulnerabilities by severity (critical to none)\n    function vulnSort(a, b) {\n        const sevOrder = { 'critical': 0, 'high': 1, 'medium': 2, 'low': 3, 'none': 4 };\n        const aSev = sevOrder[a.severity] ?? 5;\n        const bSev = sevOrder[b.severity] ?? 5;\n        \n        // If same severity, sort by CVSS score (higher first)\n        if (aSev === bSev) {\n            const aScore = parseFloat(a.cvss_score) || 0;\n            const bScore = parseFloat(b.cvss_score) || 0;\n            return bScore - aScore;\n        }\n        \n        return aSev - bSev;\n    }\n    currentVulns.sort(vulnSort);\n    futureVulns.sort(vulnSort);\n\n    let vulnList = '';\n    if (currentVulns.length > 0) {\n        vulnList = `\n            <div class=\"vulnerabilities-section\">\n                <h4>Vulnerabilities Found (${currentVulns.length})</h4>\n                <div class=\"vuln-list\">\n                    ${currentVulns.map(vuln => {\n                        const severityClass = vuln.severity || 'none';\n                        const cvssDisplay = vuln.cvss_score ? `CVSS: ${vuln.cvss_score}` : '';\n                        const vulnId = vuln.cve_id || vuln.id || 'Unknown';\n                        const vulnTitle = vuln.title || vuln.description || 'No title available';\n                        const vulnDesc = vuln.description || vuln.title || 'No description available';\n                        \n                        return `\n                            <div class=\"vuln-item risk-${severityClass}\">\n                            <div class=\"vuln-header\">\n                                    <div class=\"vuln-id-section\">\n                                        <strong>${vulnId}</strong>\n                                        ${cvssDisplay ? `<span class=\"cvss-badge\">${cvssDisplay}</span>` : ''}\n                            </div>\n                                    <span class=\"severity-badge ${severityClass}\">${severityClass.toUpperCase()}</span>\n                                </div>\n                                <div class=\"vuln-title\">${vulnTitle}</div>\n                                <div class=\"vuln-description\">${vulnDesc}</div>\n                                ${vuln.recommendation ? `\n                            <div class=\"vuln-recommendation\">\n                                <strong>Recommendation:</strong> ${vuln.recommendation}\n                            </div>\n                                ` : ''}\n                            ${vuln.references && vuln.references.length > 0 ? `\n                                <div class=\"vuln-references\">\n                                    <strong>References:</strong>\n                                    <ul>\n                                            ${vuln.references.map(ref => `<li><a href=\"${ref}\" target=\"_blank\" rel=\"noopener noreferrer\">${ref}</a></li>`).join('')}\n                                    </ul>\n                                </div>\n                            ` : ''}\n                        </div>\n                        `;\n                    }).join('')}\n                </div>\n            </div>\n        `;\n    }\n    \n    let futureVulnList = '';\n    if (futureVulns.length > 0) {\n        futureVulnList = `\n            <div class=\"future-vulnerabilities-section\">\n                <h4>Future Vulnerabilities (${futureVulns.length})</h4>\n                <div class=\"future-vuln-explanation\">\n                    <em>These vulnerabilities affect newer versions than the one you are currently using. Be cautious when upgrading.</em>\n                </div>\n                <div class=\"vuln-list\">\n                    ${futureVulns.map(vuln => {\n                        const severityClass = vuln.severity || 'none';\n                        const cvssDisplay = vuln.cvss_score ? `CVSS: ${vuln.cvss_score}` : '';\n                        const vulnId = vuln.cve_id || vuln.id || 'Unknown';\n                        const vulnTitle = vuln.title || vuln.description || 'No title available';\n                        const vulnDesc = vuln.description || vuln.title || 'No description available';\n                        \n                        return `\n                            <div class=\"vuln-item risk-${severityClass}\">\n                                <div class=\"vuln-header\">\n                                    <div class=\"vuln-id-section\">\n                                        <strong>${vulnId}</strong>\n                                        ${cvssDisplay ? `<span class=\"cvss-badge\">${cvssDisplay}</span>` : ''}\n                                    </div>\n                                    <span class=\"severity-badge ${severityClass}\">${severityClass.toUpperCase()}</span>\n                                </div>\n                                <div class=\"vuln-title\">${vulnTitle}</div>\n                                <div class=\"vuln-description\">${vulnDesc}</div>\n                                ${vuln.recommendation ? `\n                            <div class=\"vuln-recommendation\">\n                                <strong>Recommendation:</strong> ${vuln.recommendation}\n                            </div>\n                                ` : ''}\n                            ${vuln.references && vuln.references.length > 0 ? `\n                                <div class=\"vuln-references\">\n                                    <strong>References:</strong>\n                                    <ul>\n                                            ${vuln.references.map(ref => `<li><a href=\"${ref}\" target=\"_blank\" rel=\"noopener noreferrer\">${ref}</a></li>`).join('')}\n                                    </ul>\n                                </div>\n                            ` : ''}\n                        </div>\n                        `;\n                    }).join('')}\n                </div>\n            </div>\n        `;\n    }\n    \n    // Add GitHub information if available\n    let githubSection = '';\n    if (dependency.github) {\n        const github = dependency.github;\n        \n        // Health assessment display\n        let healthSection = '';\n        if (github.health) {\n            const health = github.health;\n            const statusClass = `health-${health.overall_status}`;\n            const statusIcon = health.overall_status === 'excellent' ? 'fas fa-check-circle' :\n                              health.overall_status === 'good' ? 'fas fa-thumbs-up' :\n                              health.overall_status === 'moderate' ? 'fas fa-exclamation-triangle' :\n                              health.overall_status === 'poor' ? 'fas fa-times-circle' :\n                              'fas fa-radiation';\n            \n            healthSection = `\n                <div class=\"health-assessment\">\n                    <h4><i class=\"fas fa-heartbeat\"></i> Repository Health</h4>\n                    <div class=\"health-summary ${statusClass}\">\n                        <div class=\"health-status\">\n                            <i class=\"${statusIcon}\"></i>\n                            <span class=\"health-label\">${health.overall_status.toUpperCase()}</span>\n                            <span class=\"health-score\">${health.overall_score}/${health.max_score}</span>\n                        </div>\n                    </div>\n                    <div class=\"health-metrics\">\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">POPULARITY:</span>\n                            <span class=\"metric-value ${health.metrics.popularity.status}\">${health.metrics.popularity.status.replace(/_/g, ' ')} (${health.metrics.popularity.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">MAINTENANCE:</span>\n                            <span class=\"metric-value ${health.metrics.maintenance.status}\">${health.metrics.maintenance.status.replace(/_/g, ' ')} (${health.metrics.maintenance.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">ACTIVITY:</span>\n                            <span class=\"metric-value ${health.metrics.activity.status}\">${health.metrics.activity.status.replace(/_/g, ' ')} (${health.metrics.activity.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">COMMUNITY:</span>\n                            <span class=\"metric-value ${health.metrics.community.status}\">${health.metrics.community.status.replace(/_/g, ' ')} (${health.metrics.community.score}/4)</span>\n                        </div>\n                    </div>\n                </div>\n            `;\n        }\n        \n        githubSection = `\n            <div class=\"github-section\">\n                <h4><i class=\"fab fa-github\"></i> GitHub Repository</h4>\n                <div class=\"github-info\">\n            <div class=\"detail-row\">\n                        <strong>Repository:</strong> \n                        <a href=\"${github.html_url}\" target=\"_blank\" rel=\"noopener noreferrer\">${github.full_name}</a>\n            </div>\n                    ${github.description ? `\n                        <div class=\"detail-row\">\n                            <strong>Description:</strong> ${github.description}\n                        </div>\n                    ` : ''}\n                    <div class=\"github-stats\">\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-star\"></i> ${github.stargazers_count || 0} stars\n                        </div>\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-code-branch\"></i> ${github.forks_count || 0} forks\n                        </div>\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-exclamation-circle\"></i> ${github.open_issues_count || 0} open issues\n                        </div>\n                        ${github.language ? `\n                            <div class=\"github-stat\">\n                                <i class=\"fas fa-code\"></i> ${github.language}\n                            </div>\n                        ` : ''}\n                        ${github.pushed_at ? `\n                            <div class=\"github-stat\">\n                                <i class=\"fas fa-clock\"></i> Last Updated: ${new Date(github.pushed_at).toLocaleDateString()}\n                            </div>\n                        ` : ''}\n                    </div>\n                    ${healthSection}\n                </div>\n            </div>\n        `;\n    }\n\n    const popupContent = `\n        <div class=\"node-details-popup wide-node-modal\">\n            <div class=\"node-modal-columns\">\n                <div class=\"node-modal-left\">\n                    <h3>${dependency.name}</h3>\n            <div class=\"detail-row\">\n                <strong>Version:</strong> ${dependency.version || 'Not specified'}\n            </div>\n            <div class=\"detail-row\">\n                <strong>Type:</strong> ${dependency.type || 'python'}\n            </div>\n            <div class=\"detail-row\">\n                <strong>Sub-dependencies:</strong> ${dependency.subdependencies ? dependency.subdependencies.length : 0}\n            </div>\n                    ${githubSection}\n                </div>\n                <div class=\"node-modal-right\">\n                    <div class=\"security-section spaced-security-section\">\n                <h4>Security Assessment</h4>\n                <div class=\"risk-summary\">\n                    <div class=\"risk-level ${riskClass}\">\n                                <strong>Risk Level:</strong> ${vulnData.risk_level.toUpperCase()} (${riskScore.toFixed(1)})\n                    </div>\n                    <div class=\"risk-score\">\n                                <strong>Vulnerability Count:</strong> ${vulnCount}\n                    </div>\n                <div class=\"recommendation\">\n                    <strong>Recommendation:</strong> ${vulnData.recommendation}\n                    </div>\n                </div>\n                    </div>\n                    <div class=\"vulnerability-list-container\">\n            ${vulnList}\n                        ${futureVulnList}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n    showModal(popupContent);\n}\n\nfunction showNAPackageDetails(dependency, role, vulnData) {\n    console.log('=== showNAPackageDetails Debug ===');\n    console.log('Dependency:', dependency);\n    console.log('Vulnerability data:', vulnData);\n\n    // Add GitHub information if available\n    let githubSection = '';\n    if (dependency.github) {\n        const github = dependency.github;\n        \n        // Health assessment display\n        let healthSection = '';\n        if (github.health) {\n            const health = github.health;\n            const statusClass = `health-${health.overall_status}`;\n            const statusIcon = health.overall_status === 'excellent' ? 'fas fa-check-circle' :\n                              health.overall_status === 'good' ? 'fas fa-thumbs-up' :\n                              health.overall_status === 'moderate' ? 'fas fa-exclamation-triangle' :\n                              health.overall_status === 'poor' ? 'fas fa-times-circle' :\n                              'fas fa-radiation';\n            \n            healthSection = `\n                <div class=\"health-assessment\">\n                    <h4><i class=\"fas fa-heartbeat\"></i> Repository Health</h4>\n                    <div class=\"health-summary ${statusClass}\">\n                        <div class=\"health-status\">\n                            <i class=\"${statusIcon}\"></i>\n                            <span class=\"health-label\">${health.overall_status.toUpperCase()}</span>\n                            <span class=\"health-score\">${health.overall_score}/${health.max_score}</span>\n                </div>\n            </div>\n                    <div class=\"health-metrics\">\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">POPULARITY:</span>\n                            <span class=\"metric-value ${health.metrics.popularity.status}\">${health.metrics.popularity.status.replace(/_/g, ' ')} (${health.metrics.popularity.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">MAINTENANCE:</span>\n                            <span class=\"metric-value ${health.metrics.maintenance.status}\">${health.metrics.maintenance.status.replace(/_/g, ' ')} (${health.metrics.maintenance.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">ACTIVITY:</span>\n                            <span class=\"metric-value ${health.metrics.activity.status}\">${health.metrics.activity.status.replace(/_/g, ' ')} (${health.metrics.activity.score}/4)</span>\n                        </div>\n                        <div class=\"health-metric\">\n                            <span class=\"metric-label\" style=\"font-weight:bold;text-transform:uppercase;\">COMMUNITY:</span>\n                            <span class=\"metric-value ${health.metrics.community.status}\">${health.metrics.community.status.replace(/_/g, ' ')} (${health.metrics.community.score}/4)</span>\n                        </div>\n                    </div>\n                </div>\n            `;\n        }\n        \n        githubSection = `\n            <div class=\"github-section\">\n                <h4><i class=\"fab fa-github\"></i> GitHub Repository</h4>\n                <div class=\"github-info\">\n                    <div class=\"detail-row\">\n                        <strong>Repository:</strong> \n                        <a href=\"${github.html_url}\" target=\"_blank\" rel=\"noopener noreferrer\">${github.full_name}</a>\n                    </div>\n                    ${github.description ? `\n                        <div class=\"detail-row\">\n                            <strong>Description:</strong> ${github.description}\n                        </div>\n                    ` : ''}\n                    <div class=\"github-stats\">\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-star\"></i> ${github.stargazers_count || 0} stars\n                        </div>\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-code-branch\"></i> ${github.forks_count || 0} forks\n                        </div>\n                        <div class=\"github-stat\">\n                            <i class=\"fas fa-exclamation-circle\"></i> ${github.open_issues_count || 0} open issues\n                        </div>\n                        ${github.language ? `\n                            <div class=\"github-stat\">\n                                <i class=\"fas fa-code\"></i> ${github.language}\n                            </div>\n                        ` : ''}\n                        ${github.pushed_at ? `\n                            <div class=\"github-stat\">\n                                <i class=\"fas fa-clock\"></i> Last Updated: ${new Date(github.pushed_at).toLocaleDateString()}\n                            </div>\n                        ` : ''}\n                    </div>\n                    ${healthSection}\n                </div>\n            </div>\n        `;\n    }\n\n    const popupContent = `\n        <div class=\"node-details-popup\">\n            <h3>${dependency.name}</h3>\n            <div class=\"detail-row\">\n                <strong>Role:</strong> ${role.replace(/[()]/g, '')}\n            </div>\n            <div class=\"detail-row\">\n                <strong>Version:</strong> ${dependency.version || 'Not specified'}\n            </div>\n            <div class=\"detail-row\">\n                <strong>Type:</strong> ${dependency.type || 'python'}\n            </div>\n            <div class=\"detail-row\">\n                <strong>Sub-dependencies:</strong> ${dependency.subdependencies ? dependency.subdependencies.length : 0}\n            </div>\n            ${dependency.subdependencies && dependency.subdependencies.length > 0 ? `\n                <div class=\"subdeps-list\">\n                    <strong>Sub-dependencies:</strong>\n                    <ul>\n                        ${dependency.subdependencies.map(sub => `<li>${sub.name} (Sub-dependency)</li>`).join('')}\n                    </ul>\n                </div>\n            ` : ''}\n            <div class=\"security-section\">\n                <h4><i class=\"fas fa-shield-alt\"></i> Security Assessment</h4>\n                <div class=\"risk-summary risk-na\">\n                    <div class=\"risk-level\">\n                        <strong>Status:</strong> <span class=\"na-status\">N/A</span>\n                    </div>\n                    <div class=\"recommendation\">\n                        <strong>Reason:</strong> ${vulnData.recommendation}\n                    </div>\n                </div>\n            </div>\n            ${githubSection}\n        </div>\n    `;\n    showModal(popupContent);\n}\n\nfunction countTotalDependencies(dependencyTree) {\n    let count = 0;\n    for (const dep of dependencyTree) {\n        count++; // Count the dependency itself\n        if (dep.subdependencies) {\n            count += dep.subdependencies.length; // Count sub-dependencies\n        }\n    }\n    return count;\n}\n\nfunction findDependencyByName(name, dependencyTree) {\n    // Recursively search for dependency by name (case-insensitive)\n    const normalized = name.toLowerCase();\n    for (const dep of dependencyTree) {\n        if (dep.name && dep.name.toLowerCase() === normalized) return dep;\n        if (dep.subdependencies) {\n            const found = findDependencyByName(name, dep.subdependencies);\n            if (found) return found;\n        }\n    }\n    return null;\n}\n\nfunction showModal(content) {\n    // Remove any existing modal first\n    const existingModal = document.querySelector('.modal-overlay');\n    if (existingModal) {\n        document.body.removeChild(existingModal);\n        // Re-enable scrolling when removing modal\n        document.body.style.overflow = 'auto';\n    }\n    \n    // Hide any existing tooltips\n    const tooltips = document.querySelectorAll('.vis-tooltip');\n    tooltips.forEach(tooltip => tooltip.style.display = 'none');\n    \n    // Disable scrolling on the background page\n    document.body.style.overflow = 'hidden';\n    \n    // Create new modal\n    const modal = document.createElement('div');\n    modal.className = 'modal-overlay';\n    // Check if this is a node details popup and apply wide class to modal-content\n    let modalContentClass = 'modal-content';\n    if (content.includes('node-details-popup')) {\n        modalContentClass += ' wide-node-modal';\n    }\n    modal.innerHTML = `\n        <div class=\"${modalContentClass}\">\n            <span class=\"modal-close\">&times;</span>\n            ${content}\n        </div>\n    `;\n    \n    modal.querySelector('.modal-close').onclick = () => {\n        document.body.removeChild(modal);\n        // Re-enable scrolling when closing modal\n        document.body.style.overflow = 'auto';\n    };\n    \n    modal.onclick = (e) => {\n        if (e.target === modal) {\n            document.body.removeChild(modal);\n            // Re-enable scrolling when clicking outside modal\n            document.body.style.overflow = 'auto';\n        }\n    };\n    \n    document.body.appendChild(modal);\n}\n\nfunction initializeResults(data) {\n    console.log('=== initializeResults Debug ===');\n    console.log('Full SBOM data received:', data);\n    console.log('Data keys:', Object.keys(data));\n    \n    // Extract SBOM data from the correct structure\n    const sbomData = data.sbom || data;\n    console.log('Extracted sbomData:', sbomData);\n    console.log('sbomData keys:', Object.keys(sbomData));\n    \n    // Store vulnerability data globally for access in graph rendering\n    // Use data from server session if available, otherwise fall back to data.vulnerabilities\n    window.vulnerabilityData = window.vulnerabilityDataFromServer || data.vulnerabilities || {};\n    console.log('Stored vulnerability data:', window.vulnerabilityData);\n    console.log('Vulnerability data keys:', Object.keys(window.vulnerabilityData));\n    \n    // Debug: Show sample vulnerability data structure\n    if (Object.keys(window.vulnerabilityData).length > 0) {\n        const firstKey = Object.keys(window.vulnerabilityData)[0];\n        console.log('Sample vulnerability data for', firstKey, ':', window.vulnerabilityData[firstKey]);\n        \n        // Check if vulnerabilities array exists and has content\n        const sampleData = window.vulnerabilityData[firstKey];\n        if (sampleData.vulnerabilities) {\n            console.log('Vulnerabilities array length:', sampleData.vulnerabilities.length);\n            if (sampleData.vulnerabilities.length > 0) {\n                console.log('First vulnerability:', sampleData.vulnerabilities[0]);\n            }\n        }\n    }\n    \n    // Log SBOM data for debugging\n    console.log('SBOM dependencies field:', sbomData.dependencies);\n    console.log('SBOM vulnerabilities field:', sbomData.vulnerabilities);\n    console.log('SBOM security issues field:', sbomData.security_issues);\n    \n    // Display summary\n    displaySummary(sbomData);\n    \n    // Load health data first, then render graph\n    loadPackageHealthData().then(() => {\n        // Display dependency graph after health data is loaded\n        if (sbomData.dependency_tree) {\n            console.log('Rendering dependency graph with:', sbomData.dependency_tree);\n            renderDependencyGraph(sbomData.dependency_tree);\n        } else {\n            console.log('No dependency_tree found in sbomData');\n        }\n    }).catch(err => {\n        console.error('Failed to load health data, rendering graph anyway:', err);\n        // Fallback: render graph even if health data fails to load\n        if (sbomData.dependency_tree) {\n            console.log('Rendering dependency graph with:', sbomData.dependency_tree);\n            renderDependencyGraph(sbomData.dependency_tree);\n        }\n    });\n    \n    // Log final data summary for debugging\n    console.log('Final data summary:');\n    console.log('Dependencies:', sbomData.dependencies);\n    console.log('Dependency tree:', sbomData.dependency_tree);\n}\n\n// Helper to count unique dependencies in the full tree\nfunction countUniqueDependencies(tree, seen = new Set()) {\n    if (!Array.isArray(tree)) return 0;\n    for (const dep of tree) {\n        if (dep.name) {\n            const normalizedName = dep.name.toLowerCase();\n            if (!seen.has(normalizedName)) {\n                seen.add(normalizedName);\n                // Debug: log each unique dependency found (normalized)\n                console.log('Counting dependency:', normalizedName);\n                if (Array.isArray(dep.subdependencies)) {\n                    countUniqueDependencies(dep.subdependencies, seen);\n                }\n            }\n        } else {\n            console.warn('Dependency without a name property:', dep);\n        }\n    }\n    return seen.size;\n}\n\n// Update summary to use deduplicated nodes\nfunction displaySummary(data) {\n    console.log('Displaying summary with data:', data);\n    const projectType = document.getElementById('project-type');\n    const directDeps = document.getElementById('direct-deps');\n    const totalDeps = document.getElementById('total-deps');\n    if (projectType) projectType.textContent = typeof data.project_type === 'string' ? data.project_type : 'Unknown';\n    const directDepsCount = Array.isArray(data.dependencies) ? data.dependencies.length : 0;\n    // Use deduplicated nodes for total\n    const { nodes } = deduplicateDependencies(data.dependency_tree);\n    const totalDepsCount = nodes.length;\n    if (directDeps) directDeps.textContent = directDepsCount;\n    if (totalDeps) totalDeps.textContent = totalDepsCount;\n    console.log('Updated summary stats:', {\n        projectType: data.project_type,\n        directDeps: directDepsCount,\n        totalDeps: totalDepsCount\n    });\n    \n    // Display dependencies lists\n    if (Array.isArray(data.dependencies)) {\n        displayDirectDependencies(data.dependencies);\n    }\n    if (data.dependency_tree) {\n        displaySubDependencies(data.dependency_tree);\n    }\n}\n\n// Enhanced toggleDependencies function to initialize search when expanded\nfunction toggleDependencies(listId, iconId) {\n    const list = document.getElementById(listId);\n    const icon = document.getElementById(iconId);\n    if (!list || !icon) return;\n    const isCollapsed = list.classList.contains('collapsed');\n    \n    if (isCollapsed) {\n        list.classList.remove('collapsed');\n        list.classList.add('expanded');\n        icon.classList.remove('fa-chevron-right');\n        icon.classList.add('fa-chevron-down');\n    } else {\n        list.classList.remove('expanded');\n        list.classList.add('collapsed');\n        icon.classList.remove('fa-chevron-down');\n        icon.classList.add('fa-chevron-right');\n    }\n}\n\n// Function to ensure dependency sections start in correct collapsed state\nfunction initializeDependencySections() {\n    // Ensure direct dependencies section starts collapsed\n    const directDepsList = document.getElementById('direct-dependencies-list');\n    const directDepsIcon = document.getElementById('direct-deps-icon');\n    if (directDepsList && directDepsIcon) {\n        directDepsList.classList.remove('expanded');\n        directDepsList.classList.add('collapsed');\n        directDepsIcon.classList.remove('fa-chevron-down');\n        directDepsIcon.classList.add('fa-chevron-right');\n    }\n    \n    // Ensure sub-dependencies section starts collapsed\n    const allDepsList = document.getElementById('all-dependencies-list');\n    const allDepsIcon = document.getElementById('all-deps-icon');\n    if (allDepsList && allDepsIcon) {\n        allDepsList.classList.remove('expanded');\n        allDepsList.classList.add('collapsed');\n        allDepsIcon.classList.remove('fa-chevron-down');\n        allDepsIcon.classList.add('fa-chevron-right');\n    }\n}\n\n// Display direct dependencies in list format\nfunction displayDirectDependencies(dependencies) {\n    const directDepsList = document.getElementById(\"direct-dependencies-list\");\n    if (!directDepsList) return;\n    \n    if (!Array.isArray(dependencies) || dependencies.length === 0) {\n        // Keep the search bar but replace the content area\n        const searchBar = directDepsList.querySelector('.search-container');\n        directDepsList.innerHTML = '';\n        if (searchBar) {\n            directDepsList.appendChild(searchBar);\n        }\n        const noDepsMsg = document.createElement('p');\n        noDepsMsg.textContent = 'No direct dependencies found.';\n        directDepsList.appendChild(noDepsMsg);\n        return;\n    }\n    \n    // Deduplicate dependencies by name (case-insensitive), keeping the highest version\n    const deduplicatedDeps = [];\n    const seenPackages = new Map(); // name.toLowerCase() -> {dep, version}\n    \n    dependencies.forEach(dep => {\n        if (!dep.name) return;\n        const key = dep.name.toLowerCase();\n        const existing = seenPackages.get(key);\n        \n        if (!existing || compareVersions(dep.version, existing.version) > 0) {\n            seenPackages.set(key, dep);\n        }\n    });\n    \n    // Convert back to array\n    const uniqueDeps = Array.from(seenPackages.values());\n    \n    // Sort dependencies by risk level: critical -> high -> medium -> low -> safe -> na\n    const riskPriority = {\n        'critical': 6,\n        'high': 5,\n        'medium': 4,\n        'low': 3,\n        'safe': 2,\n        'na': 1\n    };\n    function isFlexibleOrInvalidVersion(version) {\n        if (!version) return true;\n        if (typeof version !== 'string') version = String(version);\n        return !(/[0-9]/.test(version)) || version.includes('*');\n    }\n    // Direct dependencies\n    const sortedDeps = uniqueDeps.sort((a, b) => {\n        function getRiskLevel(dep) {\n            const vulnData = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[dep.name] ? window.vulnerabilityDataFromServer[dep.name] : null;\n            if (!dep.version || typeof dep.version !== 'string' || !(/[0-9]/.test(dep.version)) || dep.version.includes('*')) {\n                return 'na';\n            }\n            // If no vulnData, treat as 'na' (not 'safe')\n            return vulnData ? vulnData.risk_level : 'na';\n        }\n        const riskLevelA = getRiskLevel(a);\n        const riskLevelB = getRiskLevel(b);\n        const priorityA = riskPriority[riskLevelA] || 0;\n        const priorityB = riskPriority[riskLevelB] || 0;\n        if (priorityA !== priorityB) {\n            return priorityB - priorityA;\n        }\n        return (a.name || '').localeCompare(b.name || '');\n    });\n    \n    // Preserve the search bar\n    const searchBar = directDepsList.querySelector('.search-container');\n    directDepsList.innerHTML = '';\n    if (searchBar) {\n        directDepsList.appendChild(searchBar);\n    }\n    \n    // Create a container for the dependency items\n    const itemsContainer = document.createElement('div');\n    itemsContainer.id = 'direct-dependencies-items';\n    \n    sortedDeps.forEach(dep => {\n        const vulnData = window.vulnerabilityDataFromServer && \n                        window.vulnerabilityDataFromServer[dep.name] ? \n                        window.vulnerabilityDataFromServer[dep.name] : null;\n        const forceNA = !vulnData || (vulnData && vulnData.risk_level === 'na');\n        const depItem = createDependencyItem(dep, false, forceNA, 'direct', false);\n        itemsContainer.appendChild(depItem);\n    });\n    \n    directDepsList.appendChild(itemsContainer);\n}\n\n// Display sub-dependencies in list format\nfunction displaySubDependencies(dependencyTree) {\n    const allDepsList = document.getElementById(\"all-dependencies-list\");\n    if (!allDepsList) return;\n    \n    // Get all unique dependencies from the tree (excluding direct dependencies)\n    const subDeps = getSubDependenciesFromTree(dependencyTree);\n    \n    if (subDeps.length === 0) {\n        // Keep the search bar but replace the content area\n        const searchBar = allDepsList.querySelector('.search-container');\n        allDepsList.innerHTML = '';\n        if (searchBar) {\n            allDepsList.appendChild(searchBar);\n        }\n        const noDepsMsg = document.createElement('p');\n        noDepsMsg.textContent = 'No sub-dependencies found.';\n        allDepsList.appendChild(noDepsMsg);\n        return;\n    }\n    \n    // Deduplicate sub-dependencies by name (case-insensitive), keeping the highest version\n    const seenSubPackages = new Map(); // name.toLowerCase() -> {dep, version}\n    \n    subDeps.forEach(dep => {\n        if (!dep.name) return;\n        const key = dep.name.toLowerCase();\n        const existing = seenSubPackages.get(key);\n        \n        if (!existing || compareVersions(dep.version, existing.version) > 0) {\n            seenSubPackages.set(key, dep);\n        }\n    });\n    \n    // Convert back to array\n    const uniqueSubDeps = Array.from(seenSubPackages.values());\n    \n    // Sort dependencies by risk level: critical -> high -> medium -> low -> safe -> na\n    const riskPriority = {\n        'critical': 6,\n        'high': 5,\n        'medium': 4,\n        'low': 3,\n        'safe': 2,\n        'na': 1\n    };\n    function isFlexibleOrInvalidVersion(version) {\n        if (!version) return true;\n        if (typeof version !== 'string') version = String(version);\n        return !(/[0-9]/.test(version)) || version.includes('*');\n    }\n    // Sub-dependencies\n    const sortedSubDeps = uniqueSubDeps.sort((a, b) => {\n        function getRiskLevel(dep) {\n            const vulnData = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[dep.name] ? window.vulnerabilityDataFromServer[dep.name] : null;\n            if (!dep.version || typeof dep.version !== 'string' || !(/[0-9]/.test(dep.version)) || dep.version.includes('*')) {\n                return 'na';\n            }\n            return vulnData ? vulnData.risk_level : 'na';\n        }\n        const riskLevelA = getRiskLevel(a);\n        const riskLevelB = getRiskLevel(b);\n        const priorityA = riskPriority[riskLevelA] || 0;\n        const priorityB = riskPriority[riskLevelB] || 0;\n        if (priorityA !== priorityB) {\n            return priorityB - priorityA;\n        }\n        return (a.name || '').localeCompare(b.name || '');\n    });\n    \n    // Preserve the search bar\n    const searchBar = allDepsList.querySelector('.search-container');\n    allDepsList.innerHTML = '';\n    if (searchBar) {\n        allDepsList.appendChild(searchBar);\n    }\n    \n    // Create a container for the dependency items\n    const itemsContainer = document.createElement('div');\n    itemsContainer.id = 'sub-dependencies-items';\n    \n    sortedSubDeps.forEach(dep => {\n        const vulnData = window.vulnerabilityDataFromServer && \n                        window.vulnerabilityDataFromServer[dep.name] ? \n                        window.vulnerabilityDataFromServer[dep.name] : null;\n        const forceNA = !vulnData || (vulnData && vulnData.risk_level === 'na');\n        const depItem = createDependencyItem(dep, false, forceNA, 'sub', false);\n        itemsContainer.appendChild(depItem);\n    });\n    \n    allDepsList.appendChild(itemsContainer);\n}\n\n// Helper function to get sub-dependencies from the tree (excluding direct dependencies)\nfunction getSubDependenciesFromTree(tree, seen = new Set(), directDeps = new Set()) {\n    const subDeps = [];\n    \n    // First pass: collect direct dependency names\n    if (Array.isArray(tree)) {\n        tree.forEach(dep => {\n            if (dep.name) {\n                directDeps.add(dep.name.toLowerCase());\n            }\n        });\n    }\n    \n    function traverse(node) {\n        if (!node.name) return;\n        \n        const normalizedName = node.name.toLowerCase();\n        \n        // Only add if it's not a direct dependency and we haven't seen it before\n        if (!directDeps.has(normalizedName) && !seen.has(normalizedName)) {\n            seen.add(normalizedName);\n            subDeps.push(node);\n        }\n        \n        if (Array.isArray(node.subdependencies)) {\n            node.subdependencies.forEach(traverse);\n        }\n    }\n    \n    if (Array.isArray(tree)) {\n        tree.forEach(traverse);\n    }\n    \n    return subDeps;\n}\n\n// Show dependency details when clicked\nfunction showDependencyDetails(depName, depVersion, source) {\n    console.log('Showing details for:', depName, depVersion, source);\n    \n    // Find the dependency in the appropriate data source\n    let dependency = null;\n    let dependencyTree = null;\n    \n    if (source === 'direct') {\n        // Look in direct dependencies\n        const directDeps = window.sbomDataFromServer && window.sbomDataFromServer.dependencies;\n        if (Array.isArray(directDeps)) {\n            dependency = directDeps.find(dep => dep.name === depName);\n        }\n    } else {\n        // Look in all dependencies tree\n        dependencyTree = window.sbomDataFromServer && window.sbomDataFromServer.dependency_tree;\n        if (Array.isArray(dependencyTree)) {\n            dependency = findDependencyByName(depName, dependencyTree);\n        }\n    }\n    \n    if (!dependency) {\n        // Create a minimal dependency object if not found\n        dependency = {\n            name: depName,\n            version: depVersion,\n            type: 'python'\n        };\n    }\n    \n    // Get vulnerability data\n    const vulnData = window.vulnerabilityDataFromServer && \n                    window.vulnerabilityDataFromServer[depName] ? \n                    window.vulnerabilityDataFromServer[depName] : null;\n    \n    // Show the details using existing modal system\n    if (vulnData) {\n        // Check if this is an N/A package (unknown version)\n        if (vulnData.risk_level === 'na') {\n            showNAPackageDetails(dependency, source, vulnData);\n        } else {\n            showVulnerabilityDetails(dependency, source, vulnData);\n        }\n    } else {\n        showBasicNodeDetails(dependency, source);\n    }\n}\n\n// Export SBOM analysis results to Excel\nfunction exportToExcel() {\n    // Show loading state\n    const exportBtn = document.querySelector('.export-btn');\n    const originalText = exportBtn.innerHTML;\n    exportBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Generating Excel...';\n    exportBtn.disabled = true;\n    \n    // Make request to server to generate Excel file\n    fetch('/export_excel', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(response => {\n        if (!response.ok) {\n            throw new Error('Export failed');\n        }\n        return response.blob();\n    })\n    .then(blob => {\n        // Create download link\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `sbom_analysis_${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.xlsx`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n        \n        // Show success message\n        alert('Excel report exported successfully!');\n    })\n    .catch(error => {\n        console.error('Error exporting to Excel:', error);\n        alert('Error exporting to Excel. Please try again.');\n    })\n    .finally(() => {\n        // Restore button state\n        exportBtn.innerHTML = originalText;\n        exportBtn.disabled = false;\n    });\n}\n\nfunction showError(message) {\n    const container = document.querySelector('.results-container');\n    if (container) {\n        container.innerHTML = `\n            <div class=\"error-message\">\n                <h3>Error</h3>\n                <p>${message}</p>\n            </div>\n        `;\n    }\n} \n\n// Global health data storage\nwindow.healthDataFromServer = null;\n\nfunction loadPackageHealthData() {\n    // Get scan_id from URL parameters\n    const urlParams = new URLSearchParams(window.location.search);\n    const scanId = urlParams.get('scan_id');\n    \n    // Build the API URL with scan_id parameter if available\n    let apiUrl = '/api/package_health';\n    if (scanId) {\n        apiUrl += `?scan_id=${scanId}`;\n    }\n    \n    return fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => {\n            // Store health data globally\n            window.healthDataFromServer = data;\n            \n            if (data.total_issues > 0) {\n                displayPackageHealthWarning(data);\n            }\n            \n            return data; // Return data for chaining\n        })\n        .catch(err => {\n            console.error('Failed to fetch package health data:', err);\n            throw err; // Re-throw for error handling\n        });\n}\n\n// Function to check if a package has health issues\nfunction getPackageHealthIssue(packageName) {\n    if (!window.healthDataFromServer || !window.healthDataFromServer.issues) {\n        return null;\n    }\n    \n    return window.healthDataFromServer.issues.find(issue => \n        issue.package_name.toLowerCase() === packageName.toLowerCase()\n    );\n}\n\n// Display package health warning\nfunction displayPackageHealthWarning(healthData) {\n    const warningDiv = document.getElementById('package-health-warning');\n    const contentDiv = document.getElementById('package-health-content');\n    \n    if (!warningDiv || !contentDiv) return;\n    \n    let html = '';\n    \n    if (healthData.issues && healthData.issues.length > 0) {\n        html += '<div class=\"health-issues-list\">';\n        healthData.issues.forEach(issue => {\n            const severityClass = `health-${issue.severity}`;\n            const severityIcon = issue.severity === 'critical' ? 'fas fa-radiation' :\n                               issue.severity === 'high' ? 'fas fa-exclamation-triangle' :\n                               issue.severity === 'medium' ? 'fas fa-exclamation-circle' :\n                               'fas fa-info-circle';\n            \n            html += `\n                <div class=\"health-issue ${severityClass}\">\n                    <div class=\"health-issue-header\">\n                        <i class=\"${severityIcon}\"></i>\n                        <strong>${issue.package_name}</strong>\n                        ${issue.version ? `(${issue.version})` : ''}\n                        <span class=\"severity-badge ${issue.severity}\">${issue.severity.toUpperCase()}</span>\n                    </div>\n                    <div class=\"health-issue-details\">\n                        <p>${issue.details.warning}</p>\n                        <p><strong>Recommendation:</strong> ${issue.details.recommendation}</p>\n                        ${issue.details.replacement ? `<p><strong>Replacement:</strong> ${issue.details.replacement}</p>` : ''}\n                    </div>\n                </div>\n            `;\n        });\n        html += '</div>';\n    }\n    \n    contentDiv.innerHTML = html;\n    warningDiv.style.display = 'block';\n} \n\n// Graph filtering functionality\nlet currentGraphData = null;\nlet currentNetwork = null;\nlet selectedDependencies = new Set();\n\n// Initialize graph filter dropdowns\nfunction initializeGraphFilters() {\n    const filterSelect = document.getElementById('graph-filter');\n    const dependencyPanel = document.getElementById('dependency-selection-panel');\n    \n    if (!filterSelect) {\n        console.log('Filter elements not found');\n        return;\n    }\n    \n    console.log('Initializing graph filters...');\n    console.log('window.sbomDataFromServer:', window.sbomDataFromServer);\n    \n    // Populate dependency lists\n    populateDependencyLists();\n    \n    // Show/hide dependency panel based on filter choice\n    filterSelect.addEventListener('change', function() {\n        console.log('Filter changed to:', this.value);\n        if (this.value === 'select-direct') {\n            dependencyPanel.style.display = 'block';\n            console.log('Showing dependency selection panel');\n        } else {\n            dependencyPanel.style.display = 'none';\n            console.log('Hiding dependency selection panel');\n        }\n    });\n}\n\n// Populate the available and selected dependency lists\nfunction populateDependencyLists() {\n    const availableList = document.getElementById('available-dependencies-list');\n    const selectedList = document.getElementById('selected-dependencies-list');\n    \n    if (!availableList || !selectedList) return;\n    \n    console.log('Populating dependency lists');\n    \n    // Use the new function to update both lists\n    updateBothDependencyLists();\n}\n\n// Create a dependency item element\nfunction createDependencyItem(dep, isSelected, forceNA, source, isSelectionList) {\n    const depItem = document.createElement('div');\n    depItem.className = `dependency-item dep-item${isSelected ? ' selected' : ''}`;\n    depItem.dataset.depId = dep.name.toLowerCase();\n\n    // Get vulnerability data for color coding\n    const vulnData = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[dep.name] ? window.vulnerabilityDataFromServer[dep.name] : null;\n    // Check for health issues\n    const healthIssue = getPackageHealthIssue(dep.name);\n    let riskClass = 'risk-safe';\n    let riskText = 'Safe';\n    let borderColor = '#2ecc71';\n    let vulnCount = 0;\n    // If forceNA is true, always show as N/A and gray\n    if (forceNA) {\n        riskClass = 'risk-na';\n        riskText = 'N/A';\n        borderColor = '#95a5a6';\n    } else if (vulnData) {\n        if (vulnData.risk_level === 'critical' || vulnData.risk_level === 'high') {\n            riskClass = 'risk-critical';\n            riskText = vulnData.risk_level.toUpperCase();\n            borderColor = '#dc3545';\n        } else if (vulnData.risk_level === 'medium') {\n            riskClass = 'risk-medium';\n            riskText = 'MEDIUM';\n            borderColor = '#f1c40f';\n        } else if (vulnData.risk_level === 'low') {\n            riskClass = 'risk-low';\n            riskText = 'LOW';\n            borderColor = '#2ecc71';\n        } else if (vulnData.risk_level === 'safe') {\n            riskClass = 'risk-safe';\n            riskText = 'Safe';\n            borderColor = '#2ecc71';\n        }\n        vulnCount = vulnData.vulnerability_count || 0;\n    }\n    depItem.style.borderLeft = `6px solid ${borderColor}`;\n    depItem.style.cursor = 'pointer';\n\n    const depInfo = document.createElement('div');\n    depInfo.className = 'dep-info';\n\n    // Left section: name and version\n    const leftSection = document.createElement('div');\n    leftSection.style.display = 'flex';\n    leftSection.style.alignItems = 'center';\n    leftSection.style.gap = '10px';\n    const depName = document.createElement('span');\n    depName.className = 'dependency-name';\n    depName.textContent = dep.name;\n    // Restore GitHub icon for direct dependencies with github info\n    if (source === 'direct' && dep.github) {\n        depName.innerHTML += githubIconSVG;\n    }\n    const depVersion = document.createElement('span');\n    depVersion.className = 'dependency-version';\n    depVersion.textContent = dep.version;\n    leftSection.appendChild(depName);\n    leftSection.appendChild(depVersion);\n\n    // Right section: risk and vuln count\n    const rightSection = document.createElement('div');\n    rightSection.className = 'dep-right';\n    const riskSpan = document.createElement('span');\n    riskSpan.className = `dependency-risk ${riskClass}`;\n    riskSpan.textContent = riskText;\n    rightSection.appendChild(riskSpan);\n    // Vulnerability count\n    if (vulnData && vulnData.risk_level !== 'na' && vulnCount > 0) {\n        const vulnSpan = document.createElement('span');\n        vulnSpan.className = 'dependency-vulns';\n        vulnSpan.textContent = `(${vulnCount} vuln${vulnCount === 1 ? '' : 's'})`;\n        rightSection.appendChild(vulnSpan);\n    }\n    depInfo.appendChild(leftSection);\n    depInfo.appendChild(rightSection);\n\n    // Make the entire item clickable\n    if (isSelectionList) {\n        depItem.onclick = () => {\n            if (isSelected) {\n                removeDependency(dep.name.toLowerCase());\n            } else {\n                addDependency(dep.name.toLowerCase());\n            }\n        };\n    } else {\n        depItem.onclick = () => {\n            showDependencyDetails(dep.name, dep.version, source || 'direct');\n        };\n    }\n    depItem.appendChild(depInfo);\n    return depItem;\n}\n\n// Add a dependency to the selection\nfunction addDependency(depId) {\n    selectedDependencies.add(depId);\n    console.log('Added dependency:', depId);\n    updateBothDependencyLists();\n    applyGraphFilter();\n}\n\n// Remove a dependency from the selection\nfunction removeDependency(depId) {\n    selectedDependencies.delete(depId);\n    console.log('Removed dependency:', depId);\n    updateBothDependencyLists();\n    applyGraphFilter();\n}\n\n// Clear all selected dependencies\nfunction clearAllSelections() {\n    selectedDependencies.clear();\n    console.log('Cleared all selections');\n    updateBothDependencyLists();\n    applyGraphFilter();\n}\n\n// Update both available and selected dependency lists\nfunction updateBothDependencyLists() {\n    updateAvailableDependenciesList();\n    updateSelectedDependenciesList();\n}\n\n// Update the available dependencies list\nfunction updateAvailableDependenciesList() {\n    const availableList = document.getElementById('available-dependencies-list');\n    if (!availableList) return;\n    \n    let dependencies = [];\n    \n    // Get dependencies from sbomDataFromServer\n    if (window.sbomDataFromServer && window.sbomDataFromServer.dependencies) {\n        dependencies = window.sbomDataFromServer.dependencies;\n    } else if (currentGraphData) {\n        // Fallback to graph data\n        const allNodes = currentGraphData.nodes.get();\n        const allEdges = currentGraphData.edges.get();\n        \n        const directDeps = allEdges\n            .filter(edge => edge.from === 'root')\n            .map(edge => {\n                const node = allNodes.find(n => n.id === edge.to);\n                return node ? { name: node.package_name || node.id, version: node.version || 'unknown' } : null;\n            })\n            .filter(dep => dep !== null);\n        \n        dependencies = directDeps;\n    }\n    \n    // Sort dependencies by risk level: critical > high > medium > low > safe > na\n    const riskPriority = {\n        'critical': 6,\n        'high': 5,\n        'medium': 4,\n        'low': 3,\n        'safe': 2,\n        'na': 1\n    };\n    dependencies = dependencies.slice().sort((a, b) => {\n        const vulnDataA = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[a.name] ? window.vulnerabilityDataFromServer[a.name] : null;\n        const vulnDataB = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[b.name] ? window.vulnerabilityDataFromServer[b.name] : null;\n        const riskLevelA = vulnDataA ? vulnDataA.risk_level : 'safe';\n        const riskLevelB = vulnDataB ? vulnDataB.risk_level : 'safe';\n        const priorityA = riskPriority[riskLevelA] || 0;\n        const priorityB = riskPriority[riskLevelB] || 0;\n        if (priorityA !== priorityB) {\n            return priorityB - priorityA;\n        }\n        return (a.name || '').localeCompare(b.name || '');\n    });\n\n    // Clear existing list\n    availableList.innerHTML = '';\n    \n    // Add only unselected dependencies to the available list\n    dependencies.forEach(dep => {\n        const depId = dep.name.toLowerCase();\n        const vulnData = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[dep.name] ? window.vulnerabilityDataFromServer[dep.name] : null;\n        const forceNA = !vulnData || (vulnData && vulnData.risk_level === 'na');\n        if (!selectedDependencies.has(depId)) {\n            const depItem = createDependencyItem(dep, false, forceNA, 'direct', true);\n            availableList.appendChild(depItem);\n        }\n    });\n    \n    // Show message if no available dependencies\n    if (availableList.children.length === 0) {\n        availableList.innerHTML = '<div class=\"no-deps-message\">All dependencies have been selected</div>';\n    }\n}\n\n// Update the selected dependencies list\nfunction updateSelectedDependenciesList() {\n    const selectedList = document.getElementById('selected-dependencies-list');\n    if (!selectedList) return;\n    \n    selectedList.innerHTML = '';\n    \n    if (selectedDependencies.size === 0) {\n        selectedList.innerHTML = '<div class=\"no-deps-message\">No dependencies selected</div>';\n        return;\n    }\n    \n    // Get dependencies from sbomDataFromServer\n    let dependencies = [];\n    if (window.sbomDataFromServer && window.sbomDataFromServer.dependencies) {\n        dependencies = window.sbomDataFromServer.dependencies;\n    }\n    // Sort dependencies by risk level: critical > high > medium > low > safe > na\n    const riskPriority = {\n        'critical': 6,\n        'high': 5,\n        'medium': 4,\n        'low': 3,\n        'safe': 2,\n        'na': 1\n    };\n    const selectedDeps = Array.from(selectedDependencies).map(depId => dependencies.find(d => d.name.toLowerCase() === depId)).filter(Boolean);\n    const sortedSelectedDeps = selectedDeps.slice().sort((a, b) => {\n        const vulnDataA = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[a.name] ? window.vulnerabilityDataFromServer[a.name] : null;\n        const vulnDataB = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[b.name] ? window.vulnerabilityDataFromServer[b.name] : null;\n        const riskLevelA = vulnDataA ? vulnDataA.risk_level : 'safe';\n        const riskLevelB = vulnDataB ? vulnDataB.risk_level : 'safe';\n        const priorityA = riskPriority[riskLevelA] || 0;\n        const priorityB = riskPriority[riskLevelB] || 0;\n        if (priorityA !== priorityB) {\n            return priorityB - priorityA;\n        }\n        return (a.name || '').localeCompare(b.name || '');\n    });\n    // Add selected dependencies to the list\n    sortedSelectedDeps.forEach(dep => {\n        const vulnData = window.vulnerabilityDataFromServer && window.vulnerabilityDataFromServer[dep.name] ? window.vulnerabilityDataFromServer[dep.name] : null;\n        const forceNA = !vulnData || (vulnData && vulnData.risk_level === 'na');\n        const depItem = createDependencyItem(dep, true, forceNA, 'direct', true);\n        selectedList.appendChild(depItem);\n    });\n}\n\n// Apply graph filter based on current selection\nfunction applyGraphFilter() {\n    const filterSelect = document.getElementById('graph-filter');\n    \n    if (!filterSelect || !currentNetwork || !currentGraphData) return;\n    \n    const filterValue = filterSelect.value;\n    \n    console.log('Applying graph filter:', filterValue, Array.from(selectedDependencies));\n    \n    // Get all nodes and edges\n    const allNodes = currentGraphData.nodes.get();\n    const allEdges = currentGraphData.edges.get();\n    \n    // Determine which nodes to show based on filter\n    const nodesToShow = new Set();\n    const edgesToShow = [];\n    \n    // Always show root node\n    nodesToShow.add('root');\n    \n    if (filterValue === 'all') {\n        // Show all nodes and edges\n        allNodes.forEach(node => nodesToShow.add(node.id));\n        edgesToShow.push(...allEdges);\n    } else if (filterValue === 'direct-only') {\n        // Show only direct dependencies (nodes connected to root)\n        const directDeps = allEdges\n            .filter(edge => edge.from === 'root')\n            .map(edge => edge.to);\n        \n        directDeps.forEach(dep => nodesToShow.add(dep));\n        \n        // Add edges from root to direct deps\n        edgesToShow.push(...allEdges.filter(edge => edge.from === 'root'));\n    } else if (filterValue === 'select-direct' && selectedDependencies.size > 0) {\n        // Show selected direct dependencies and their sub-dependencies\n        selectedDependencies.forEach(depId => {\n            nodesToShow.add(depId);\n            \n            // Find all sub-dependencies of this dependency\n            const subDeps = findSubDependencies(depId, allNodes, allEdges);\n            subDeps.forEach(dep => nodesToShow.add(dep));\n        });\n        \n        // Add edges within the selected dependency trees\n        edgesToShow.push(...allEdges.filter(edge => \n            nodesToShow.has(edge.from) && nodesToShow.has(edge.to)\n        ));\n    }\n    \n    // Update graph visibility\n    updateGraphVisibility(nodesToShow, edgesToShow);\n}\n\n// Find all sub-dependencies of a given dependency\nfunction findSubDependencies(dependencyId, allNodes, allEdges) {\n    const subDeps = new Set();\n    const toVisit = [dependencyId];\n    \n    while (toVisit.length > 0) {\n        const current = toVisit.pop();\n        \n        // Find all edges from current node\n        const outgoingEdges = allEdges.filter(edge => edge.from === current);\n        \n        outgoingEdges.forEach(edge => {\n            if (!subDeps.has(edge.to)) {\n                subDeps.add(edge.to);\n                toVisit.push(edge.to);\n            }\n        });\n    }\n    \n    return Array.from(subDeps);\n}\n\n// Update graph visibility by showing/hiding nodes and edges\nfunction updateGraphVisibility(nodesToShow, edgesToShow) {\n    if (!currentNetwork || !currentGraphData) return;\n    \n    const allNodes = currentGraphData.nodes.get();\n    const allEdges = currentGraphData.edges.get();\n    \n    // Hide all nodes first\n    allNodes.forEach(node => {\n        currentGraphData.nodes.update({\n            id: node.id,\n            hidden: !nodesToShow.has(node.id)\n        });\n    });\n    \n    // Hide all edges first\n    allEdges.forEach(edge => {\n        currentGraphData.edges.update({\n            id: edge.id,\n            hidden: true\n        });\n    });\n    \n    // Show only the edges we want\n    edgesToShow.forEach(edge => {\n        currentGraphData.edges.update({\n            id: edge.id,\n            hidden: false\n        });\n    });\n    \n    // Fit the graph to show visible nodes\n    setTimeout(() => {\n        currentNetwork.fit({\n            animation: {\n                duration: 500,\n                easingFunction: 'easeInOutQuad'\n            }\n        });\n    }, 100);\n} \n\n// Filter available dependencies based on search input\nfunction filterAvailableDependencies() {\n    const searchInput = document.getElementById('dependency-search');\n    const availableList = document.getElementById('available-dependencies-list');\n    \n    if (!searchInput || !availableList) return;\n    \n    const searchTerm = searchInput.value.toLowerCase().trim();\n    const depItems = availableList.querySelectorAll('.dep-item');\n    \n    depItems.forEach(item => {\n        // Extract just the text content from dependency-name, excluding SVG icons\n        const depNameElement = item.querySelector('.dependency-name');\n        let depName = '';\n        if (depNameElement) {\n            // Get text content excluding SVG elements\n            depName = Array.from(depNameElement.childNodes)\n                .filter(node => node.nodeType === Node.TEXT_NODE)\n                .map(node => node.textContent)\n                .join('')\n                .toLowerCase();\n        }\n        \n        const depVersionElement = item.querySelector('.dependency-version');\n        const depVersion = depVersionElement ? depVersionElement.textContent.toLowerCase() : '';\n        \n        // Check if search term matches name or version\n        const matches = depName.includes(searchTerm) || depVersion.includes(searchTerm);\n        \n        if (matches || searchTerm === '') {\n            item.classList.remove('hidden');\n        } else {\n            item.classList.add('hidden');\n        }\n    });\n    \n    // Show \"no results\" message if no items match\n    const visibleItems = availableList.querySelectorAll('.dep-item:not(.hidden)');\n    const noResultsMsg = availableList.querySelector('.no-results-message');\n    \n    if (visibleItems.length === 0 && searchTerm !== '') {\n        if (!noResultsMsg) {\n            const msg = document.createElement('div');\n            msg.className = 'no-results-message';\n            msg.textContent = `No dependencies found matching \"${searchTerm}\"`;\n            availableList.appendChild(msg);\n        }\n    } else if (noResultsMsg) {\n        noResultsMsg.remove();\n    }\n}\n\n// Filter selected dependencies based on search input\nfunction filterSelectedDependencies() {\n    const searchInput = document.getElementById('selected-dependency-search');\n    const selectedList = document.getElementById('selected-dependencies-list');\n    \n    if (!searchInput || !selectedList) return;\n    \n    const searchTerm = searchInput.value.toLowerCase().trim();\n    const depItems = selectedList.querySelectorAll('.dep-item');\n    \n    depItems.forEach(item => {\n        // Extract just the text content from dependency-name, excluding SVG icons\n        const depNameElement = item.querySelector('.dependency-name');\n        let depName = '';\n        if (depNameElement) {\n            // Get text content excluding SVG elements\n            depName = Array.from(depNameElement.childNodes)\n                .filter(node => node.nodeType === Node.TEXT_NODE)\n                .map(node => node.textContent)\n                .join('')\n                .toLowerCase();\n        }\n        \n        const depVersionElement = item.querySelector('.dependency-version');\n        const depVersion = depVersionElement ? depVersionElement.textContent.toLowerCase() : '';\n        \n        // Check if search term matches name or version\n        const matches = depName.includes(searchTerm) || depVersion.includes(searchTerm);\n        \n        if (matches || searchTerm === '') {\n            item.classList.remove('hidden');\n        } else {\n            item.classList.add('hidden');\n        }\n    });\n    \n    // Show \"no results\" message if no items match\n    const visibleItems = selectedList.querySelectorAll('.dep-item:not(.hidden)');\n    const noResultsMsg = selectedList.querySelector('.no-results-message');\n    \n    if (visibleItems.length === 0 && searchTerm !== '') {\n        if (!noResultsMsg) {\n            const msg = document.createElement('div');\n            msg.className = 'no-results-message';\n            msg.textContent = `No selected dependencies found matching \"${searchTerm}\"`;\n            selectedList.appendChild(msg);\n        }\n    } else if (noResultsMsg) {\n        noResultsMsg.remove();\n    }\n}\n\n// Filter direct dependencies based on search input\nfunction filterDirectDependencies() {\n    const searchInput = document.getElementById('direct-dependencies-search');\n    const directDepsList = document.getElementById('direct-dependencies-list');\n    if (!searchInput || !directDepsList) return;\n    \n    const searchTerm = searchInput.value.toLowerCase().trim();\n    const depItems = directDepsList.querySelectorAll('.dependency-item');\n    \n    depItems.forEach(item => {\n        // Extract just the text content from dependency-name, excluding SVG icons\n        const depNameElement = item.querySelector('.dependency-name');\n        let depName = '';\n        if (depNameElement) {\n            // Get text content excluding SVG elements\n            depName = Array.from(depNameElement.childNodes)\n                .filter(node => node.nodeType === Node.TEXT_NODE)\n                .map(node => node.textContent)\n                .join('')\n                .toLowerCase();\n        }\n        \n        const depVersionElement = item.querySelector('.dependency-version');\n        const depVersion = depVersionElement ? depVersionElement.textContent.toLowerCase() : '';\n        \n        const matches = depName.includes(searchTerm) || depVersion.includes(searchTerm);\n        item.classList.toggle('hidden', !matches && searchTerm !== '');\n    });\n    \n    // Show \"no results\" message if no items match\n    const visibleItems = directDepsList.querySelectorAll('.dependency-item:not(.hidden)');\n    const noResultsMsg = directDepsList.querySelector('.no-results-message');\n    \n    if (visibleItems.length === 0 && searchTerm !== '') {\n        if (!noResultsMsg) {\n            const msg = document.createElement('div');\n            msg.className = 'no-results-message';\n            msg.textContent = `No direct dependencies found matching \"${searchTerm}\"`;\n            directDepsList.appendChild(msg);\n        }\n    } else if (noResultsMsg) {\n        noResultsMsg.remove();\n    }\n}\n\nfunction filterSubDependencies() {\n    const searchInput = document.getElementById('sub-dependencies-search');\n    const allDepsList = document.getElementById('all-dependencies-list');\n    if (!searchInput || !allDepsList) return;\n    \n    const searchTerm = searchInput.value.toLowerCase().trim();\n    const depItems = allDepsList.querySelectorAll('.dependency-item');\n    \n    depItems.forEach(item => {\n        // Extract just the text content from dependency-name, excluding SVG icons\n        const depNameElement = item.querySelector('.dependency-name');\n        let depName = '';\n        if (depNameElement) {\n            // Get text content excluding SVG elements\n            depName = Array.from(depNameElement.childNodes)\n                .filter(node => node.nodeType === Node.TEXT_NODE)\n                .map(node => node.textContent)\n                .join('')\n                .toLowerCase();\n        }\n        \n        const depVersionElement = item.querySelector('.dependency-version');\n        const depVersion = depVersionElement ? depVersionElement.textContent.toLowerCase() : '';\n        \n        const matches = depName.includes(searchTerm) || depVersion.includes(searchTerm);\n        item.classList.toggle('hidden', !matches && searchTerm !== '');\n    });\n    \n    // Show \"no results\" message if no items match\n    const visibleItems = allDepsList.querySelectorAll('.dependency-item:not(.hidden)');\n    const noResultsMsg = allDepsList.querySelector('.no-results-message');\n    \n    if (visibleItems.length === 0 && searchTerm !== '') {\n        if (!noResultsMsg) {\n            const msg = document.createElement('div');\n            msg.className = 'no-results-message';\n            msg.textContent = `No sub-dependencies found matching \"${searchTerm}\"`;\n            allDepsList.appendChild(msg);\n        }\n    } else if (noResultsMsg) {\n        noResultsMsg.remove();\n    }\n}\n\nfunction exportToSpdx() {\n    const exportBtns = document.querySelectorAll('.export-btn');\n    const originalTexts = Array.from(exportBtns).map(btn => btn.innerHTML);\n    exportBtns.forEach(btn => {\n        if (btn.innerText.includes('SPDX')) {\n            btn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Generating SPDX...';\n            btn.disabled = true;\n        }\n    });\n    fetch('/export_spdx', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(response => {\n        if (!response.ok) {\n            throw new Error('Export failed');\n        }\n        return response.blob();\n    })\n    .then(blob => {\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `sbom_${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.spdx.json`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n        alert('SPDX file exported successfully!');\n    })\n    .catch(error => {\n        console.error('Error exporting SPDX:', error);\n        alert('Error exporting SPDX. Please try again.');\n    })\n    .finally(() => {\n        exportBtns.forEach((btn, i) => {\n            if (btn.innerText.includes('SPDX')) {\n                btn.innerHTML = originalTexts[i];\n                btn.disabled = false;\n            }\n        });\n    });\n}"
          },
          "redirectURL": "",
          "headersSize": 279,
          "bodySize": 0,
          "_transferSize": 279
        },
        "cache": {},
        "timings": {
          "blocked": 0.8017023428692482,
          "dns": 0.00008333154255524278,
          "connect": 0.00012500095181167126,
          "ssl": -1,
          "send": 1.4730333132320084,
          "wait": 1.5827058596187271,
          "receive": 0.00799266854301095
        },
        "serverIPAddress": "127.0.0.1",
        "_serverPort": 5000,
        "connection": "35",
        "_fetchType": "Memory Cache",
        "_priority": "high"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.231Z",
        "time": 5.513467127457261,
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:5000/results",
          "httpVersion": "HTTP/1.1",
          "cookies": [
            {
              "name": "session",
              "value": ".eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            }
          ],
          "headers": [
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "navigate"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:5000/"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Cookie",
              "value": "session=.eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "document"
            },
            {
              "name": "Priority",
              "value": "u=0, i"
            }
          ],
          "queryString": [],
          "headersSize": 1038,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "cookies": [],
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:40:09 GMT"
            },
            {
              "name": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "Connection",
              "value": "close"
            },
            {
              "name": "Content-Length",
              "value": "31373"
            },
            {
              "name": "Server",
              "value": "Werkzeug/3.1.3 Python/3.13.1"
            }
          ],
          "content": {
            "size": 31373,
            "compression": 0,
            "mimeType": "text/html",
            "text": "<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>SBOM Analysis Results</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"/static/css/style.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\"\n    />\n    <script src=\"https://unpkg.com/vis-network/standalone/umd/vis-network.min.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <header class=\"header\" style=\"background: linear-gradient(135deg, #012169 0%, #01194a 100%);\">\n            <h1 style=\"color: #012169;\"><i class=\"fas fa-shield-alt\"></i> SBOM Analysis Results</h1>\n        <div class=\"header-actions\">\n          <button class=\"export-btn\" onclick=\"exportToExcel()\">\n            <i class=\"fas fa-file-excel\"></i> Export to Excel\n          </button>\n          <button class=\"export-btn spdx-btn\" onclick=\"exportToSpdx()\" style=\"background-color: #8e44ad; color: #fff; border-color: #7d3c98;\">\n            <i class=\"fas fa-file-code\"></i> Export as SPDX\n          </button>\n          <a href=\"/\" class=\"back-btn\">\n                <i class=\"fas fa-arrow-left\"></i> Back to Upload\n            </a>\n        </div>\n        </header>\n\n        <div class=\"results-container\">\n            <!-- Simple Summary Section -->\n            <div class=\"summary-section\">\n                <div class=\"summary-card\">\n                    <div class=\"summary-header\">\n                        <h2><i class=\"fas fa-chart-pie\"></i> Project Summary</h2>\n                    </div>\n                    <div class=\"summary-content\">\n                        <div class=\"summary-grid\">\n                            <div class=\"summary-item\">\n                                <div class=\"summary-label\">Project Type</div>\n                                <div class=\"summary-value\" id=\"project-type\">-</div>\n                            </div>\n                            <div class=\"summary-item\">\n                                <div class=\"summary-label\">Direct Dependencies</div>\n                                <div class=\"summary-value\" id=\"direct-deps\">-</div>\n                            </div>\n                            <div class=\"summary-item\">\n                                <div class=\"summary-label\">Total Dependencies</div>\n                                <div class=\"summary-value\" id=\"total-deps\">-</div>\n                            </div>\n                        </div>\n\n              <!-- Direct Dependencies List -->\n              <div class=\"dependencies-list-section\">\n                <h3\n                  class=\"dependencies-toggle\"\n                  onclick=\"toggleDependencies('direct-dependencies-list', 'direct-deps-icon')\"\n                >\n                  <i class=\"fas fa-chevron-right\" id=\"direct-deps-icon\"></i>\n                  Direct Dependencies\n                </h3>\n                <div\n                  id=\"direct-dependencies-list\"\n                  class=\"dependencies-list collapsed\"\n                >\n                  <!-- Search bar for direct dependencies -->\n                  <div class=\"search-container\">\n                    <input type=\"text\" id=\"direct-dependencies-search\" class=\"dependency-search\" placeholder=\"Search direct dependencies...\" oninput=\"filterDirectDependencies()\">\n                    <i class=\"fas fa-search search-icon\"></i>\n                  </div>\n                  <!-- Direct dependencies will be populated here -->\n                </div>\n              </div>\n\n              <!-- Sub-dependencies List -->\n              <div class=\"dependencies-list-section\">\n                <h3\n                  class=\"dependencies-toggle\"\n                  onclick=\"toggleDependencies('all-dependencies-list', 'all-deps-icon')\"\n                >\n                  <i class=\"fas fa-chevron-right\" id=\"all-deps-icon\"></i>\n                  Sub-Dependencies\n                </h3>\n                <div\n                  id=\"all-dependencies-list\"\n                  class=\"dependencies-list collapsed\"\n                >\n                  <!-- Search bar for sub-dependencies -->\n                  <div class=\"search-container\">\n                    <input type=\"text\" id=\"sub-dependencies-search\" class=\"dependency-search\" placeholder=\"Search sub-dependencies...\" oninput=\"filterSubDependencies()\">\n                    <i class=\"fas fa-search search-icon\"></i>\n                  </div>\n                  <!-- Sub-dependencies will be populated here -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Vulnerability Scanning Notice -->\n            <div class=\"dev-notice instruction-box\">\n                <div class=\"notice-content\">\n                    <h3>\n                        <i class=\"fas fa-shield-virus\"></i> Vulnerability Scanning & GitHub Enrichment Active\n                    </h3>\n                    <p>\n                        Real-time vulnerability scanning is now enabled! Packages are\n                        color-coded by risk level:\n                        <span class=\"risk-critical\">Red (High/Critical)</span>,\n                        <span class=\"risk-medium\">Yellow (Medium)</span>,\n                        <span class=\"risk-low\">Green (Low/Safe)</span>. Click any package\n                        to see detailed vulnerability information.\n                    </p>\n                    <p style=\"margin-top: 10px; font-size: 0.95em; color: #666;\">\n                        <i class=\"fab fa-github\"></i> <strong>GitHub Enrichment:</strong> Repository health information \n                        (popularity, maintenance status, activity) is provided for <strong>direct dependencies only</strong>. \n                        This helps you assess package quality beyond just security vulnerabilities.\n                    </p>\n                </div>\n            </div>\n        </div>\n\n        <!-- Package Health Warning -->\n        <div id=\"package-health-warning\" style=\"display: none;\">\n          <div class=\"dev-notice package-health-warning\">\n            <div class=\"notice-content\">\n              <h3 class=\"expandable-toggle\" onclick=\"toggleSection('package-health-content', 'package-health-icon')\">\n                <i id=\"package-health-icon\" class=\"fas fa-chevron-right\"></i> <i class=\"fas fa-exclamation-triangle\"></i> Package Health Issues Detected\n              </h3>\n              <div id=\"package-health-content\" class=\"expandable-content collapsed\">\n                <!-- Package health content will be populated here -->\n              </div>\n            </div>\n                </div>\n            </div>\n\n            <!-- Simple Dependency Graph -->\n            <div class=\"graph-section\">\n                <div class=\"section\">\n                    <!-- Dependency Graph Section Header with Export Button Aligned Right -->\n                    <div style=\"display: flex; align-items: center; justify-content: space-between; margin-bottom: 16px; gap: 16px; flex-wrap: wrap;\">\n                      <h2 style=\"margin: 0;\"><i class=\"fas fa-project-diagram\"></i> Dependency Graph</h2>\n                      <button id=\"export-graph-btn\" class=\"btn export-graph-btn\" style=\"background: #01194a; min-width: 210px; font-size: 1.25em; padding: 20px 36px; height: 60px; display: flex; align-items: center; gap: 12px;\">\n                        <i class=\"fas fa-image\"></i> Export Graph as PNG\n                      </button>\n                    </div>\n            \n            <!-- Graph Filter Controls -->\n            <div class=\"graph-filter-controls\">\n              <div class=\"filter-section\">\n                <label for=\"graph-filter\" class=\"filter-label\">\n                  <i class=\"fas fa-filter\"></i> Filter Graph:\n                </label>\n                <select id=\"graph-filter\" class=\"filter-dropdown\" onchange=\"applyGraphFilter()\">\n                  <option value=\"all\">All Dependencies</option>\n                  <option value=\"direct-only\">Direct Dependencies Only</option>\n                  <option value=\"select-direct\">Select Direct Dependencies</option>\n                </select>\n              </div>\n            </div>\n            \n            <!-- Dependency Selection Panel -->\n            <div id=\"dependency-selection-panel\" class=\"dependency-panel\" style=\"display: none;\">\n              <div class=\"panel-header\">\n                <h3><i class=\"fas fa-layer-group\"></i> Dependency Selection</h3>\n                <button class=\"clear-selection-btn\" onclick=\"clearAllSelections()\">\n                  <i class=\"fas fa-times\"></i> Clear All\n                </button>\n              </div>\n              <div class=\"panel-content\">\n                <div class=\"dependency-lists\">\n                  <div class=\"available-deps\">\n                    <h4><i class=\"fas fa-list\"></i> Available Dependencies</h4>\n                    <div class=\"search-container\">\n                      <input type=\"text\" id=\"dependency-search\" class=\"dependency-search\" placeholder=\"Search dependencies...\" oninput=\"filterAvailableDependencies()\">\n                      <i class=\"fas fa-search search-icon\"></i>\n                    </div>\n                    <div id=\"available-dependencies-list\" class=\"deps-list\">\n                      <!-- Available dependencies will be populated here -->\n                    </div>\n                  </div>\n                  <div class=\"selected-deps\">\n                    <h4><i class=\"fas fa-check-circle\"></i> Selected Dependencies</h4>\n                    <div class=\"search-container\">\n                      <input type=\"text\" id=\"selected-dependency-search\" class=\"dependency-search\" placeholder=\"Search selected dependencies...\" oninput=\"filterSelectedDependencies()\">\n                      <i class=\"fas fa-search search-icon\"></i>\n                    </div>\n                    <div id=\"selected-dependencies-list\" class=\"deps-list\">\n                      <!-- Selected dependencies will be populated here -->\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"graph-container\" style=\"position: relative\">\n                        <div id=\"dependency-graph\" class=\"dependency-graph\"></div>\n                <!-- Graph Controls Toggle Button -->\n                <div class=\"graph-toggle-button\" id=\"graph-toggle-button\" onclick=\"toggleGraphControls()\">\n                    <i class=\"fas fa-mouse-pointer\" id=\"graph-toggle-icon\"></i>\n                    <span id=\"graph-toggle-text\">Zoom & Drag</span>\n                </div>\n                <!-- Graph Controls Info Box -->\n                <div class=\"graph-info-box\" id=\"graph-controls-box\">\n                    <strong>Graph Controls:</strong><br />\n                    <ul style=\"margin: 8px 0 0 18px; padding: 0; font-size: 0.98em\">\n                        <li>Click nodes to see detailed information</li>\n                        <li>Click the toggle button (top-right) to enable zoom and drag</li>\n                        <li>Drag nodes to rearrange them</li>\n                    </ul>\n                </div>\n            </div>\n          </div>\n        </div>\n\n\n    </div>\n\n    <style>\n      .dependencies-list-section {\n        margin-top: 20px;\n        padding-top: 20px;\n        border-top: 1px solid #e9ecef;\n      }\n\n      .dependencies-list-section h3 {\n        margin: 0 0 15px 0;\n        color: #2c3e50;\n        font-size: 1.2em;\n      }\n\n      .dependencies-toggle {\n        cursor: pointer;\n        user-select: none;\n        transition: color 0.2s ease;\n      }\n\n      .dependencies-toggle:hover {\n        color: #3498db;\n      }\n\n      .dependencies-toggle i {\n        margin-right: 8px;\n        transition: transform 0.3s ease;\n      }\n\n      .dependencies-toggle:hover i {\n        transform: translateX(2px);\n      }\n\n      .dependencies-list {\n        max-height: 0;\n        overflow: hidden;\n        transition: max-height 0.3s ease;\n      }\n\n      .dependencies-list.expanded {\n        max-height: none;\n      }\n\n      .dependencies-list.collapsed {\n        max-height: 0;\n        overflow: hidden;\n      }\n\n      .dependency-item.hidden {\n        display: none;\n      }\n\n      /* Graph Toggle Button Styles */\n      .graph-toggle-button {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background: rgba(255, 255, 255, 0.97);\n        border: 2px solid #e1e8ed;\n        border-radius: 8px;\n        padding: 8px 12px;\n        cursor: pointer;\n        font-size: 0.9em;\n        font-weight: 500;\n        color: #2c3e50;\n        transition: all 0.2s ease;\n        z-index: 1000;\n        display: flex;\n        align-items: center;\n        gap: 6px;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      }\n\n      .graph-toggle-button:hover {\n        background: rgba(52, 152, 219, 0.2);\n        transform: translateY(-1px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n      }\n\n      .graph-toggle-button:active {\n        transform: translateY(0);\n      }\n\n      .graph-toggle-button i {\n        font-size: 0.95em;\n      }\n\n      /* Graph Info Box Styles */\n      .graph-info-box {\n        position: absolute;\n        top: 10px;\n        left: 10px;\n        background: rgba(255, 255, 255, 0.95);\n        border: 2px solid #e1e8ed;\n        border-radius: 8px;\n        padding: 12px 16px;\n        font-size: 0.9em;\n        color: #2c3e50;\n        max-width: 280px;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        z-index: 999;\n        backdrop-filter: blur(5px);\n      }\n\n      .graph-info-box strong {\n        color: #34495e;\n        font-weight: 600;\n      }\n\n      .graph-info-box ul {\n        margin: 8px 0 0 18px;\n        padding: 0;\n        font-size: 0.95em;\n        line-height: 1.4;\n      }\n\n      .graph-info-box li {\n        margin-bottom: 4px;\n        color: #555;\n      }\n\n      .dependencies-list {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n      }\n\n      .dependency-item {\n        display: flex;\n        align-items: center;\n        padding: 10px 15px;\n        border-radius: 6px;\n        border-left: 4px solid;\n        background: #f8f9fa;\n        transition: all 0.2s ease;\n        cursor: pointer;\n      }\n\n      .dependency-item:hover {\n        transform: translateX(5px);\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        background: #e9ecef;\n      }\n\n      .dependency-name {\n        font-weight: bold;\n        color: #2c3e50;\n        min-width: 150px;\n      }\n\n      .dependency-version {\n        color: #6c757d;\n        margin-left: 15px;\n      }\n\n      /* Graph Filter Controls */\n      .graph-filter-controls {\n        margin-bottom: 20px;\n        padding: 20px;\n        background: white;\n        border: 2px solid #e9ecef;\n        border-radius: 12px;\n        display: flex;\n        align-items: center;\n        gap: 20px;\n        flex-wrap: wrap;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        transition: all 0.2s ease;\n      }\n\n      .graph-filter-controls:hover {\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        border-color: #d1ecf1;\n      }\n\n      .filter-section {\n        display: flex;\n        align-items: center;\n        gap: 15px;\n        flex-wrap: wrap;\n      }\n\n      .filter-label {\n        font-weight: 600;\n        color: #2c3e50;\n        font-size: 1em;\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        letter-spacing: 0.5px;\n      }\n\n      .filter-dropdown {\n        padding: 12px 16px;\n        border: 2px solid #e1e8ed;\n        border-radius: 8px;\n        background: white;\n        color: #2c3e50;\n        font-size: 0.95em;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        min-width: 220px;\n        appearance: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%232c3e50' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e\");\n        background-repeat: no-repeat;\n        background-position: right 12px center;\n        background-size: 16px;\n        padding-right: 40px;\n      }\n\n      .filter-dropdown:hover {\n        border-color: #3498db;\n        box-shadow: 0 4px 8px rgba(52, 152, 219, 0.15);\n        transform: translateY(-1px);\n      }\n\n      .filter-dropdown:focus {\n        outline: none;\n        border-color: #3498db;\n        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n      }\n\n      .filter-dropdown option {\n        padding: 10px 12px;\n        background: white;\n        color: #2c3e50;\n        font-size: 0.9em;\n      }\n\n      .filter-dropdown option:hover {\n        background: #f8f9fa;\n      }\n\n      /* Dependency Selection Panel */\n      .dependency-panel {\n        margin: 20px 0;\n        background: #f8f9fa;\n        border: 1px solid #e9ecef;\n        border-radius: 8px;\n        overflow: hidden;\n      }\n      \n      .panel-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 15px 20px;\n        background: #2c3e50;\n        color: white;\n      }\n      \n      .panel-header h3 {\n        margin: 0;\n        font-size: 1.1em;\n        display: flex;\n        align-items: center;\n        gap: 8px;\n      }\n      \n      .clear-selection-btn {\n        background: #e74c3c;\n        color: white;\n        border: none;\n        padding: 6px 12px;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 0.9em;\n        display: flex;\n        align-items: center;\n        gap: 5px;\n        transition: background-color 0.2s ease;\n      }\n      \n      .clear-selection-btn:hover {\n        background: #c0392b;\n      }\n      \n      .panel-content {\n        padding: 20px;\n      }\n      \n      .dependency-lists {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 20px;\n      }\n      \n      .available-deps, .selected-deps {\n        background: white;\n        border-radius: 6px;\n        padding: 15px;\n        border: 1px solid #e9ecef;\n      }\n      \n      .available-deps h4, .selected-deps h4 {\n        margin: 0 0 15px 0;\n        color: #2c3e50;\n        font-size: 1em;\n        display: flex;\n        align-items: center;\n        gap: 6px;\n      }\n      \n      .deps-list {\n        max-height: 300px;\n        overflow-y: auto;\n      }\n      \n      .dep-item {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 10px 12px;\n        margin-bottom: 8px;\n        background: #f8f9fa;\n        border-radius: 6px;\n        border-left: 4px solid #6c757d;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      }\n      \n      .dep-item:hover {\n        background: #e9ecef;\n        transform: translateX(3px);\n      }\n      \n      .dep-item.selected {\n        background: #d4edda;\n        border-left-color: #28a745;\n      }\n      \n      .dep-item.selected:hover {\n        background: #c3e6cb;\n      }\n      \n      .dep-info {\n        flex: 1;\n      }\n      \n      .dep-name {\n        font-weight: 600;\n        color: #2c3e50;\n        font-size: 0.95em;\n      }\n      \n      .dep-version {\n        color: #6c757d;\n        font-size: 0.85em;\n        margin-top: 2px;\n      }\n      \n      /* Enhanced clickable item styling */\n      .dep-item {\n        cursor: pointer;\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .dep-item::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, transparent 0%, rgba(52, 152, 219, 0.05) 50%, transparent 100%);\n        transform: translateX(-100%);\n        transition: transform 0.3s ease;\n      }\n      \n      .dep-item:hover::before {\n        transform: translateX(100%);\n      }\n      \n      .dep-item.selected::before {\n        background: linear-gradient(90deg, transparent 0%, rgba(220, 53, 69, 0.05) 50%, transparent 100%);\n      }\n      \n      .no-deps-message {\n        color: #6c757d;\n        font-style: italic;\n        text-align: center;\n        padding: 20px;\n      }\n      \n      /* Search functionality */\n      .search-container {\n        position: relative;\n        margin-bottom: 15px;\n      }\n      \n      .dependency-search {\n        width: 100%;\n        padding: 10px 35px 10px 12px;\n        border: 2px solid #e9ecef;\n        border-radius: 6px;\n        font-size: 0.9em;\n        background: white;\n        transition: border-color 0.2s ease;\n      }\n      \n      .dependency-search:focus {\n        outline: none;\n        border-color: #3498db;\n        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n      }\n      \n      .dependency-search::placeholder {\n        color: #adb5bd;\n      }\n      \n      .search-icon {\n        position: absolute;\n        right: 12px;\n        top: 50%;\n        transform: translateY(-50%);\n        color: #6c757d;\n        font-size: 0.9em;\n      }\n      \n      .dep-item.hidden {\n        display: none;\n      }\n      \n      .no-results-message {\n        color: #6c757d;\n        font-style: italic;\n        text-align: center;\n        padding: 20px;\n        background: #f8f9fa;\n        border-radius: 6px;\n        margin: 10px 0;\n      }\n\n      .dependency-risk {\n        margin-left: auto;\n        font-weight: bold;\n        padding: 4px 8px;\n        border-radius: 4px;\n        font-size: 0.85em;\n      }\n\n      .dependency-vulns {\n        margin-left: 10px;\n        color: #6c757d;\n        font-size: 0.85em;\n      }\n\n      .dependency.risk-critical {\n        border-left: 4px solid #dc3545;\n        background: #fff5f5;\n      }\n\n      .dependency.risk-medium {\n        border-left: 4px solid #f1c40f;\n        background: #fffef0;\n      }\n\n      .dependency.risk-low {\n        border-left: 4px solid #2ecc71;\n        background: #f0fff4;\n      }\n\n      .dependency.risk-safe {\n        border-left: 4px solid #2ecc71;\n        background: #f0fff4;\n      }\n\n      .risk-critical {\n        color: #dc3545;\n        font-weight: bold;\n      }\n\n      .risk-medium {\n        color: #f1c40f;\n        font-weight: bold;\n      }\n\n      .risk-low {\n        color: #2ecc71;\n        font-weight: bold;\n      }\n\n      .risk-safe {\n        color: #2ecc71;\n        font-weight: bold;\n      }\n\n      .header-actions {\n        display: flex;\n        gap: 15px;\n        align-items: center;\n      }\n\n      .header-actions .btn {\n        margin: 0;\n      }\n\n      /* Header layout */\n      .header {\n        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);\n        color: white;\n        padding: 30px 40px;\n        text-align: left;\n        position: relative;\n        border-radius: 12px 12px 0 0;\n        margin-bottom: 30px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n\n      .header::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 20\"><defs><radialGradient id=\"a\" cx=\"50%\" cy=\"40%\"><stop offset=\"0%\" stop-color=\"%23ffffff\" stop-opacity=\"0.05\"/><stop offset=\"100%\" stop-color=\"%23000000\" stop-opacity=\"0.02\"/></radialGradient></defs><circle fill=\"url(%23a)\" cx=\"10\" cy=\"10\" r=\"10\"/><circle fill=\"url(%23a)\" cx=\"30\" cy=\"5\" r=\"8\"/><circle fill=\"url(%23a)\" cx=\"60\" cy=\"15\" r=\"6\"/><circle fill=\"url(%23a)\" cx=\"80\" cy=\"8\" r=\"4\"/></svg>');\n        opacity: 0.3;\n        border-radius: 12px 12px 0 0;\n      }\n\n      .header h1 {\n        font-size: 2.2em;\n        margin-bottom: 0;\n        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n        position: relative;\n        z-index: 1;\n        font-weight: 300;\n        color: white !important;\n      }\n\n      .header-actions {\n        position: relative;\n        z-index: 1;\n      }\n\n      /* Enhanced Excel Export Button - Green */\n      .export-btn {\n        background: #27ae60;\n        color: white;\n        padding: 14px 28px;\n        border: none;\n        border-radius: 8px;\n        cursor: pointer;\n        font-size: 1.1em;\n        font-weight: 600;\n        text-decoration: none;\n        display: inline-flex;\n        align-items: center;\n        gap: 8px;\n        min-width: 160px;\n        justify-content: center;\n        height: 48px;\n      }\n\n      .export-btn i {\n        font-size: 1.2em;\n      }\n\n      .export-btn:disabled {\n        opacity: 0.7;\n        cursor: not-allowed;\n      }\n\n      /* Back to Upload Button - Red */\n      .back-btn {\n        background: #e74c3c;\n        color: white;\n        padding: 14px 28px;\n        border: none;\n        border-radius: 8px;\n        cursor: pointer;\n        font-size: 1.1em;\n        font-weight: 600;\n        text-decoration: none;\n        display: inline-flex;\n        align-items: center;\n        gap: 8px;\n        min-width: 160px;\n        justify-content: center;\n        height: 48px;\n      }\n\n      .back-btn i {\n        font-size: 1.2em;\n      }\n\n      /* Regular button styling to match index.html */\n      .btn {\n        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);\n        color: white;\n        padding: 12px 24px;\n        border: none;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 1em;\n        font-weight: 500;\n        text-decoration: none;\n        display: inline-flex;\n        align-items: center;\n        gap: 8px;\n      }\n\n      .error-message {\n        text-align: center;\n        padding: 20px;\n        color: #856404;\n        background: #fff3cd;\n        border: 1px solid #ffeaa7;\n        border-radius: 8px;\n      }\n\n      /* Expandable sections */\n      .expandable-toggle {\n        cursor: pointer;\n        user-select: none;\n        transition: color 0.2s ease;\n        margin: 0;\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        font-size: 1.1em;\n        font-weight: 600;\n        color: #2c3e50;\n      }\n\n      .expandable-toggle:hover {\n        color: #3498db;\n      }\n\n      .expandable-toggle i:first-child {\n        transition: transform 0.3s ease;\n      }\n\n      .expandable-content {\n        margin-top: 10px;\n        transition: all 0.3s ease;\n        overflow: hidden;\n      }\n\n      .expandable-content.collapsed {\n        max-height: 0;\n        margin-top: 0;\n        opacity: 0;\n      }\n\n      .expandable-content.expanded {\n        max-height: none;\n        opacity: 1;\n      }\n\n      /* Dev notice styling for consistent appearance */\n      .dev-notice {\n        background: #f8f9fa;\n        border: 1px solid #e9ecef;\n        border-radius: 8px;\n        padding: 15px;\n        margin: 20px 0;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      }\n\n      .dev-notice .notice-content {\n        margin: 0;\n      }\n\n      .dev-notice .expandable-toggle {\n        margin-bottom: 0;\n        padding: 0;\n        background: none;\n        border: none;\n        width: 100%;\n        text-align: left;\n      }\n\n      /* Skipped dependencies warning styling - make it match dev-notice */\n      .skipped-deps-warning {\n        background: #f8f9fa;\n        border: 1px solid #e9ecef;\n        border-radius: 8px;\n        padding: 15px;\n        margin: 20px 0;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      }\n\n      .skipped-deps-warning .expandable-toggle {\n        margin-bottom: 0;\n        padding: 0;\n        background: none;\n        border: none;\n        width: 100%;\n        text-align: left;\n        color: #2c3e50;\n      }\n\n      .skipped-deps-warning .expandable-toggle:hover {\n        color: #3498db;\n      }\n    </style>\n\n    <script>\n      // Toggle function for expandable sections\n      function toggleSection(contentId, iconId) {\n        const content = document.getElementById(contentId);\n        const icon = document.getElementById(iconId);\n        \n        if (content.classList.contains('expanded')) {\n          content.classList.remove('expanded');\n          content.classList.add('collapsed');\n          icon.classList.remove('fa-chevron-down');\n          icon.classList.add('fa-chevron-right');\n        } else {\n          content.classList.remove('collapsed');\n          content.classList.add('expanded');\n          icon.classList.remove('fa-chevron-right');\n          icon.classList.add('fa-chevron-down');\n        }\n      }\n\n      // Global variable to track graph interaction state\n      let graphInteractionsEnabled = false; // Start with interactions disabled\n\n      // Toggle graph controls\n      function toggleGraphControls() {\n        graphInteractionsEnabled = !graphInteractionsEnabled;\n        const toggleButton = document.getElementById('graph-toggle-button');\n        const toggleIcon = document.getElementById('graph-toggle-icon');\n        const toggleText = document.getElementById('graph-toggle-text');\n        \n        if (graphInteractionsEnabled) {\n          toggleButton.style.backgroundColor = 'rgba(52, 152, 219, 0.1)';\n          toggleButton.style.borderColor = '#3498db';\n          toggleIcon.classList.remove('fa-mouse-pointer');\n          toggleIcon.classList.add('fa-hand-pointer');\n          toggleText.textContent = 'Disable Zoom & Drag';\n          \n          // Enable graph interactions\n          if (window.currentNetwork) {\n            window.currentNetwork.setOptions({\n              interaction: {\n                hover: true,\n                zoomView: true,\n                dragView: true,\n                selectConnectedEdges: false,\n                keyboard: {\n                  enabled: false\n                }\n              }\n            });\n          }\n        } else {\n          toggleButton.style.backgroundColor = 'rgba(255,255,255,0.97)';\n          toggleButton.style.borderColor = '#e1e8ed';\n          toggleIcon.classList.remove('fa-hand-pointer');\n          toggleIcon.classList.add('fa-mouse-pointer');\n          toggleText.textContent = 'Zoom & Drag';\n          \n          // Disable graph interactions\n          if (window.currentNetwork) {\n            window.currentNetwork.setOptions({\n              interaction: {\n                hover: false,\n                zoomView: false,\n                dragView: false,\n                selectConnectedEdges: false,\n                keyboard: {\n                  enabled: false\n                }\n              }\n            });\n          }\n        }\n      }\n\n      // Fetch scan data from the backend using scan_id\n      fetch(\"/api/scan_data\")\n        .then((response) => response.json())\n        .then((data) => {\n          window.vulnerabilityDataFromServer = data.vulnerabilities || {};\n          window.sbomDataFromServer = data.sbom_data || {};\n          window.projectTypeFromServer = data.project_type || \"-\";\n          window.filenameFromServer = data.filename || \"-\";\n          // Show warning if skipped dependencies are present\n          // Remove the div with id=\"skipped-deps-warning\" and any related markup\n          // You may want to trigger graph rendering here as well\n        })\n        .catch((err) => {\n          console.error(\"Failed to fetch scan data:\", err);\n        });\n    </script>\n    <script src=\"/static/js/results.js\"></script>\n</body>\n</html>"
          },
          "redirectURL": "",
          "headersSize": 176,
          "bodySize": 31373,
          "_transferSize": 31549
        },
        "cache": {},
        "timings": {
          "blocked": 2.717434697842691,
          "dns": 0.00008333154255524278,
          "connect": 0.00012500095181167126,
          "ssl": -1,
          "send": 1.4072714548092335,
          "wait": 1.3814805788570084,
          "receive": 0.006988731911405921
        },
        "serverIPAddress": "127.0.0.1",
        "_serverPort": 5000,
        "connection": "33",
        "_fetchType": "Network Load",
        "_priority": "high"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.281Z",
        "time": 5.418534550699405,
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:5000/api/package_health",
          "httpVersion": "HTTP/1.1",
          "cookies": [
            {
              "name": "session",
              "value": ".eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            }
          ],
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Cookie",
              "value": "session=.eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:5000/results"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Priority",
              "value": "u=3, i"
            }
          ],
          "queryString": [],
          "headersSize": 959,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "cookies": [],
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:40:09 GMT"
            },
            {
              "name": "Vary",
              "value": "Cookie"
            },
            {
              "name": "Connection",
              "value": "close"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Content-Length",
              "value": "393"
            },
            {
              "name": "Server",
              "value": "Werkzeug/3.1.3 Python/3.13.1"
            }
          ],
          "content": {
            "size": 393,
            "compression": 0,
            "mimeType": "application/json",
            "text": "{\"issues\":[{\"details\":{\"issue_ratio\":0.06,\"recommendation\":\"Consider the project's maintenance status before using.\",\"severity\":\"low\",\"status\":\"high_issues\",\"warning\":\"This package has a high ratio of open issues (25 issues, 395 stars). It may be poorly maintained.\"},\"issue_type\":\"high_issues\",\"package_name\":\"gidgethub\",\"severity\":\"low\"}],\"summary\":\"Health check complete\",\"total_issues\":1}\n"
          },
          "redirectURL": "",
          "headersSize": 180,
          "bodySize": 393,
          "_transferSize": 573
        },
        "cache": {},
        "timings": {
          "blocked": 0.1890465646283701,
          "dns": 0.00004166940925642848,
          "connect": 0.00008333154255524278,
          "ssl": -1,
          "send": 1.8747269568848424,
          "wait": 3.3493458686280064,
          "receive": 0.005248497473075986
        },
        "serverIPAddress": "127.0.0.1",
        "_serverPort": 5000,
        "connection": "39",
        "_fetchType": "Network Load",
        "_priority": "medium"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.281Z",
        "time": 6.032578654412646,
        "request": {
          "method": "GET",
          "url": "http://127.0.0.1:5000/api/package_health",
          "httpVersion": "HTTP/1.1",
          "cookies": [
            {
              "name": "session",
              "value": ".eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            }
          ],
          "headers": [
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Cookie",
              "value": "session=.eJxtUcFOKzEM_BUrJ5DaVbfdQtXru8CdG0Ird-M2fmSTJfECq6r_jkNbxIGj7fHMeHw0e_YUsCezNYneRk7UU5BcyaeYmRmwe8UDtY7Qi2stCprt0XDOI2WzfT4aS4Lsc-lanHKbOXTUJvKEWUnr--Vqpsxd7JVX9zkGlfoXQ2ZLCfYcLIcDYABVoBQU8U4QE3SOutcy4j2IIxhS_E-dAGfIwt5DjxxUO5Ct1Gmmd0osk5I7PrjSEZRRjRkdTC3uMNioYJ18YArKrKMnp3SXI8FhhhAFdkQBxkHNkgUOUG6AchzcNDARpnxbwaMADkMpQKKuwI9AcfON-qW5bU6zc2qtTEMJ-7efa8qXP0js_Z8XaZ3P-S2qelEtzOlFYWPfYyqoh-8nnYMDDXzwJKRrEgV9e_1ZrU4uWV69DJM4pVWuDkPLatesF-uGdria3-GqmTfLdT3fYL2bNzWtl3d2s7F1bU5f7CLELg.aH8IGQ.S2JO6IbhRMTu9oJG3m6NZ_YSjtU"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:5000/results"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Priority",
              "value": "u=3, i"
            }
          ],
          "queryString": [],
          "headersSize": 959,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "cookies": [],
          "headers": [
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:40:09 GMT"
            },
            {
              "name": "Vary",
              "value": "Cookie"
            },
            {
              "name": "Connection",
              "value": "close"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Content-Length",
              "value": "393"
            },
            {
              "name": "Server",
              "value": "Werkzeug/3.1.3 Python/3.13.1"
            }
          ],
          "content": {
            "size": 393,
            "compression": 0,
            "mimeType": "application/json",
            "text": "{\"issues\":[{\"details\":{\"issue_ratio\":0.06,\"recommendation\":\"Consider the project's maintenance status before using.\",\"severity\":\"low\",\"status\":\"high_issues\",\"warning\":\"This package has a high ratio of open issues (25 issues, 395 stars). It may be poorly maintained.\"},\"issue_type\":\"high_issues\",\"package_name\":\"gidgethub\",\"severity\":\"low\"}],\"summary\":\"Health check complete\",\"total_issues\":1}\n"
          },
          "redirectURL": "",
          "headersSize": 180,
          "bodySize": 393,
          "_transferSize": 573
        },
        "cache": {},
        "timings": {
          "blocked": 0.4675767486332916,
          "dns": 0.00004166940925642848,
          "connect": 1.000010859570466,
          "ssl": -1,
          "send": 0.6633221491938457,
          "wait": 3.617805188696366,
          "receive": 0.28378037677612156
        },
        "serverIPAddress": "127.0.0.1",
        "_serverPort": 5000,
        "connection": "38",
        "_fetchType": "Network Load",
        "_priority": "medium"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.251Z",
        "time": 0.04116666968911886,
        "request": {
          "method": "GET",
          "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/webfonts/fa-solid-900.woff2",
          "httpVersion": "",
          "cookies": [],
          "headers": [],
          "queryString": [],
          "headersSize": -1,
          "bodySize": -1
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "",
          "cookies": [],
          "headers": [
            {
              "name": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "name": "Timing-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=30672000"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Server-Timing",
              "value": "cfExtPri"
            },
            {
              "name": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "name": "Content-Length",
              "value": "126828"
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:24:32 GMT"
            },
            {
              "name": "Expires",
              "value": "Sun, 12 Jul 2026 03:24:32 GMT"
            },
            {
              "name": "Age",
              "value": "586234"
            },
            {
              "name": "Content-Type",
              "value": "application/octet-stream; charset=utf-8"
            },
            {
              "name": "ETag",
              "value": "\"620188b3-1ef6c\""
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 07 Feb 2022 21:01:39 GMT"
            }
          ],
          "content": {
            "size": 0,
            "compression": 0,
            "mimeType": "application/octet-stream",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": -1,
          "connect": -1,
          "ssl": -1,
          "send": 0,
          "wait": 0.02112500078510493,
          "receive": 0.020041668904013932
        },
        "_fetchType": "Memory Cache"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.251Z",
        "time": 0.04274999810149893,
        "request": {
          "method": "GET",
          "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/webfonts/fa-regular-400.woff2",
          "httpVersion": "",
          "cookies": [],
          "headers": [],
          "queryString": [],
          "headersSize": -1,
          "bodySize": -1
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "",
          "cookies": [],
          "headers": [
            {
              "name": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "name": "Timing-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=30672000"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Server-Timing",
              "value": "cfExtPri"
            },
            {
              "name": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "name": "Content-Length",
              "value": "23900"
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:24:32 GMT"
            },
            {
              "name": "Expires",
              "value": "Sun, 12 Jul 2026 03:24:32 GMT"
            },
            {
              "name": "Age",
              "value": "248784"
            },
            {
              "name": "Content-Type",
              "value": "application/octet-stream; charset=utf-8"
            },
            {
              "name": "ETag",
              "value": "\"620188b3-5d5c\""
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 07 Feb 2022 21:01:39 GMT"
            }
          ],
          "content": {
            "size": 0,
            "compression": 0,
            "mimeType": "application/octet-stream",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": -1,
          "connect": -1,
          "ssl": -1,
          "send": 0,
          "wait": 0.018624996300786734,
          "receive": 0.024125001800712198
        },
        "_fetchType": "Memory Cache"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.251Z",
        "time": 0.04970833833795041,
        "request": {
          "method": "GET",
          "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/webfonts/fa-brands-400.woff2",
          "httpVersion": "",
          "cookies": [],
          "headers": [],
          "queryString": [],
          "headersSize": -1,
          "bodySize": -1
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "",
          "cookies": [],
          "headers": [
            {
              "name": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "name": "Timing-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=30672000"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Server-Timing",
              "value": "cfExtPri"
            },
            {
              "name": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "name": "Content-Length",
              "value": "104544"
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Date",
              "value": "Tue, 22 Jul 2025 03:24:32 GMT"
            },
            {
              "name": "Expires",
              "value": "Sun, 12 Jul 2026 03:24:32 GMT"
            },
            {
              "name": "Age",
              "value": "911289"
            },
            {
              "name": "Content-Type",
              "value": "application/octet-stream; charset=utf-8"
            },
            {
              "name": "ETag",
              "value": "\"620188b3-19860\""
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 07 Feb 2022 21:01:39 GMT"
            }
          ],
          "content": {
            "size": 0,
            "compression": 0,
            "mimeType": "application/octet-stream",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": -1,
          "connect": -1,
          "ssl": -1,
          "send": 0,
          "wait": 0.032041672966443,
          "receive": 0.017666665371507406
        },
        "_fetchType": "Memory Cache"
      },
      {
        "pageref": "page_0",
        "startedDateTime": "2025-07-22T03:40:09.243Z",
        "time": 0.040541664930060506,
        "request": {
          "method": "GET",
          "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
          "httpVersion": "",
          "cookies": [],
          "headers": [],
          "queryString": [],
          "headersSize": -1,
          "bodySize": -1
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "",
          "cookies": [],
          "headers": [
            {
              "name": "Content-Encoding",
              "value": "br"
            },
            {
              "name": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "name": "Timing-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Cache-Control",
              "value": "public, max-age=30672000"
            },
            {
              "name": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Server-Timing",
              "value": "cfExtPri"
            },
            {
              "name": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "name": "Content-Length",
              "value": "15248"
            },
            {
              "name": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "Date",
              "value": "Thu, 17 Jul 2025 16:37:29 GMT"
            },
            {
              "name": "Expires",
              "value": "Tue, 07 Jul 2026 16:37:29 GMT"
            },
            {
              "name": "Age",
              "value": "789362"
            },
            {
              "name": "Content-Type",
              "value": "text/css; charset=utf-8"
            },
            {
              "name": "ETag",
              "value": "\"620188b3-3b90\""
            },
            {
              "name": "Last-Modified",
              "value": "Mon, 07 Feb 2022 21:01:39 GMT"
            }
          ],
          "content": {
            "size": 0,
            "compression": 0,
            "mimeType": "text/css",
            "text": "/*!\n * Font Awesome Free 6.0.0 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n * Copyright 2022 Fonticons, Inc.\n */\n.fa{font-family:var(--fa-style-family,\"Font Awesome 6 Free\");font-weight:var(--fa-style,900)}.fa,.fa-brands,.fa-duotone,.fa-light,.fa-regular,.fa-solid,.fa-thin,.fab,.fad,.fal,.far,.fas,.fat{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:var(--fa-display,inline-block);font-style:normal;font-variant:normal;line-height:1;text-rendering:auto}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-2xs{font-size:.625em;line-height:.1em;vertical-align:.225em}.fa-xs{font-size:.75em;line-height:.08333em;vertical-align:.125em}.fa-sm{font-size:.875em;line-height:.07143em;vertical-align:.05357em}.fa-lg{font-size:1.25em;line-height:.05em;vertical-align:-.075em}.fa-xl{font-size:1.5em;line-height:.04167em;vertical-align:-.125em}.fa-2xl{font-size:2em;line-height:.03125em;vertical-align:-.1875em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:var(--fa-li-margin,2.5em);padding-left:0}.fa-ul>li{position:relative}.fa-li{left:calc(var(--fa-li-width, 2em)*-1);position:absolute;text-align:center;width:var(--fa-li-width,2em);line-height:inherit}.fa-border{border-radius:var(--fa-border-radius,.1em);border:var(--fa-border-width,.08em) var(--fa-border-style,solid) var(--fa-border-color,#eee);padding:var(--fa-border-padding,.2em .25em .15em)}.fa-pull-left{float:left;margin-right:var(--fa-pull-margin,.3em)}.fa-pull-right{float:right;margin-left:var(--fa-pull-margin,.3em)}.fa-beat{-webkit-animation-name:fa-beat;animation-name:fa-beat;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,ease-in-out);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-bounce{-webkit-animation-name:fa-bounce;animation-name:fa-bounce;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.28,.84,.42,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.28,.84,.42,1))}.fa-fade{-webkit-animation-name:fa-fade;animation-name:fa-fade;-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-beat-fade,.fa-fade{-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s)}.fa-beat-fade{-webkit-animation-name:fa-beat-fade;animation-name:fa-beat-fade;-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-flip{-webkit-animation-name:fa-flip;animation-name:fa-flip;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,ease-in-out);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-shake{-webkit-animation-name:fa-shake;animation-name:fa-shake;-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,linear);animation-timing-function:var(--fa-animation-timing,linear)}.fa-shake,.fa-spin{-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal)}.fa-spin{-webkit-animation-name:fa-spin;animation-name:fa-spin;-webkit-animation-duration:var(--fa-animation-duration,2s);animation-duration:var(--fa-animation-duration,2s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,linear);animation-timing-function:var(--fa-animation-timing,linear)}.fa-spin-reverse{--fa-animation-direction:reverse}.fa-pulse,.fa-spin-pulse{-webkit-animation-name:fa-spin;animation-name:fa-spin;-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,steps(8));animation-timing-function:var(--fa-animation-timing,steps(8))}@media (prefers-reduced-motion:reduce){.fa-beat,.fa-beat-fade,.fa-bounce,.fa-fade,.fa-flip,.fa-pulse,.fa-shake,.fa-spin,.fa-spin-pulse{-webkit-animation-delay:-1ms;animation-delay:-1ms;-webkit-animation-duration:1ms;animation-duration:1ms;-webkit-animation-iteration-count:1;animation-iteration-count:1;transition-delay:0s;transition-duration:0s}}@-webkit-keyframes fa-beat{0%,90%{-webkit-transform:scale(1);transform:scale(1)}45%{-webkit-transform:scale(var(--fa-beat-scale,1.25));transform:scale(var(--fa-beat-scale,1.25))}}@keyframes fa-beat{0%,90%{-webkit-transform:scale(1);transform:scale(1)}45%{-webkit-transform:scale(var(--fa-beat-scale,1.25));transform:scale(var(--fa-beat-scale,1.25))}}@-webkit-keyframes fa-bounce{0%{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}10%{-webkit-transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0);transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0)}30%{-webkit-transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em));transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em))}50%{-webkit-transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0);transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0)}57%{-webkit-transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em));transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em))}64%{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}to{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}}@keyframes fa-bounce{0%{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}10%{-webkit-transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0);transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0)}30%{-webkit-transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em));transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em))}50%{-webkit-transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0);transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0)}57%{-webkit-transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em));transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em))}64%{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}to{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}}@-webkit-keyframes fa-fade{50%{opacity:var(--fa-fade-opacity,.4)}}@keyframes fa-fade{50%{opacity:var(--fa-fade-opacity,.4)}}@-webkit-keyframes fa-beat-fade{0%,to{opacity:var(--fa-beat-fade-opacity,.4);-webkit-transform:scale(1);transform:scale(1)}50%{opacity:1;-webkit-transform:scale(var(--fa-beat-fade-scale,1.125));transform:scale(var(--fa-beat-fade-scale,1.125))}}@keyframes fa-beat-fade{0%,to{opacity:var(--fa-beat-fade-opacity,.4);-webkit-transform:scale(1);transform:scale(1)}50%{opacity:1;-webkit-transform:scale(var(--fa-beat-fade-scale,1.125));transform:scale(var(--fa-beat-fade-scale,1.125))}}@-webkit-keyframes fa-flip{50%{-webkit-transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg));transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg))}}@keyframes fa-flip{50%{-webkit-transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg));transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg))}}@-webkit-keyframes fa-shake{0%{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}4%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}8%,24%{-webkit-transform:rotate(-18deg);transform:rotate(-18deg)}12%,28%{-webkit-transform:rotate(18deg);transform:rotate(18deg)}16%{-webkit-transform:rotate(-22deg);transform:rotate(-22deg)}20%{-webkit-transform:rotate(22deg);transform:rotate(22deg)}32%{-webkit-transform:rotate(-12deg);transform:rotate(-12deg)}36%{-webkit-transform:rotate(12deg);transform:rotate(12deg)}40%,to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes fa-shake{0%{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}4%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}8%,24%{-webkit-transform:rotate(-18deg);transform:rotate(-18deg)}12%,28%{-webkit-transform:rotate(18deg);transform:rotate(18deg)}16%{-webkit-transform:rotate(-22deg);transform:rotate(-22deg)}20%{-webkit-transform:rotate(22deg);transform:rotate(22deg)}32%{-webkit-transform:rotate(-12deg);transform:rotate(-12deg)}36%{-webkit-transform:rotate(12deg);transform:rotate(12deg)}40%,to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scaleX(-1);transform:scaleX(-1)}.fa-flip-vertical{-webkit-transform:scaleY(-1);transform:scaleY(-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1);transform:scale(-1)}.fa-rotate-by{-webkit-transform:rotate(var(--fa-rotate-angle,none));transform:rotate(var(--fa-rotate-angle,none))}.fa-stack{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2.5em}.fa-stack-1x,.fa-stack-2x{left:0;position:absolute;text-align:center;width:100%;z-index:var(--fa-stack-z-index,auto)}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:var(--fa-inverse,#fff)}.fa-0:before{content:\"\\30\"}.fa-1:before{content:\"\\31\"}.fa-2:before{content:\"\\32\"}.fa-3:before{content:\"\\33\"}.fa-4:before{content:\"\\34\"}.fa-5:before{content:\"\\35\"}.fa-6:before{content:\"\\36\"}.fa-7:before{content:\"\\37\"}.fa-8:before{content:\"\\38\"}.fa-9:before{content:\"\\39\"}.fa-a:before{content:\"\\41\"}.fa-address-book:before,.fa-contact-book:before{content:\"\\f2b9\"}.fa-address-card:before,.fa-contact-card:before,.fa-vcard:before{content:\"\\f2bb\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-justify:before{content:\"\\f039\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-right:before{content:\"\\f038\"}.fa-anchor:before{content:\"\\f13d\"}.fa-angle-down:before{content:\"\\f107\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-double-down:before,.fa-angles-down:before{content:\"\\f103\"}.fa-angle-double-left:before,.fa-angles-left:before{content:\"\\f100\"}.fa-angle-double-right:before,.fa-angles-right:before{content:\"\\f101\"}.fa-angle-double-up:before,.fa-angles-up:before{content:\"\\f102\"}.fa-ankh:before{content:\"\\f644\"}.fa-apple-alt:before,.fa-apple-whole:before{content:\"\\f5d1\"}.fa-archway:before{content:\"\\f557\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-arrow-down-1-9:before,.fa-sort-numeric-asc:before,.fa-sort-numeric-down:before{content:\"\\f162\"}.fa-arrow-down-9-1:before,.fa-sort-numeric-desc:before,.fa-sort-numeric-down-alt:before{content:\"\\f886\"}.fa-arrow-down-a-z:before,.fa-sort-alpha-asc:before,.fa-sort-alpha-down:before{content:\"\\f15d\"}.fa-arrow-down-long:before,.fa-long-arrow-down:before{content:\"\\f175\"}.fa-arrow-down-short-wide:before,.fa-sort-amount-desc:before,.fa-sort-amount-down-alt:before{content:\"\\f884\"}.fa-arrow-down-wide-short:before,.fa-sort-amount-asc:before,.fa-sort-amount-down:before{content:\"\\f160\"}.fa-arrow-down-z-a:before,.fa-sort-alpha-desc:before,.fa-sort-alpha-down-alt:before{content:\"\\f881\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-left-long:before,.fa-long-arrow-left:before{content:\"\\f177\"}.fa-arrow-pointer:before,.fa-mouse-pointer:before{content:\"\\f245\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-right-arrow-left:before,.fa-exchange:before{content:\"\\f0ec\"}.fa-arrow-right-from-bracket:before,.fa-sign-out:before{content:\"\\f08b\"}.fa-arrow-right-long:before,.fa-long-arrow-right:before{content:\"\\f178\"}.fa-arrow-right-to-bracket:before,.fa-sign-in:before{content:\"\\f090\"}.fa-arrow-left-rotate:before,.fa-arrow-rotate-back:before,.fa-arrow-rotate-backward:before,.fa-arrow-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-arrow-right-rotate:before,.fa-arrow-rotate-forward:before,.fa-arrow-rotate-right:before,.fa-redo:before{content:\"\\f01e\"}.fa-arrow-trend-down:before{content:\"\\e097\"}.fa-arrow-trend-up:before{content:\"\\e098\"}.fa-arrow-turn-down:before,.fa-level-down:before{content:\"\\f149\"}.fa-arrow-turn-up:before,.fa-level-up:before{content:\"\\f148\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-up-1-9:before,.fa-sort-numeric-up:before{content:\"\\f163\"}.fa-arrow-up-9-1:before,.fa-sort-numeric-up-alt:before{content:\"\\f887\"}.fa-arrow-up-a-z:before,.fa-sort-alpha-up:before{content:\"\\f15e\"}.fa-arrow-up-from-bracket:before{content:\"\\e09a\"}.fa-arrow-up-long:before,.fa-long-arrow-up:before{content:\"\\f176\"}.fa-arrow-up-right-from-square:before,.fa-external-link:before{content:\"\\f08e\"}.fa-arrow-up-short-wide:before,.fa-sort-amount-up-alt:before{content:\"\\f885\"}.fa-arrow-up-wide-short:before,.fa-sort-amount-up:before{content:\"\\f161\"}.fa-arrow-up-z-a:before,.fa-sort-alpha-up-alt:before{content:\"\\f882\"}.fa-arrows-h:before,.fa-arrows-left-right:before{content:\"\\f07e\"}.fa-arrows-rotate:before,.fa-refresh:before,.fa-sync:before{content:\"\\f021\"}.fa-arrows-up-down:before,.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-up-down-left-right:before,.fa-arrows:before{content:\"\\f047\"}.fa-asterisk:before{content:\"\\2a\"}.fa-at:before{content:\"\\40\"}.fa-atom:before{content:\"\\f5d2\"}.fa-audio-description:before{content:\"\\f29e\"}.fa-austral-sign:before{content:\"\\e0a9\"}.fa-award:before{content:\"\\f559\"}.fa-b:before{content:\"\\42\"}.fa-baby:before{content:\"\\f77c\"}.fa-baby-carriage:before,.fa-carriage-baby:before{content:\"\\f77d\"}.fa-backward:before{content:\"\\f04a\"}.fa-backward-fast:before,.fa-fast-backward:before{content:\"\\f049\"}.fa-backward-step:before,.fa-step-backward:before{content:\"\\f048\"}.fa-bacon:before{content:\"\\f7e5\"}.fa-bacteria:before{content:\"\\e059\"}.fa-bacterium:before{content:\"\\e05a\"}.fa-bag-shopping:before,.fa-shopping-bag:before{content:\"\\f290\"}.fa-bahai:before{content:\"\\f666\"}.fa-baht-sign:before{content:\"\\e0ac\"}.fa-ban:before,.fa-cancel:before{content:\"\\f05e\"}.fa-ban-smoking:before,.fa-smoking-ban:before{content:\"\\f54d\"}.fa-band-aid:before,.fa-bandage:before{content:\"\\f462\"}.fa-barcode:before{content:\"\\f02a\"}.fa-bars:before,.fa-navicon:before{content:\"\\f0c9\"}.fa-bars-progress:before,.fa-tasks-alt:before{content:\"\\f828\"}.fa-bars-staggered:before,.fa-reorder:before,.fa-stream:before{content:\"\\f550\"}.fa-baseball-ball:before,.fa-baseball:before{content:\"\\f433\"}.fa-baseball-bat-ball:before{content:\"\\f432\"}.fa-basket-shopping:before,.fa-shopping-basket:before{content:\"\\f291\"}.fa-basketball-ball:before,.fa-basketball:before{content:\"\\f434\"}.fa-bath:before,.fa-bathtub:before{content:\"\\f2cd\"}.fa-battery-0:before,.fa-battery-empty:before{content:\"\\f244\"}.fa-battery-5:before,.fa-battery-full:before,.fa-battery:before{content:\"\\f240\"}.fa-battery-3:before,.fa-battery-half:before{content:\"\\f242\"}.fa-battery-2:before,.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-4:before,.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-bed:before{content:\"\\f236\"}.fa-bed-pulse:before,.fa-procedures:before{content:\"\\f487\"}.fa-beer-mug-empty:before,.fa-beer:before{content:\"\\f0fc\"}.fa-bell:before{content:\"\\f0f3\"}.fa-bell-concierge:before,.fa-concierge-bell:before{content:\"\\f562\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bezier-curve:before{content:\"\\f55b\"}.fa-bicycle:before{content:\"\\f206\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-biohazard:before{content:\"\\f780\"}.fa-bitcoin-sign:before{content:\"\\e0b4\"}.fa-blender:before{content:\"\\f517\"}.fa-blender-phone:before{content:\"\\f6b6\"}.fa-blog:before{content:\"\\f781\"}.fa-bold:before{content:\"\\f032\"}.fa-bolt:before,.fa-zap:before{content:\"\\f0e7\"}.fa-bolt-lightning:before{content:\"\\e0b7\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-bone:before{content:\"\\f5d7\"}.fa-bong:before{content:\"\\f55c\"}.fa-book:before{content:\"\\f02d\"}.fa-atlas:before,.fa-book-atlas:before{content:\"\\f558\"}.fa-bible:before,.fa-book-bible:before{content:\"\\f647\"}.fa-book-journal-whills:before,.fa-journal-whills:before{content:\"\\f66a\"}.fa-book-medical:before{content:\"\\f7e6\"}.fa-book-open:before{content:\"\\f518\"}.fa-book-open-reader:before,.fa-book-reader:before{content:\"\\f5da\"}.fa-book-quran:before,.fa-quran:before{content:\"\\f687\"}.fa-book-dead:before,.fa-book-skull:before{content:\"\\f6b7\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-border-all:before{content:\"\\f84c\"}.fa-border-none:before{content:\"\\f850\"}.fa-border-style:before,.fa-border-top-left:before{content:\"\\f853\"}.fa-bowling-ball:before{content:\"\\f436\"}.fa-box:before{content:\"\\f466\"}.fa-archive:before,.fa-box-archive:before{content:\"\\f187\"}.fa-box-open:before{content:\"\\f49e\"}.fa-box-tissue:before{content:\"\\e05b\"}.fa-boxes-alt:before,.fa-boxes-stacked:before,.fa-boxes:before{content:\"\\f468\"}.fa-braille:before{content:\"\\f2a1\"}.fa-brain:before{content:\"\\f5dc\"}.fa-brazilian-real-sign:before{content:\"\\e46c\"}.fa-bread-slice:before{content:\"\\f7ec\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-briefcase-medical:before{content:\"\\f469\"}.fa-broom:before{content:\"\\f51a\"}.fa-broom-ball:before,.fa-quidditch-broom-ball:before,.fa-quidditch:before{content:\"\\f458\"}.fa-brush:before{content:\"\\f55d\"}.fa-bug:before{content:\"\\f188\"}.fa-bug-slash:before{content:\"\\e490\"}.fa-building:before{content:\"\\f1ad\"}.fa-bank:before,.fa-building-columns:before,.fa-institution:before,.fa-museum:before,.fa-university:before{content:\"\\f19c\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bullseye:before{content:\"\\f140\"}.fa-burger:before,.fa-hamburger:before{content:\"\\f805\"}.fa-bus:before{content:\"\\f207\"}.fa-bus-alt:before,.fa-bus-simple:before{content:\"\\f55e\"}.fa-briefcase-clock:before,.fa-business-time:before{content:\"\\f64a\"}.fa-c:before{content:\"\\43\"}.fa-birthday-cake:before,.fa-cake-candles:before,.fa-cake:before{content:\"\\f1fd\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-calendar:before{content:\"\\f133\"}.fa-calendar-check:before{content:\"\\f274\"}.fa-calendar-day:before{content:\"\\f783\"}.fa-calendar-alt:before,.fa-calendar-days:before{content:\"\\f073\"}.fa-calendar-minus:before{content:\"\\f272\"}.fa-calendar-plus:before{content:\"\\f271\"}.fa-calendar-week:before{content:\"\\f784\"}.fa-calendar-times:before,.fa-calendar-xmark:before{content:\"\\f273\"}.fa-camera-alt:before,.fa-camera:before{content:\"\\f030\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-camera-rotate:before{content:\"\\e0d8\"}.fa-campground:before{content:\"\\f6bb\"}.fa-candy-cane:before{content:\"\\f786\"}.fa-cannabis:before{content:\"\\f55f\"}.fa-capsules:before{content:\"\\f46b\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-battery-car:before,.fa-car-battery:before{content:\"\\f5df\"}.fa-car-crash:before{content:\"\\f5e1\"}.fa-car-alt:before,.fa-car-rear:before{content:\"\\f5de\"}.fa-car-side:before{content:\"\\f5e4\"}.fa-caravan:before{content:\"\\f8ff\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-carrot:before{content:\"\\f787\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-cart-flatbed:before,.fa-dolly-flatbed:before{content:\"\\f474\"}.fa-cart-flatbed-suitcase:before,.fa-luggage-cart:before{content:\"\\f59d\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cart-shopping:before,.fa-shopping-cart:before{content:\"\\f07a\"}.fa-cash-register:before{content:\"\\f788\"}.fa-cat:before{content:\"\\f6be\"}.fa-cedi-sign:before{content:\"\\e0df\"}.fa-cent-sign:before{content:\"\\e3f5\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-chair:before{content:\"\\f6c0\"}.fa-blackboard:before,.fa-chalkboard:before{content:\"\\f51b\"}.fa-chalkboard-teacher:before,.fa-chalkboard-user:before{content:\"\\f51c\"}.fa-champagne-glasses:before,.fa-glass-cheers:before{content:\"\\f79f\"}.fa-charging-station:before{content:\"\\f5e7\"}.fa-area-chart:before,.fa-chart-area:before{content:\"\\f1fe\"}.fa-bar-chart:before,.fa-chart-bar:before{content:\"\\f080\"}.fa-chart-column:before{content:\"\\e0e3\"}.fa-chart-gantt:before{content:\"\\e0e4\"}.fa-chart-line:before,.fa-line-chart:before{content:\"\\f201\"}.fa-chart-pie:before,.fa-pie-chart:before{content:\"\\f200\"}.fa-check:before{content:\"\\f00c\"}.fa-check-double:before{content:\"\\f560\"}.fa-check-to-slot:before,.fa-vote-yea:before{content:\"\\f772\"}.fa-cheese:before{content:\"\\f7ef\"}.fa-chess:before{content:\"\\f439\"}.fa-chess-bishop:before{content:\"\\f43a\"}.fa-chess-board:before{content:\"\\f43c\"}.fa-chess-king:before{content:\"\\f43f\"}.fa-chess-knight:before{content:\"\\f441\"}.fa-chess-pawn:before{content:\"\\f443\"}.fa-chess-queen:before{content:\"\\f445\"}.fa-chess-rook:before{content:\"\\f447\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-child:before{content:\"\\f1ae\"}.fa-church:before{content:\"\\f51d\"}.fa-circle:before{content:\"\\f111\"}.fa-arrow-circle-down:before,.fa-circle-arrow-down:before{content:\"\\f0ab\"}.fa-arrow-circle-left:before,.fa-circle-arrow-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before,.fa-circle-arrow-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before,.fa-circle-arrow-up:before{content:\"\\f0aa\"}.fa-check-circle:before,.fa-circle-check:before{content:\"\\f058\"}.fa-chevron-circle-down:before,.fa-circle-chevron-down:before{content:\"\\f13a\"}.fa-chevron-circle-left:before,.fa-circle-chevron-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before,.fa-circle-chevron-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before,.fa-circle-chevron-up:before{content:\"\\f139\"}.fa-circle-dollar-to-slot:before,.fa-donate:before{content:\"\\f4b9\"}.fa-circle-dot:before,.fa-dot-circle:before{content:\"\\f192\"}.fa-arrow-alt-circle-down:before,.fa-circle-down:before{content:\"\\f358\"}.fa-circle-exclamation:before,.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-circle-h:before,.fa-hospital-symbol:before{content:\"\\f47e\"}.fa-adjust:before,.fa-circle-half-stroke:before{content:\"\\f042\"}.fa-circle-info:before,.fa-info-circle:before{content:\"\\f05a\"}.fa-arrow-alt-circle-left:before,.fa-circle-left:before{content:\"\\f359\"}.fa-circle-minus:before,.fa-minus-circle:before{content:\"\\f056\"}.fa-circle-notch:before{content:\"\\f1ce\"}.fa-circle-pause:before,.fa-pause-circle:before{content:\"\\f28b\"}.fa-circle-play:before,.fa-play-circle:before{content:\"\\f144\"}.fa-circle-plus:before,.fa-plus-circle:before{content:\"\\f055\"}.fa-circle-question:before,.fa-question-circle:before{content:\"\\f059\"}.fa-circle-radiation:before,.fa-radiation-alt:before{content:\"\\f7ba\"}.fa-arrow-alt-circle-right:before,.fa-circle-right:before{content:\"\\f35a\"}.fa-circle-stop:before,.fa-stop-circle:before{content:\"\\f28d\"}.fa-arrow-alt-circle-up:before,.fa-circle-up:before{content:\"\\f35b\"}.fa-circle-user:before,.fa-user-circle:before{content:\"\\f2bd\"}.fa-circle-xmark:before,.fa-times-circle:before,.fa-xmark-circle:before{content:\"\\f057\"}.fa-city:before{content:\"\\f64f\"}.fa-clapperboard:before{content:\"\\e131\"}.fa-clipboard:before{content:\"\\f328\"}.fa-clipboard-check:before{content:\"\\f46c\"}.fa-clipboard-list:before{content:\"\\f46d\"}.fa-clock-four:before,.fa-clock:before{content:\"\\f017\"}.fa-clock-rotate-left:before,.fa-history:before{content:\"\\f1da\"}.fa-clone:before{content:\"\\f24d\"}.fa-closed-captioning:before{content:\"\\f20a\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-cloud-arrow-down:before,.fa-cloud-download-alt:before,.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-arrow-up:before,.fa-cloud-upload-alt:before,.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-cloud-meatball:before{content:\"\\f73b\"}.fa-cloud-moon:before{content:\"\\f6c3\"}.fa-cloud-moon-rain:before{content:\"\\f73c\"}.fa-cloud-rain:before{content:\"\\f73d\"}.fa-cloud-showers-heavy:before{content:\"\\f740\"}.fa-cloud-sun:before{content:\"\\f6c4\"}.fa-cloud-sun-rain:before{content:\"\\f743\"}.fa-clover:before{content:\"\\e139\"}.fa-code:before{content:\"\\f121\"}.fa-code-branch:before{content:\"\\f126\"}.fa-code-commit:before{content:\"\\f386\"}.fa-code-compare:before{content:\"\\e13a\"}.fa-code-fork:before{content:\"\\e13b\"}.fa-code-merge:before{content:\"\\f387\"}.fa-code-pull-request:before{content:\"\\e13c\"}.fa-coins:before{content:\"\\f51e\"}.fa-colon-sign:before{content:\"\\e140\"}.fa-comment:before{content:\"\\f075\"}.fa-comment-dollar:before{content:\"\\f651\"}.fa-comment-dots:before,.fa-commenting:before{content:\"\\f4ad\"}.fa-comment-medical:before{content:\"\\f7f5\"}.fa-comment-slash:before{content:\"\\f4b3\"}.fa-comment-sms:before,.fa-sms:before{content:\"\\f7cd\"}.fa-comments:before{content:\"\\f086\"}.fa-comments-dollar:before{content:\"\\f653\"}.fa-compact-disc:before{content:\"\\f51f\"}.fa-compass:before{content:\"\\f14e\"}.fa-compass-drafting:before,.fa-drafting-compass:before{content:\"\\f568\"}.fa-compress:before{content:\"\\f066\"}.fa-computer-mouse:before,.fa-mouse:before{content:\"\\f8cc\"}.fa-cookie:before{content:\"\\f563\"}.fa-cookie-bite:before{content:\"\\f564\"}.fa-copy:before{content:\"\\f0c5\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-couch:before{content:\"\\f4b8\"}.fa-credit-card-alt:before,.fa-credit-card:before{content:\"\\f09d\"}.fa-crop:before{content:\"\\f125\"}.fa-crop-alt:before,.fa-crop-simple:before{content:\"\\f565\"}.fa-cross:before{content:\"\\f654\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-crow:before{content:\"\\f520\"}.fa-crown:before{content:\"\\f521\"}.fa-crutch:before{content:\"\\f7f7\"}.fa-cruzeiro-sign:before{content:\"\\e152\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-d:before{content:\"\\44\"}.fa-database:before{content:\"\\f1c0\"}.fa-backspace:before,.fa-delete-left:before{content:\"\\f55a\"}.fa-democrat:before{content:\"\\f747\"}.fa-desktop-alt:before,.fa-desktop:before{content:\"\\f390\"}.fa-dharmachakra:before{content:\"\\f655\"}.fa-diagram-next:before{content:\"\\e476\"}.fa-diagram-predecessor:before{content:\"\\e477\"}.fa-diagram-project:before,.fa-project-diagram:before{content:\"\\f542\"}.fa-diagram-successor:before{content:\"\\e47a\"}.fa-diamond:before{content:\"\\f219\"}.fa-diamond-turn-right:before,.fa-directions:before{content:\"\\f5eb\"}.fa-dice:before{content:\"\\f522\"}.fa-dice-d20:before{content:\"\\f6cf\"}.fa-dice-d6:before{content:\"\\f6d1\"}.fa-dice-five:before{content:\"\\f523\"}.fa-dice-four:before{content:\"\\f524\"}.fa-dice-one:before{content:\"\\f525\"}.fa-dice-six:before{content:\"\\f526\"}.fa-dice-three:before{content:\"\\f527\"}.fa-dice-two:before{content:\"\\f528\"}.fa-disease:before{content:\"\\f7fa\"}.fa-divide:before{content:\"\\f529\"}.fa-dna:before{content:\"\\f471\"}.fa-dog:before{content:\"\\f6d3\"}.fa-dollar-sign:before,.fa-dollar:before,.fa-usd:before{content:\"\\24\"}.fa-dolly-box:before,.fa-dolly:before{content:\"\\f472\"}.fa-dong-sign:before{content:\"\\e169\"}.fa-door-closed:before{content:\"\\f52a\"}.fa-door-open:before{content:\"\\f52b\"}.fa-dove:before{content:\"\\f4ba\"}.fa-compress-alt:before,.fa-down-left-and-up-right-to-center:before{content:\"\\f422\"}.fa-down-long:before,.fa-long-arrow-alt-down:before{content:\"\\f309\"}.fa-download:before{content:\"\\f019\"}.fa-dragon:before{content:\"\\f6d5\"}.fa-draw-polygon:before{content:\"\\f5ee\"}.fa-droplet:before,.fa-tint:before{content:\"\\f043\"}.fa-droplet-slash:before,.fa-tint-slash:before{content:\"\\f5c7\"}.fa-drum:before{content:\"\\f569\"}.fa-drum-steelpan:before{content:\"\\f56a\"}.fa-drumstick-bite:before{content:\"\\f6d7\"}.fa-dumbbell:before{content:\"\\f44b\"}.fa-dumpster:before{content:\"\\f793\"}.fa-dumpster-fire:before{content:\"\\f794\"}.fa-dungeon:before{content:\"\\f6d9\"}.fa-e:before{content:\"\\45\"}.fa-deaf:before,.fa-deafness:before,.fa-ear-deaf:before,.fa-hard-of-hearing:before{content:\"\\f2a4\"}.fa-assistive-listening-systems:before,.fa-ear-listen:before{content:\"\\f2a2\"}.fa-earth-africa:before,.fa-globe-africa:before{content:\"\\f57c\"}.fa-earth-america:before,.fa-earth-americas:before,.fa-earth:before,.fa-globe-americas:before{content:\"\\f57d\"}.fa-earth-asia:before,.fa-globe-asia:before{content:\"\\f57e\"}.fa-earth-europe:before,.fa-globe-europe:before{content:\"\\f7a2\"}.fa-earth-oceania:before,.fa-globe-oceania:before{content:\"\\e47b\"}.fa-egg:before{content:\"\\f7fb\"}.fa-eject:before{content:\"\\f052\"}.fa-elevator:before{content:\"\\e16d\"}.fa-ellipsis-h:before,.fa-ellipsis:before{content:\"\\f141\"}.fa-ellipsis-v:before,.fa-ellipsis-vertical:before{content:\"\\f142\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-envelope-open:before{content:\"\\f2b6\"}.fa-envelope-open-text:before{content:\"\\f658\"}.fa-envelopes-bulk:before,.fa-mail-bulk:before{content:\"\\f674\"}.fa-equals:before{content:\"\\3d\"}.fa-eraser:before{content:\"\\f12d\"}.fa-ethernet:before{content:\"\\f796\"}.fa-eur:before,.fa-euro-sign:before,.fa-euro:before{content:\"\\f153\"}.fa-exclamation:before{content:\"\\21\"}.fa-expand:before{content:\"\\f065\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-dropper-empty:before,.fa-eye-dropper:before,.fa-eyedropper:before{content:\"\\f1fb\"}.fa-eye-low-vision:before,.fa-low-vision:before{content:\"\\f2a8\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-f:before{content:\"\\46\"}.fa-angry:before,.fa-face-angry:before{content:\"\\f556\"}.fa-dizzy:before,.fa-face-dizzy:before{content:\"\\f567\"}.fa-face-flushed:before,.fa-flushed:before{content:\"\\f579\"}.fa-face-frown:before,.fa-frown:before{content:\"\\f119\"}.fa-face-frown-open:before,.fa-frown-open:before{content:\"\\f57a\"}.fa-face-grimace:before,.fa-grimace:before{content:\"\\f57f\"}.fa-face-grin:before,.fa-grin:before{content:\"\\f580\"}.fa-face-grin-beam:before,.fa-grin-beam:before{content:\"\\f582\"}.fa-face-grin-beam-sweat:before,.fa-grin-beam-sweat:before{content:\"\\f583\"}.fa-face-grin-hearts:before,.fa-grin-hearts:before{content:\"\\f584\"}.fa-face-grin-squint:before,.fa-grin-squint:before{content:\"\\f585\"}.fa-face-grin-squint-tears:before,.fa-grin-squint-tears:before{content:\"\\f586\"}.fa-face-grin-stars:before,.fa-grin-stars:before{content:\"\\f587\"}.fa-face-grin-tears:before,.fa-grin-tears:before{content:\"\\f588\"}.fa-face-grin-tongue:before,.fa-grin-tongue:before{content:\"\\f589\"}.fa-face-grin-tongue-squint:before,.fa-grin-tongue-squint:before{content:\"\\f58a\"}.fa-face-grin-tongue-wink:before,.fa-grin-tongue-wink:before{content:\"\\f58b\"}.fa-face-grin-wide:before,.fa-grin-alt:before{content:\"\\f581\"}.fa-face-grin-wink:before,.fa-grin-wink:before{content:\"\\f58c\"}.fa-face-kiss:before,.fa-kiss:before{content:\"\\f596\"}.fa-face-kiss-beam:before,.fa-kiss-beam:before{content:\"\\f597\"}.fa-face-kiss-wink-heart:before,.fa-kiss-wink-heart:before{content:\"\\f598\"}.fa-face-laugh:before,.fa-laugh:before{content:\"\\f599\"}.fa-face-laugh-beam:before,.fa-laugh-beam:before{content:\"\\f59a\"}.fa-face-laugh-squint:before,.fa-laugh-squint:before{content:\"\\f59b\"}.fa-face-laugh-wink:before,.fa-laugh-wink:before{content:\"\\f59c\"}.fa-face-meh:before,.fa-meh:before{content:\"\\f11a\"}.fa-face-meh-blank:before,.fa-meh-blank:before{content:\"\\f5a4\"}.fa-face-rolling-eyes:before,.fa-meh-rolling-eyes:before{content:\"\\f5a5\"}.fa-face-sad-cry:before,.fa-sad-cry:before{content:\"\\f5b3\"}.fa-face-sad-tear:before,.fa-sad-tear:before{content:\"\\f5b4\"}.fa-face-smile:before,.fa-smile:before{content:\"\\f118\"}.fa-face-smile-beam:before,.fa-smile-beam:before{content:\"\\f5b8\"}.fa-face-smile-wink:before,.fa-smile-wink:before{content:\"\\f4da\"}.fa-face-surprise:before,.fa-surprise:before{content:\"\\f5c2\"}.fa-face-tired:before,.fa-tired:before{content:\"\\f5c8\"}.fa-fan:before{content:\"\\f863\"}.fa-faucet:before{content:\"\\e005\"}.fa-fax:before{content:\"\\f1ac\"}.fa-feather:before{content:\"\\f52d\"}.fa-feather-alt:before,.fa-feather-pointed:before{content:\"\\f56b\"}.fa-file:before{content:\"\\f15b\"}.fa-file-arrow-down:before,.fa-file-download:before{content:\"\\f56d\"}.fa-file-arrow-up:before,.fa-file-upload:before{content:\"\\f574\"}.fa-file-audio:before{content:\"\\f1c7\"}.fa-file-code:before{content:\"\\f1c9\"}.fa-file-contract:before{content:\"\\f56c\"}.fa-file-csv:before{content:\"\\f6dd\"}.fa-file-excel:before{content:\"\\f1c3\"}.fa-arrow-right-from-file:before,.fa-file-export:before{content:\"\\f56e\"}.fa-file-image:before{content:\"\\f1c5\"}.fa-arrow-right-to-file:before,.fa-file-import:before{content:\"\\f56f\"}.fa-file-invoice:before{content:\"\\f570\"}.fa-file-invoice-dollar:before{content:\"\\f571\"}.fa-file-alt:before,.fa-file-lines:before,.fa-file-text:before{content:\"\\f15c\"}.fa-file-medical:before{content:\"\\f477\"}.fa-file-pdf:before{content:\"\\f1c1\"}.fa-file-powerpoint:before{content:\"\\f1c4\"}.fa-file-prescription:before{content:\"\\f572\"}.fa-file-signature:before{content:\"\\f573\"}.fa-file-video:before{content:\"\\f1c8\"}.fa-file-medical-alt:before,.fa-file-waveform:before{content:\"\\f478\"}.fa-file-word:before{content:\"\\f1c2\"}.fa-file-archive:before,.fa-file-zipper:before{content:\"\\f1c6\"}.fa-fill:before{content:\"\\f575\"}.fa-fill-drip:before{content:\"\\f576\"}.fa-film:before{content:\"\\f008\"}.fa-filter:before{content:\"\\f0b0\"}.fa-filter-circle-dollar:before,.fa-funnel-dollar:before{content:\"\\f662\"}.fa-filter-circle-xmark:before{content:\"\\e17b\"}.fa-fingerprint:before{content:\"\\f577\"}.fa-fire:before{content:\"\\f06d\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-fire-alt:before,.fa-fire-flame-curved:before{content:\"\\f7e4\"}.fa-burn:before,.fa-fire-flame-simple:before{content:\"\\f46a\"}.fa-fish:before{content:\"\\f578\"}.fa-flag:before{content:\"\\f024\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-flag-usa:before{content:\"\\f74d\"}.fa-flask:before{content:\"\\f0c3\"}.fa-floppy-disk:before,.fa-save:before{content:\"\\f0c7\"}.fa-florin-sign:before{content:\"\\e184\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-minus:before{content:\"\\f65d\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-folder-plus:before{content:\"\\f65e\"}.fa-folder-tree:before{content:\"\\f802\"}.fa-font:before{content:\"\\f031\"}.fa-football-ball:before,.fa-football:before{content:\"\\f44e\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before,.fa-forward-fast:before{content:\"\\f050\"}.fa-forward-step:before,.fa-step-forward:before{content:\"\\f051\"}.fa-franc-sign:before{content:\"\\e18f\"}.fa-frog:before{content:\"\\f52e\"}.fa-futbol-ball:before,.fa-futbol:before,.fa-soccer-ball:before{content:\"\\f1e3\"}.fa-g:before{content:\"\\47\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-gas-pump:before{content:\"\\f52f\"}.fa-dashboard:before,.fa-gauge-med:before,.fa-gauge:before,.fa-tachometer-alt-average:before{content:\"\\f624\"}.fa-gauge-high:before,.fa-tachometer-alt-fast:before,.fa-tachometer-alt:before{content:\"\\f625\"}.fa-gauge-simple-med:before,.fa-gauge-simple:before,.fa-tachometer-average:before{content:\"\\f629\"}.fa-gauge-simple-high:before,.fa-tachometer-fast:before,.fa-tachometer:before{content:\"\\f62a\"}.fa-gavel:before,.fa-legal:before{content:\"\\f0e3\"}.fa-cog:before,.fa-gear:before{content:\"\\f013\"}.fa-cogs:before,.fa-gears:before{content:\"\\f085\"}.fa-gem:before{content:\"\\f3a5\"}.fa-genderless:before{content:\"\\f22d\"}.fa-ghost:before{content:\"\\f6e2\"}.fa-gift:before{content:\"\\f06b\"}.fa-gifts:before{content:\"\\f79c\"}.fa-glasses:before{content:\"\\f530\"}.fa-globe:before{content:\"\\f0ac\"}.fa-golf-ball-tee:before,.fa-golf-ball:before{content:\"\\f450\"}.fa-gopuram:before{content:\"\\f664\"}.fa-graduation-cap:before,.fa-mortar-board:before{content:\"\\f19d\"}.fa-greater-than:before{content:\"\\3e\"}.fa-greater-than-equal:before{content:\"\\f532\"}.fa-grip-horizontal:before,.fa-grip:before{content:\"\\f58d\"}.fa-grip-lines:before{content:\"\\f7a4\"}.fa-grip-lines-vertical:before{content:\"\\f7a5\"}.fa-grip-vertical:before{content:\"\\f58e\"}.fa-guarani-sign:before{content:\"\\e19a\"}.fa-guitar:before{content:\"\\f7a6\"}.fa-gun:before{content:\"\\e19b\"}.fa-h:before{content:\"\\48\"}.fa-hammer:before{content:\"\\f6e3\"}.fa-hamsa:before{content:\"\\f665\"}.fa-hand-paper:before,.fa-hand:before{content:\"\\f256\"}.fa-hand-back-fist:before,.fa-hand-rock:before{content:\"\\f255\"}.fa-allergies:before,.fa-hand-dots:before{content:\"\\f461\"}.fa-fist-raised:before,.fa-hand-fist:before{content:\"\\f6de\"}.fa-hand-holding:before{content:\"\\f4bd\"}.fa-hand-holding-dollar:before,.fa-hand-holding-usd:before{content:\"\\f4c0\"}.fa-hand-holding-droplet:before,.fa-hand-holding-water:before{content:\"\\f4c1\"}.fa-hand-holding-heart:before{content:\"\\f4be\"}.fa-hand-holding-medical:before{content:\"\\e05c\"}.fa-hand-lizard:before{content:\"\\f258\"}.fa-hand-middle-finger:before{content:\"\\f806\"}.fa-hand-peace:before{content:\"\\f25b\"}.fa-hand-point-down:before{content:\"\\f0a7\"}.fa-hand-point-left:before{content:\"\\f0a5\"}.fa-hand-point-right:before{content:\"\\f0a4\"}.fa-hand-point-up:before{content:\"\\f0a6\"}.fa-hand-pointer:before{content:\"\\f25a\"}.fa-hand-scissors:before{content:\"\\f257\"}.fa-hand-sparkles:before{content:\"\\e05d\"}.fa-hand-spock:before{content:\"\\f259\"}.fa-hands:before,.fa-sign-language:before,.fa-signing:before{content:\"\\f2a7\"}.fa-american-sign-language-interpreting:before,.fa-asl-interpreting:before,.fa-hands-american-sign-language-interpreting:before,.fa-hands-asl-interpreting:before{content:\"\\f2a3\"}.fa-hands-bubbles:before,.fa-hands-wash:before{content:\"\\e05e\"}.fa-hands-clapping:before{content:\"\\e1a8\"}.fa-hands-holding:before{content:\"\\f4c2\"}.fa-hands-praying:before,.fa-praying-hands:before{content:\"\\f684\"}.fa-handshake:before{content:\"\\f2b5\"}.fa-hands-helping:before,.fa-handshake-angle:before{content:\"\\f4c4\"}.fa-handshake-alt-slash:before,.fa-handshake-simple-slash:before{content:\"\\e05f\"}.fa-handshake-slash:before{content:\"\\e060\"}.fa-hanukiah:before{content:\"\\f6e6\"}.fa-hard-drive:before,.fa-hdd:before{content:\"\\f0a0\"}.fa-hashtag:before{content:\"\\23\"}.fa-hat-cowboy:before{content:\"\\f8c0\"}.fa-hat-cowboy-side:before{content:\"\\f8c1\"}.fa-hat-wizard:before{content:\"\\f6e8\"}.fa-head-side-cough:before{content:\"\\e061\"}.fa-head-side-cough-slash:before{content:\"\\e062\"}.fa-head-side-mask:before{content:\"\\e063\"}.fa-head-side-virus:before{content:\"\\e064\"}.fa-header:before,.fa-heading:before{content:\"\\f1dc\"}.fa-headphones:before{content:\"\\f025\"}.fa-headphones-alt:before,.fa-headphones-simple:before{content:\"\\f58f\"}.fa-headset:before{content:\"\\f590\"}.fa-heart:before{content:\"\\f004\"}.fa-heart-broken:before,.fa-heart-crack:before{content:\"\\f7a9\"}.fa-heart-pulse:before,.fa-heartbeat:before{content:\"\\f21e\"}.fa-helicopter:before{content:\"\\f533\"}.fa-hard-hat:before,.fa-hat-hard:before,.fa-helmet-safety:before{content:\"\\f807\"}.fa-highlighter:before{content:\"\\f591\"}.fa-hippo:before{content:\"\\f6ed\"}.fa-hockey-puck:before{content:\"\\f453\"}.fa-holly-berry:before{content:\"\\f7aa\"}.fa-horse:before{content:\"\\f6f0\"}.fa-horse-head:before{content:\"\\f7ab\"}.fa-hospital-alt:before,.fa-hospital-wide:before,.fa-hospital:before{content:\"\\f0f8\"}.fa-hospital-user:before{content:\"\\f80d\"}.fa-hot-tub-person:before,.fa-hot-tub:before{content:\"\\f593\"}.fa-hotdog:before{content:\"\\f80f\"}.fa-hotel:before{content:\"\\f594\"}.fa-hourglass-2:before,.fa-hourglass-half:before,.fa-hourglass:before{content:\"\\f254\"}.fa-hourglass-empty:before{content:\"\\f252\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\"\\f251\"}.fa-home-alt:before,.fa-home-lg-alt:before,.fa-home:before,.fa-house:before{content:\"\\f015\"}.fa-home-lg:before,.fa-house-chimney:before{content:\"\\e3af\"}.fa-house-chimney-crack:before,.fa-house-damage:before{content:\"\\f6f1\"}.fa-clinic-medical:before,.fa-house-chimney-medical:before{content:\"\\f7f2\"}.fa-house-chimney-user:before{content:\"\\e065\"}.fa-house-chimney-window:before{content:\"\\e00d\"}.fa-house-crack:before{content:\"\\e3b1\"}.fa-house-laptop:before,.fa-laptop-house:before{content:\"\\e066\"}.fa-house-medical:before{content:\"\\e3b2\"}.fa-home-user:before,.fa-house-user:before{content:\"\\e1b0\"}.fa-hryvnia-sign:before,.fa-hryvnia:before{content:\"\\f6f2\"}.fa-i:before{content:\"\\49\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-ice-cream:before{content:\"\\f810\"}.fa-icicles:before{content:\"\\f7ad\"}.fa-heart-music-camera-bolt:before,.fa-icons:before{content:\"\\f86d\"}.fa-id-badge:before{content:\"\\f2c1\"}.fa-drivers-license:before,.fa-id-card:before{content:\"\\f2c2\"}.fa-id-card-alt:before,.fa-id-card-clip:before{content:\"\\f47f\"}.fa-igloo:before{content:\"\\f7ae\"}.fa-image:before{content:\"\\f03e\"}.fa-image-portrait:before,.fa-portrait:before{content:\"\\f3e0\"}.fa-images:before{content:\"\\f302\"}.fa-inbox:before{content:\"\\f01c\"}.fa-indent:before{content:\"\\f03c\"}.fa-indian-rupee-sign:before,.fa-indian-rupee:before,.fa-inr:before{content:\"\\e1bc\"}.fa-industry:before{content:\"\\f275\"}.fa-infinity:before{content:\"\\f534\"}.fa-info:before{content:\"\\f129\"}.fa-italic:before{content:\"\\f033\"}.fa-j:before{content:\"\\4a\"}.fa-jedi:before{content:\"\\f669\"}.fa-fighter-jet:before,.fa-jet-fighter:before{content:\"\\f0fb\"}.fa-joint:before{content:\"\\f595\"}.fa-k:before{content:\"\\4b\"}.fa-kaaba:before{content:\"\\f66b\"}.fa-key:before{content:\"\\f084\"}.fa-keyboard:before{content:\"\\f11c\"}.fa-khanda:before{content:\"\\f66d\"}.fa-kip-sign:before{content:\"\\e1c4\"}.fa-first-aid:before,.fa-kit-medical:before{content:\"\\f479\"}.fa-kiwi-bird:before{content:\"\\f535\"}.fa-l:before{content:\"\\4c\"}.fa-landmark:before{content:\"\\f66f\"}.fa-language:before{content:\"\\f1ab\"}.fa-laptop:before{content:\"\\f109\"}.fa-laptop-code:before{content:\"\\f5fc\"}.fa-laptop-medical:before{content:\"\\f812\"}.fa-lari-sign:before{content:\"\\e1c8\"}.fa-layer-group:before{content:\"\\f5fd\"}.fa-leaf:before{content:\"\\f06c\"}.fa-left-long:before,.fa-long-arrow-alt-left:before{content:\"\\f30a\"}.fa-arrows-alt-h:before,.fa-left-right:before{content:\"\\f337\"}.fa-lemon:before{content:\"\\f094\"}.fa-less-than:before{content:\"\\3c\"}.fa-less-than-equal:before{content:\"\\f537\"}.fa-life-ring:before{content:\"\\f1cd\"}.fa-lightbulb:before{content:\"\\f0eb\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-chain-broken:before,.fa-chain-slash:before,.fa-link-slash:before,.fa-unlink:before{content:\"\\f127\"}.fa-lira-sign:before{content:\"\\f195\"}.fa-list-squares:before,.fa-list:before{content:\"\\f03a\"}.fa-list-check:before,.fa-tasks:before{content:\"\\f0ae\"}.fa-list-1-2:before,.fa-list-numeric:before,.fa-list-ol:before{content:\"\\f0cb\"}.fa-list-dots:before,.fa-list-ul:before{content:\"\\f0ca\"}.fa-litecoin-sign:before{content:\"\\e1d3\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-location-crosshairs:before,.fa-location:before{content:\"\\f601\"}.fa-location-dot:before,.fa-map-marker-alt:before{content:\"\\f3c5\"}.fa-location-pin:before,.fa-map-marker:before{content:\"\\f041\"}.fa-lock:before{content:\"\\f023\"}.fa-lock-open:before{content:\"\\f3c1\"}.fa-lungs:before{content:\"\\f604\"}.fa-lungs-virus:before{content:\"\\e067\"}.fa-m:before{content:\"\\4d\"}.fa-magnet:before{content:\"\\f076\"}.fa-magnifying-glass:before,.fa-search:before{content:\"\\f002\"}.fa-magnifying-glass-dollar:before,.fa-search-dollar:before{content:\"\\f688\"}.fa-magnifying-glass-location:before,.fa-search-location:before{content:\"\\f689\"}.fa-magnifying-glass-minus:before,.fa-search-minus:before{content:\"\\f010\"}.fa-magnifying-glass-plus:before,.fa-search-plus:before{content:\"\\f00e\"}.fa-manat-sign:before{content:\"\\e1d5\"}.fa-map:before{content:\"\\f279\"}.fa-map-location:before,.fa-map-marked:before{content:\"\\f59f\"}.fa-map-location-dot:before,.fa-map-marked-alt:before{content:\"\\f5a0\"}.fa-map-pin:before{content:\"\\f276\"}.fa-marker:before{content:\"\\f5a1\"}.fa-mars:before{content:\"\\f222\"}.fa-mars-and-venus:before{content:\"\\f224\"}.fa-mars-double:before{content:\"\\f227\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-h:before,.fa-mars-stroke-right:before{content:\"\\f22b\"}.fa-mars-stroke-up:before,.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-glass-martini-alt:before,.fa-martini-glass:before{content:\"\\f57b\"}.fa-cocktail:before,.fa-martini-glass-citrus:before{content:\"\\f561\"}.fa-glass-martini:before,.fa-martini-glass-empty:before{content:\"\\f000\"}.fa-mask:before{content:\"\\f6fa\"}.fa-mask-face:before{content:\"\\e1d7\"}.fa-masks-theater:before,.fa-theater-masks:before{content:\"\\f630\"}.fa-expand-arrows-alt:before,.fa-maximize:before{content:\"\\f31e\"}.fa-medal:before{content:\"\\f5a2\"}.fa-memory:before{content:\"\\f538\"}.fa-menorah:before{content:\"\\f676\"}.fa-mercury:before{content:\"\\f223\"}.fa-comment-alt:before,.fa-message:before{content:\"\\f27a\"}.fa-meteor:before{content:\"\\f753\"}.fa-microchip:before{content:\"\\f2db\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-alt:before,.fa-microphone-lines:before{content:\"\\f3c9\"}.fa-microphone-alt-slash:before,.fa-microphone-lines-slash:before{content:\"\\f539\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-microscope:before{content:\"\\f610\"}.fa-mill-sign:before{content:\"\\e1ed\"}.fa-compress-arrows-alt:before,.fa-minimize:before{content:\"\\f78c\"}.fa-minus:before,.fa-subtract:before{content:\"\\f068\"}.fa-mitten:before{content:\"\\f7b5\"}.fa-mobile-android:before,.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f3ce\"}.fa-mobile-button:before{content:\"\\f10b\"}.fa-mobile-alt:before,.fa-mobile-screen-button:before{content:\"\\f3cd\"}.fa-money-bill:before{content:\"\\f0d6\"}.fa-money-bill-1:before,.fa-money-bill-alt:before{content:\"\\f3d1\"}.fa-money-bill-1-wave:before,.fa-money-bill-wave-alt:before{content:\"\\f53b\"}.fa-money-bill-wave:before{content:\"\\f53a\"}.fa-money-check:before{content:\"\\f53c\"}.fa-money-check-alt:before,.fa-money-check-dollar:before{content:\"\\f53d\"}.fa-monument:before{content:\"\\f5a6\"}.fa-moon:before{content:\"\\f186\"}.fa-mortar-pestle:before{content:\"\\f5a7\"}.fa-mosque:before{content:\"\\f678\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-mountain:before{content:\"\\f6fc\"}.fa-mug-hot:before{content:\"\\f7b6\"}.fa-coffee:before,.fa-mug-saucer:before{content:\"\\f0f4\"}.fa-music:before{content:\"\\f001\"}.fa-n:before{content:\"\\4e\"}.fa-naira-sign:before{content:\"\\e1f6\"}.fa-network-wired:before{content:\"\\f6ff\"}.fa-neuter:before{content:\"\\f22c\"}.fa-newspaper:before{content:\"\\f1ea\"}.fa-not-equal:before{content:\"\\f53e\"}.fa-note-sticky:before,.fa-sticky-note:before{content:\"\\f249\"}.fa-notes-medical:before{content:\"\\f481\"}.fa-o:before{content:\"\\4f\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-oil-can:before{content:\"\\f613\"}.fa-om:before{content:\"\\f679\"}.fa-otter:before{content:\"\\f700\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-p:before{content:\"\\50\"}.fa-pager:before{content:\"\\f815\"}.fa-paint-roller:before{content:\"\\f5aa\"}.fa-paint-brush:before,.fa-paintbrush:before{content:\"\\f1fc\"}.fa-palette:before{content:\"\\f53f\"}.fa-pallet:before{content:\"\\f482\"}.fa-panorama:before{content:\"\\e209\"}.fa-paper-plane:before{content:\"\\f1d8\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-parachute-box:before{content:\"\\f4cd\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-passport:before{content:\"\\f5ab\"}.fa-file-clipboard:before,.fa-paste:before{content:\"\\f0ea\"}.fa-pause:before{content:\"\\f04c\"}.fa-paw:before{content:\"\\f1b0\"}.fa-peace:before{content:\"\\f67c\"}.fa-pen:before{content:\"\\f304\"}.fa-pen-alt:before,.fa-pen-clip:before{content:\"\\f305\"}.fa-pen-fancy:before{content:\"\\f5ac\"}.fa-pen-nib:before{content:\"\\f5ad\"}.fa-pen-ruler:before,.fa-pencil-ruler:before{content:\"\\f5ae\"}.fa-edit:before,.fa-pen-to-square:before{content:\"\\f044\"}.fa-pencil-alt:before,.fa-pencil:before{content:\"\\f303\"}.fa-people-arrows-left-right:before,.fa-people-arrows:before{content:\"\\e068\"}.fa-people-carry-box:before,.fa-people-carry:before{content:\"\\f4ce\"}.fa-pepper-hot:before{content:\"\\f816\"}.fa-percent:before,.fa-percentage:before{content:\"\\25\"}.fa-male:before,.fa-person:before{content:\"\\f183\"}.fa-biking:before,.fa-person-biking:before{content:\"\\f84a\"}.fa-person-booth:before{content:\"\\f756\"}.fa-diagnoses:before,.fa-person-dots-from-line:before{content:\"\\f470\"}.fa-female:before,.fa-person-dress:before{content:\"\\f182\"}.fa-hiking:before,.fa-person-hiking:before{content:\"\\f6ec\"}.fa-person-praying:before,.fa-pray:before{content:\"\\f683\"}.fa-person-running:before,.fa-running:before{content:\"\\f70c\"}.fa-person-skating:before,.fa-skating:before{content:\"\\f7c5\"}.fa-person-skiing:before,.fa-skiing:before{content:\"\\f7c9\"}.fa-person-skiing-nordic:before,.fa-skiing-nordic:before{content:\"\\f7ca\"}.fa-person-snowboarding:before,.fa-snowboarding:before{content:\"\\f7ce\"}.fa-person-swimming:before,.fa-swimmer:before{content:\"\\f5c4\"}.fa-person-walking:before,.fa-walking:before{content:\"\\f554\"}.fa-blind:before,.fa-person-walking-with-cane:before{content:\"\\f29d\"}.fa-peseta-sign:before{content:\"\\e221\"}.fa-peso-sign:before{content:\"\\e222\"}.fa-phone:before{content:\"\\f095\"}.fa-phone-alt:before,.fa-phone-flip:before{content:\"\\f879\"}.fa-phone-slash:before{content:\"\\f3dd\"}.fa-phone-volume:before,.fa-volume-control-phone:before{content:\"\\f2a0\"}.fa-photo-film:before,.fa-photo-video:before{content:\"\\f87c\"}.fa-piggy-bank:before{content:\"\\f4d3\"}.fa-pills:before{content:\"\\f484\"}.fa-pizza-slice:before{content:\"\\f818\"}.fa-place-of-worship:before{content:\"\\f67f\"}.fa-plane:before{content:\"\\f072\"}.fa-plane-arrival:before{content:\"\\f5af\"}.fa-plane-departure:before{content:\"\\f5b0\"}.fa-plane-slash:before{content:\"\\e069\"}.fa-play:before{content:\"\\f04b\"}.fa-plug:before{content:\"\\f1e6\"}.fa-add:before,.fa-plus:before{content:\"\\2b\"}.fa-plus-minus:before{content:\"\\e43c\"}.fa-podcast:before{content:\"\\f2ce\"}.fa-poo:before{content:\"\\f2fe\"}.fa-poo-bolt:before,.fa-poo-storm:before{content:\"\\f75a\"}.fa-poop:before{content:\"\\f619\"}.fa-power-off:before{content:\"\\f011\"}.fa-prescription:before{content:\"\\f5b1\"}.fa-prescription-bottle:before{content:\"\\f485\"}.fa-prescription-bottle-alt:before,.fa-prescription-bottle-medical:before{content:\"\\f486\"}.fa-print:before{content:\"\\f02f\"}.fa-pump-medical:before{content:\"\\e06a\"}.fa-pump-soap:before{content:\"\\e06b\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-q:before{content:\"\\51\"}.fa-qrcode:before{content:\"\\f029\"}.fa-question:before{content:\"\\3f\"}.fa-quote-left-alt:before,.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right-alt:before,.fa-quote-right:before{content:\"\\f10e\"}.fa-r:before{content:\"\\52\"}.fa-radiation:before{content:\"\\f7b9\"}.fa-rainbow:before{content:\"\\f75b\"}.fa-receipt:before{content:\"\\f543\"}.fa-record-vinyl:before{content:\"\\f8d9\"}.fa-ad:before,.fa-rectangle-ad:before{content:\"\\f641\"}.fa-list-alt:before,.fa-rectangle-list:before{content:\"\\f022\"}.fa-rectangle-times:before,.fa-rectangle-xmark:before,.fa-times-rectangle:before,.fa-window-close:before{content:\"\\f410\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-registered:before{content:\"\\f25d\"}.fa-repeat:before{content:\"\\f363\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f3e5\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-republican:before{content:\"\\f75e\"}.fa-restroom:before{content:\"\\f7bd\"}.fa-retweet:before{content:\"\\f079\"}.fa-ribbon:before{content:\"\\f4d6\"}.fa-right-from-bracket:before,.fa-sign-out-alt:before{content:\"\\f2f5\"}.fa-exchange-alt:before,.fa-right-left:before{content:\"\\f362\"}.fa-long-arrow-alt-right:before,.fa-right-long:before{content:\"\\f30b\"}.fa-right-to-bracket:before,.fa-sign-in-alt:before{content:\"\\f2f6\"}.fa-ring:before{content:\"\\f70b\"}.fa-road:before{content:\"\\f018\"}.fa-robot:before{content:\"\\f544\"}.fa-rocket:before{content:\"\\f135\"}.fa-rotate:before,.fa-sync-alt:before{content:\"\\f2f1\"}.fa-rotate-back:before,.fa-rotate-backward:before,.fa-rotate-left:before,.fa-undo-alt:before{content:\"\\f2ea\"}.fa-redo-alt:before,.fa-rotate-forward:before,.fa-rotate-right:before{content:\"\\f2f9\"}.fa-route:before{content:\"\\f4d7\"}.fa-feed:before,.fa-rss:before{content:\"\\f09e\"}.fa-rouble:before,.fa-rub:before,.fa-ruble-sign:before,.fa-ruble:before{content:\"\\f158\"}.fa-ruler:before{content:\"\\f545\"}.fa-ruler-combined:before{content:\"\\f546\"}.fa-ruler-horizontal:before{content:\"\\f547\"}.fa-ruler-vertical:before{content:\"\\f548\"}.fa-rupee-sign:before,.fa-rupee:before{content:\"\\f156\"}.fa-rupiah-sign:before{content:\"\\e23d\"}.fa-s:before{content:\"\\53\"}.fa-sailboat:before{content:\"\\e445\"}.fa-satellite:before{content:\"\\f7bf\"}.fa-satellite-dish:before{content:\"\\f7c0\"}.fa-balance-scale:before,.fa-scale-balanced:before{content:\"\\f24e\"}.fa-balance-scale-left:before,.fa-scale-unbalanced:before{content:\"\\f515\"}.fa-balance-scale-right:before,.fa-scale-unbalanced-flip:before{content:\"\\f516\"}.fa-school:before{content:\"\\f549\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-screwdriver:before{content:\"\\f54a\"}.fa-screwdriver-wrench:before,.fa-tools:before{content:\"\\f7d9\"}.fa-scroll:before{content:\"\\f70e\"}.fa-scroll-torah:before,.fa-torah:before{content:\"\\f6a0\"}.fa-sd-card:before{content:\"\\f7c2\"}.fa-section:before{content:\"\\e447\"}.fa-seedling:before,.fa-sprout:before{content:\"\\f4d8\"}.fa-server:before{content:\"\\f233\"}.fa-shapes:before,.fa-triangle-circle-square:before{content:\"\\f61f\"}.fa-arrow-turn-right:before,.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-share-from-square:before,.fa-share-square:before{content:\"\\f14d\"}.fa-share-alt:before,.fa-share-nodes:before{content:\"\\f1e0\"}.fa-ils:before,.fa-shekel-sign:before,.fa-shekel:before,.fa-sheqel-sign:before,.fa-sheqel:before{content:\"\\f20b\"}.fa-shield:before{content:\"\\f132\"}.fa-shield-alt:before,.fa-shield-blank:before{content:\"\\f3ed\"}.fa-shield-virus:before{content:\"\\e06c\"}.fa-ship:before{content:\"\\f21a\"}.fa-shirt:before,.fa-t-shirt:before,.fa-tshirt:before{content:\"\\f553\"}.fa-shoe-prints:before{content:\"\\f54b\"}.fa-shop:before,.fa-store-alt:before{content:\"\\f54f\"}.fa-shop-slash:before,.fa-store-alt-slash:before{content:\"\\e070\"}.fa-shower:before{content:\"\\f2cc\"}.fa-shrimp:before{content:\"\\e448\"}.fa-random:before,.fa-shuffle:before{content:\"\\f074\"}.fa-shuttle-space:before,.fa-space-shuttle:before{content:\"\\f197\"}.fa-sign-hanging:before,.fa-sign:before{content:\"\\f4d9\"}.fa-signal-5:before,.fa-signal-perfect:before,.fa-signal:before{content:\"\\f012\"}.fa-signature:before{content:\"\\f5b7\"}.fa-map-signs:before,.fa-signs-post:before{content:\"\\f277\"}.fa-sim-card:before{content:\"\\f7c4\"}.fa-sink:before{content:\"\\e06d\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-skull:before{content:\"\\f54c\"}.fa-skull-crossbones:before{content:\"\\f714\"}.fa-slash:before{content:\"\\f715\"}.fa-sleigh:before{content:\"\\f7cc\"}.fa-sliders-h:before,.fa-sliders:before{content:\"\\f1de\"}.fa-smog:before{content:\"\\f75f\"}.fa-smoking:before{content:\"\\f48d\"}.fa-snowflake:before{content:\"\\f2dc\"}.fa-snowman:before{content:\"\\f7d0\"}.fa-snowplow:before{content:\"\\f7d2\"}.fa-soap:before{content:\"\\e06e\"}.fa-socks:before{content:\"\\f696\"}.fa-solar-panel:before{content:\"\\f5ba\"}.fa-sort:before,.fa-unsorted:before{content:\"\\f0dc\"}.fa-sort-desc:before,.fa-sort-down:before{content:\"\\f0dd\"}.fa-sort-asc:before,.fa-sort-up:before{content:\"\\f0de\"}.fa-spa:before{content:\"\\f5bb\"}.fa-pastafarianism:before,.fa-spaghetti-monster-flying:before{content:\"\\f67b\"}.fa-spell-check:before{content:\"\\f891\"}.fa-spider:before{content:\"\\f717\"}.fa-spinner:before{content:\"\\f110\"}.fa-splotch:before{content:\"\\f5bc\"}.fa-spoon:before,.fa-utensil-spoon:before{content:\"\\f2e5\"}.fa-spray-can:before{content:\"\\f5bd\"}.fa-air-freshener:before,.fa-spray-can-sparkles:before{content:\"\\f5d0\"}.fa-square:before{content:\"\\f0c8\"}.fa-external-link-square:before,.fa-square-arrow-up-right:before{content:\"\\f14c\"}.fa-caret-square-down:before,.fa-square-caret-down:before{content:\"\\f150\"}.fa-caret-square-left:before,.fa-square-caret-left:before{content:\"\\f191\"}.fa-caret-square-right:before,.fa-square-caret-right:before{content:\"\\f152\"}.fa-caret-square-up:before,.fa-square-caret-up:before{content:\"\\f151\"}.fa-check-square:before,.fa-square-check:before{content:\"\\f14a\"}.fa-envelope-square:before,.fa-square-envelope:before{content:\"\\f199\"}.fa-square-full:before{content:\"\\f45c\"}.fa-h-square:before,.fa-square-h:before{content:\"\\f0fd\"}.fa-minus-square:before,.fa-square-minus:before{content:\"\\f146\"}.fa-parking:before,.fa-square-parking:before{content:\"\\f540\"}.fa-pen-square:before,.fa-pencil-square:before,.fa-square-pen:before{content:\"\\f14b\"}.fa-phone-square:before,.fa-square-phone:before{content:\"\\f098\"}.fa-phone-square-alt:before,.fa-square-phone-flip:before{content:\"\\f87b\"}.fa-plus-square:before,.fa-square-plus:before{content:\"\\f0fe\"}.fa-poll-h:before,.fa-square-poll-horizontal:before{content:\"\\f682\"}.fa-poll:before,.fa-square-poll-vertical:before{content:\"\\f681\"}.fa-square-root-alt:before,.fa-square-root-variable:before{content:\"\\f698\"}.fa-rss-square:before,.fa-square-rss:before{content:\"\\f143\"}.fa-share-alt-square:before,.fa-square-share-nodes:before{content:\"\\f1e1\"}.fa-external-link-square-alt:before,.fa-square-up-right:before{content:\"\\f360\"}.fa-square-xmark:before,.fa-times-square:before,.fa-xmark-square:before{content:\"\\f2d3\"}.fa-stairs:before{content:\"\\e289\"}.fa-stamp:before{content:\"\\f5bf\"}.fa-star:before{content:\"\\f005\"}.fa-star-and-crescent:before{content:\"\\f699\"}.fa-star-half:before{content:\"\\f089\"}.fa-star-half-alt:before,.fa-star-half-stroke:before{content:\"\\f5c0\"}.fa-star-of-david:before{content:\"\\f69a\"}.fa-star-of-life:before{content:\"\\f621\"}.fa-gbp:before,.fa-pound-sign:before,.fa-sterling-sign:before{content:\"\\f154\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-stop:before{content:\"\\f04d\"}.fa-stopwatch:before{content:\"\\f2f2\"}.fa-stopwatch-20:before{content:\"\\e06f\"}.fa-store:before{content:\"\\f54e\"}.fa-store-slash:before{content:\"\\e071\"}.fa-street-view:before{content:\"\\f21d\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-stroopwafel:before{content:\"\\f551\"}.fa-subscript:before{content:\"\\f12c\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-medkit:before,.fa-suitcase-medical:before{content:\"\\f0fa\"}.fa-suitcase-rolling:before{content:\"\\f5c1\"}.fa-sun:before{content:\"\\f185\"}.fa-superscript:before{content:\"\\f12b\"}.fa-swatchbook:before{content:\"\\f5c3\"}.fa-synagogue:before{content:\"\\f69b\"}.fa-syringe:before{content:\"\\f48e\"}.fa-t:before{content:\"\\54\"}.fa-table:before{content:\"\\f0ce\"}.fa-table-cells:before,.fa-th:before{content:\"\\f00a\"}.fa-table-cells-large:before,.fa-th-large:before{content:\"\\f009\"}.fa-columns:before,.fa-table-columns:before{content:\"\\f0db\"}.fa-table-list:before,.fa-th-list:before{content:\"\\f00b\"}.fa-ping-pong-paddle-ball:before,.fa-table-tennis-paddle-ball:before,.fa-table-tennis:before{content:\"\\f45d\"}.fa-tablet-android:before,.fa-tablet:before{content:\"\\f3fb\"}.fa-tablet-button:before{content:\"\\f10a\"}.fa-tablet-alt:before,.fa-tablet-screen-button:before{content:\"\\f3fa\"}.fa-tablets:before{content:\"\\f490\"}.fa-digital-tachograph:before,.fa-tachograph-digital:before{content:\"\\f566\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-tape:before{content:\"\\f4db\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-teeth:before{content:\"\\f62e\"}.fa-teeth-open:before{content:\"\\f62f\"}.fa-temperature-0:before,.fa-temperature-empty:before,.fa-thermometer-0:before,.fa-thermometer-empty:before{content:\"\\f2cb\"}.fa-temperature-4:before,.fa-temperature-full:before,.fa-thermometer-4:before,.fa-thermometer-full:before{content:\"\\f2c7\"}.fa-temperature-2:before,.fa-temperature-half:before,.fa-thermometer-2:before,.fa-thermometer-half:before{content:\"\\f2c9\"}.fa-temperature-high:before{content:\"\\f769\"}.fa-temperature-low:before{content:\"\\f76b\"}.fa-temperature-1:before,.fa-temperature-quarter:before,.fa-thermometer-1:before,.fa-thermometer-quarter:before{content:\"\\f2ca\"}.fa-temperature-3:before,.fa-temperature-three-quarters:before,.fa-thermometer-3:before,.fa-thermometer-three-quarters:before{content:\"\\f2c8\"}.fa-tenge-sign:before,.fa-tenge:before{content:\"\\f7d7\"}.fa-terminal:before{content:\"\\f120\"}.fa-text-height:before{content:\"\\f034\"}.fa-remove-format:before,.fa-text-slash:before{content:\"\\f87d\"}.fa-text-width:before{content:\"\\f035\"}.fa-thermometer:before{content:\"\\f491\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumb-tack:before,.fa-thumbtack:before{content:\"\\f08d\"}.fa-ticket:before{content:\"\\f145\"}.fa-ticket-alt:before,.fa-ticket-simple:before{content:\"\\f3ff\"}.fa-timeline:before{content:\"\\e29c\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-toilet:before{content:\"\\f7d8\"}.fa-toilet-paper:before{content:\"\\f71e\"}.fa-toilet-paper-slash:before{content:\"\\e072\"}.fa-toolbox:before{content:\"\\f552\"}.fa-tooth:before{content:\"\\f5c9\"}.fa-torii-gate:before{content:\"\\f6a1\"}.fa-broadcast-tower:before,.fa-tower-broadcast:before{content:\"\\f519\"}.fa-tractor:before{content:\"\\f722\"}.fa-trademark:before{content:\"\\f25c\"}.fa-traffic-light:before{content:\"\\f637\"}.fa-trailer:before{content:\"\\e041\"}.fa-train:before{content:\"\\f238\"}.fa-subway:before,.fa-train-subway:before{content:\"\\f239\"}.fa-train-tram:before,.fa-tram:before{content:\"\\f7da\"}.fa-transgender-alt:before,.fa-transgender:before{content:\"\\f225\"}.fa-trash:before{content:\"\\f1f8\"}.fa-trash-arrow-up:before,.fa-trash-restore:before{content:\"\\f829\"}.fa-trash-alt:before,.fa-trash-can:before{content:\"\\f2ed\"}.fa-trash-can-arrow-up:before,.fa-trash-restore-alt:before{content:\"\\f82a\"}.fa-tree:before{content:\"\\f1bb\"}.fa-exclamation-triangle:before,.fa-triangle-exclamation:before,.fa-warning:before{content:\"\\f071\"}.fa-trophy:before{content:\"\\f091\"}.fa-truck:before{content:\"\\f0d1\"}.fa-shipping-fast:before,.fa-truck-fast:before{content:\"\\f48b\"}.fa-ambulance:before,.fa-truck-medical:before{content:\"\\f0f9\"}.fa-truck-monster:before{content:\"\\f63b\"}.fa-truck-moving:before{content:\"\\f4df\"}.fa-truck-pickup:before{content:\"\\f63c\"}.fa-truck-loading:before,.fa-truck-ramp-box:before{content:\"\\f4de\"}.fa-teletype:before,.fa-tty:before{content:\"\\f1e4\"}.fa-try:before,.fa-turkish-lira-sign:before,.fa-turkish-lira:before{content:\"\\e2bb\"}.fa-level-down-alt:before,.fa-turn-down:before{content:\"\\f3be\"}.fa-level-up-alt:before,.fa-turn-up:before{content:\"\\f3bf\"}.fa-television:before,.fa-tv-alt:before,.fa-tv:before{content:\"\\f26c\"}.fa-u:before{content:\"\\55\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-umbrella-beach:before{content:\"\\f5ca\"}.fa-underline:before{content:\"\\f0cd\"}.fa-universal-access:before{content:\"\\f29a\"}.fa-unlock:before{content:\"\\f09c\"}.fa-unlock-alt:before,.fa-unlock-keyhole:before{content:\"\\f13e\"}.fa-arrows-alt-v:before,.fa-up-down:before{content:\"\\f338\"}.fa-arrows-alt:before,.fa-up-down-left-right:before{content:\"\\f0b2\"}.fa-long-arrow-alt-up:before,.fa-up-long:before{content:\"\\f30c\"}.fa-expand-alt:before,.fa-up-right-and-down-left-from-center:before{content:\"\\f424\"}.fa-external-link-alt:before,.fa-up-right-from-square:before{content:\"\\f35d\"}.fa-upload:before{content:\"\\f093\"}.fa-user:before{content:\"\\f007\"}.fa-user-astronaut:before{content:\"\\f4fb\"}.fa-user-check:before{content:\"\\f4fc\"}.fa-user-clock:before{content:\"\\f4fd\"}.fa-user-doctor:before,.fa-user-md:before{content:\"\\f0f0\"}.fa-user-cog:before,.fa-user-gear:before{content:\"\\f4fe\"}.fa-user-graduate:before{content:\"\\f501\"}.fa-user-friends:before,.fa-user-group:before{content:\"\\f500\"}.fa-user-injured:before{content:\"\\f728\"}.fa-user-alt:before,.fa-user-large:before{content:\"\\f406\"}.fa-user-alt-slash:before,.fa-user-large-slash:before{content:\"\\f4fa\"}.fa-user-lock:before{content:\"\\f502\"}.fa-user-minus:before{content:\"\\f503\"}.fa-user-ninja:before{content:\"\\f504\"}.fa-user-nurse:before{content:\"\\f82f\"}.fa-user-edit:before,.fa-user-pen:before{content:\"\\f4ff\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-user-shield:before{content:\"\\f505\"}.fa-user-slash:before{content:\"\\f506\"}.fa-user-tag:before{content:\"\\f507\"}.fa-user-tie:before{content:\"\\f508\"}.fa-user-times:before,.fa-user-xmark:before{content:\"\\f235\"}.fa-users:before{content:\"\\f0c0\"}.fa-users-cog:before,.fa-users-gear:before{content:\"\\f509\"}.fa-users-slash:before{content:\"\\e073\"}.fa-cutlery:before,.fa-utensils:before{content:\"\\f2e7\"}.fa-v:before{content:\"\\56\"}.fa-shuttle-van:before,.fa-van-shuttle:before{content:\"\\f5b6\"}.fa-vault:before{content:\"\\e2c5\"}.fa-vector-square:before{content:\"\\f5cb\"}.fa-venus:before{content:\"\\f221\"}.fa-venus-double:before{content:\"\\f226\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-vest:before{content:\"\\e085\"}.fa-vest-patches:before{content:\"\\e086\"}.fa-vial:before{content:\"\\f492\"}.fa-vials:before{content:\"\\f493\"}.fa-video-camera:before,.fa-video:before{content:\"\\f03d\"}.fa-video-slash:before{content:\"\\f4e2\"}.fa-vihara:before{content:\"\\f6a7\"}.fa-virus:before{content:\"\\e074\"}.fa-virus-covid:before{content:\"\\e4a8\"}.fa-virus-covid-slash:before{content:\"\\e4a9\"}.fa-virus-slash:before{content:\"\\e075\"}.fa-viruses:before{content:\"\\e076\"}.fa-voicemail:before{content:\"\\f897\"}.fa-volleyball-ball:before,.fa-volleyball:before{content:\"\\f45f\"}.fa-volume-high:before,.fa-volume-up:before{content:\"\\f028\"}.fa-volume-down:before,.fa-volume-low:before{content:\"\\f027\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-mute:before,.fa-volume-times:before,.fa-volume-xmark:before{content:\"\\f6a9\"}.fa-vr-cardboard:before{content:\"\\f729\"}.fa-w:before{content:\"\\57\"}.fa-wallet:before{content:\"\\f555\"}.fa-magic:before,.fa-wand-magic:before{content:\"\\f0d0\"}.fa-magic-wand-sparkles:before,.fa-wand-magic-sparkles:before{content:\"\\e2ca\"}.fa-wand-sparkles:before{content:\"\\f72b\"}.fa-warehouse:before{content:\"\\f494\"}.fa-water:before{content:\"\\f773\"}.fa-ladder-water:before,.fa-swimming-pool:before,.fa-water-ladder:before{content:\"\\f5c5\"}.fa-wave-square:before{content:\"\\f83e\"}.fa-weight-hanging:before{content:\"\\f5cd\"}.fa-weight-scale:before,.fa-weight:before{content:\"\\f496\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-glass-whiskey:before,.fa-whiskey-glass:before{content:\"\\f7a0\"}.fa-wifi-3:before,.fa-wifi-strong:before,.fa-wifi:before{content:\"\\f1eb\"}.fa-wind:before{content:\"\\f72e\"}.fa-window-maximize:before{content:\"\\f2d0\"}.fa-window-minimize:before{content:\"\\f2d1\"}.fa-window-restore:before{content:\"\\f2d2\"}.fa-wine-bottle:before{content:\"\\f72f\"}.fa-wine-glass:before{content:\"\\f4e3\"}.fa-wine-glass-alt:before,.fa-wine-glass-empty:before{content:\"\\f5ce\"}.fa-krw:before,.fa-won-sign:before,.fa-won:before{content:\"\\f159\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-x:before{content:\"\\58\"}.fa-x-ray:before{content:\"\\f497\"}.fa-close:before,.fa-multiply:before,.fa-remove:before,.fa-times:before,.fa-xmark:before{content:\"\\f00d\"}.fa-y:before{content:\"\\59\"}.fa-cny:before,.fa-jpy:before,.fa-rmb:before,.fa-yen-sign:before,.fa-yen:before{content:\"\\f157\"}.fa-yin-yang:before{content:\"\\f6ad\"}.fa-z:before{content:\"\\5a\"}.fa-sr-only,.fa-sr-only-focusable:not(:focus),.sr-only,.sr-only-focusable:not(:focus){position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}:host,:root{--fa-font-brands:normal 400 1em/1 \"Font Awesome 6 Brands\"}@font-face{font-family:\"Font Awesome 6 Brands\";font-style:normal;font-weight:400;font-display:block;src:url(../webfonts/fa-brands-400.woff2) format(\"woff2\"),url(../webfonts/fa-brands-400.ttf) format(\"truetype\")}.fa-brands,.fab{font-family:\"Font Awesome 6 Brands\";font-weight:400}.fa-42-group:before,.fa-innosoft:before{content:\"\\e080\"}.fa-500px:before{content:\"\\f26e\"}.fa-accessible-icon:before{content:\"\\f368\"}.fa-accusoft:before{content:\"\\f369\"}.fa-adn:before{content:\"\\f170\"}.fa-adversal:before{content:\"\\f36a\"}.fa-affiliatetheme:before{content:\"\\f36b\"}.fa-airbnb:before{content:\"\\f834\"}.fa-algolia:before{content:\"\\f36c\"}.fa-alipay:before{content:\"\\f642\"}.fa-amazon:before{content:\"\\f270\"}.fa-amazon-pay:before{content:\"\\f42c\"}.fa-amilia:before{content:\"\\f36d\"}.fa-android:before{content:\"\\f17b\"}.fa-angellist:before{content:\"\\f209\"}.fa-angrycreative:before{content:\"\\f36e\"}.fa-angular:before{content:\"\\f420\"}.fa-app-store:before{content:\"\\f36f\"}.fa-app-store-ios:before{content:\"\\f370\"}.fa-apper:before{content:\"\\f371\"}.fa-apple:before{content:\"\\f179\"}.fa-apple-pay:before{content:\"\\f415\"}.fa-artstation:before{content:\"\\f77a\"}.fa-asymmetrik:before{content:\"\\f372\"}.fa-atlassian:before{content:\"\\f77b\"}.fa-audible:before{content:\"\\f373\"}.fa-autoprefixer:before{content:\"\\f41c\"}.fa-avianex:before{content:\"\\f374\"}.fa-aviato:before{content:\"\\f421\"}.fa-aws:before{content:\"\\f375\"}.fa-bandcamp:before{content:\"\\f2d5\"}.fa-battle-net:before{content:\"\\f835\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-bilibili:before{content:\"\\e3d9\"}.fa-bimobject:before{content:\"\\f378\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitcoin:before{content:\"\\f379\"}.fa-bity:before{content:\"\\f37a\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-blackberry:before{content:\"\\f37b\"}.fa-blogger:before{content:\"\\f37c\"}.fa-blogger-b:before{content:\"\\f37d\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-bootstrap:before{content:\"\\f836\"}.fa-bots:before{content:\"\\e340\"}.fa-btc:before{content:\"\\f15a\"}.fa-buffer:before{content:\"\\f837\"}.fa-buromobelexperte:before{content:\"\\f37f\"}.fa-buy-n-large:before{content:\"\\f8a6\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-canadian-maple-leaf:before{content:\"\\f785\"}.fa-cc-amazon-pay:before{content:\"\\f42d\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-apple-pay:before{content:\"\\f416\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-centercode:before{content:\"\\f380\"}.fa-centos:before{content:\"\\f789\"}.fa-chrome:before{content:\"\\f268\"}.fa-chromecast:before{content:\"\\f838\"}.fa-cloudflare:before{content:\"\\e07d\"}.fa-cloudscale:before{content:\"\\f383\"}.fa-cloudsmith:before{content:\"\\f384\"}.fa-cloudversify:before{content:\"\\f385\"}.fa-cmplid:before{content:\"\\e360\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-codiepie:before{content:\"\\f284\"}.fa-confluence:before{content:\"\\f78d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-contao:before{content:\"\\f26d\"}.fa-cotton-bureau:before{content:\"\\f89e\"}.fa-cpanel:before{content:\"\\f388\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-creative-commons-by:before{content:\"\\f4e7\"}.fa-creative-commons-nc:before{content:\"\\f4e8\"}.fa-creative-commons-nc-eu:before{content:\"\\f4e9\"}.fa-creative-commons-nc-jp:before{content:\"\\f4ea\"}.fa-creative-commons-nd:before{content:\"\\f4eb\"}.fa-creative-commons-pd:before{content:\"\\f4ec\"}.fa-creative-commons-pd-alt:before{content:\"\\f4ed\"}.fa-creative-commons-remix:before{content:\"\\f4ee\"}.fa-creative-commons-sa:before{content:\"\\f4ef\"}.fa-creative-commons-sampling:before{content:\"\\f4f0\"}.fa-creative-commons-sampling-plus:before{content:\"\\f4f1\"}.fa-creative-commons-share:before{content:\"\\f4f2\"}.fa-creative-commons-zero:before{content:\"\\f4f3\"}.fa-critical-role:before{content:\"\\f6c9\"}.fa-css3:before{content:\"\\f13c\"}.fa-css3-alt:before{content:\"\\f38b\"}.fa-cuttlefish:before{content:\"\\f38c\"}.fa-d-and-d:before{content:\"\\f38d\"}.fa-d-and-d-beyond:before{content:\"\\f6ca\"}.fa-dailymotion:before{content:\"\\e052\"}.fa-dashcube:before{content:\"\\f210\"}.fa-deezer:before{content:\"\\e077\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-deploydog:before{content:\"\\f38e\"}.fa-deskpro:before{content:\"\\f38f\"}.fa-dev:before{content:\"\\f6cc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-dhl:before{content:\"\\f790\"}.fa-diaspora:before{content:\"\\f791\"}.fa-digg:before{content:\"\\f1a6\"}.fa-digital-ocean:before{content:\"\\f391\"}.fa-discord:before{content:\"\\f392\"}.fa-discourse:before{content:\"\\f393\"}.fa-dochub:before{content:\"\\f394\"}.fa-docker:before{content:\"\\f395\"}.fa-draft2digital:before{content:\"\\f396\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-dribbble-square:before{content:\"\\f397\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-dyalog:before{content:\"\\f399\"}.fa-earlybirds:before{content:\"\\f39a\"}.fa-ebay:before{content:\"\\f4f4\"}.fa-edge:before{content:\"\\f282\"}.fa-edge-legacy:before{content:\"\\e078\"}.fa-elementor:before{content:\"\\f430\"}.fa-ello:before{content:\"\\f5f1\"}.fa-ember:before{content:\"\\f423\"}.fa-empire:before{content:\"\\f1d1\"}.fa-envira:before{content:\"\\f299\"}.fa-erlang:before{content:\"\\f39d\"}.fa-ethereum:before{content:\"\\f42e\"}.fa-etsy:before{content:\"\\f2d7\"}.fa-evernote:before{content:\"\\f839\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-facebook:before{content:\"\\f09a\"}.fa-facebook-f:before{content:\"\\f39e\"}.fa-facebook-messenger:before{content:\"\\f39f\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-fantasy-flight-games:before{content:\"\\f6dc\"}.fa-fedex:before{content:\"\\f797\"}.fa-fedora:before{content:\"\\f798\"}.fa-figma:before{content:\"\\f799\"}.fa-firefox:before{content:\"\\f269\"}.fa-firefox-browser:before{content:\"\\e007\"}.fa-first-order:before{content:\"\\f2b0\"}.fa-first-order-alt:before{content:\"\\f50a\"}.fa-firstdraft:before{content:\"\\f3a1\"}.fa-flickr:before{content:\"\\f16e\"}.fa-flipboard:before{content:\"\\f44d\"}.fa-fly:before{content:\"\\f417\"}.fa-font-awesome-flag:before,.fa-font-awesome-logo-full:before,.fa-font-awesome:before{content:\"\\f2b4\"}.fa-fonticons:before{content:\"\\f280\"}.fa-fonticons-fi:before{content:\"\\f3a2\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-fort-awesome-alt:before{content:\"\\f3a3\"}.fa-forumbee:before{content:\"\\f211\"}.fa-foursquare:before{content:\"\\f180\"}.fa-free-code-camp:before{content:\"\\f2c5\"}.fa-freebsd:before{content:\"\\f3a4\"}.fa-fulcrum:before{content:\"\\f50b\"}.fa-galactic-republic:before{content:\"\\f50c\"}.fa-galactic-senate:before{content:\"\\f50d\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-git:before{content:\"\\f1d3\"}.fa-git-alt:before{content:\"\\f841\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-github:before{content:\"\\f09b\"}.fa-github-alt:before{content:\"\\f113\"}.fa-github-square:before{content:\"\\f092\"}.fa-gitkraken:before{content:\"\\f3a6\"}.fa-gitlab:before{content:\"\\f296\"}.fa-gitter:before{content:\"\\f426\"}.fa-glide:before{content:\"\\f2a5\"}.fa-glide-g:before{content:\"\\f2a6\"}.fa-gofore:before{content:\"\\f3a7\"}.fa-golang:before{content:\"\\e40f\"}.fa-goodreads:before{content:\"\\f3a8\"}.fa-goodreads-g:before{content:\"\\f3a9\"}.fa-google:before{content:\"\\f1a0\"}.fa-google-drive:before{content:\"\\f3aa\"}.fa-google-pay:before{content:\"\\e079\"}.fa-google-play:before{content:\"\\f3ab\"}.fa-google-plus:before{content:\"\\f2b3\"}.fa-google-plus-g:before{content:\"\\f0d5\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-gratipay:before{content:\"\\f184\"}.fa-grav:before{content:\"\\f2d6\"}.fa-gripfire:before{content:\"\\f3ac\"}.fa-grunt:before{content:\"\\f3ad\"}.fa-guilded:before{content:\"\\e07e\"}.fa-gulp:before{content:\"\\f3ae\"}.fa-hacker-news:before{content:\"\\f1d4\"}.fa-hacker-news-square:before{content:\"\\f3af\"}.fa-hackerrank:before{content:\"\\f5f7\"}.fa-hashnode:before{content:\"\\e499\"}.fa-hips:before{content:\"\\f452\"}.fa-hire-a-helper:before{content:\"\\f3b0\"}.fa-hive:before{content:\"\\e07f\"}.fa-hooli:before{content:\"\\f427\"}.fa-hornbill:before{content:\"\\f592\"}.fa-hotjar:before{content:\"\\f3b1\"}.fa-houzz:before{content:\"\\f27c\"}.fa-html5:before{content:\"\\f13b\"}.fa-hubspot:before{content:\"\\f3b2\"}.fa-ideal:before{content:\"\\e013\"}.fa-imdb:before{content:\"\\f2d8\"}.fa-instagram:before{content:\"\\f16d\"}.fa-instagram-square:before{content:\"\\e055\"}.fa-instalod:before{content:\"\\e081\"}.fa-intercom:before{content:\"\\f7af\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-invision:before{content:\"\\f7b0\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-itch-io:before{content:\"\\f83a\"}.fa-itunes:before{content:\"\\f3b4\"}.fa-itunes-note:before{content:\"\\f3b5\"}.fa-java:before{content:\"\\f4e4\"}.fa-jedi-order:before{content:\"\\f50e\"}.fa-jenkins:before{content:\"\\f3b6\"}.fa-jira:before{content:\"\\f7b1\"}.fa-joget:before{content:\"\\f3b7\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-js:before{content:\"\\f3b8\"}.fa-js-square:before{content:\"\\f3b9\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-kaggle:before{content:\"\\f5fa\"}.fa-keybase:before{content:\"\\f4f5\"}.fa-keycdn:before{content:\"\\f3ba\"}.fa-kickstarter:before{content:\"\\f3bb\"}.fa-kickstarter-k:before{content:\"\\f3bc\"}.fa-korvue:before{content:\"\\f42f\"}.fa-laravel:before{content:\"\\f3bd\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-leanpub:before{content:\"\\f212\"}.fa-less:before{content:\"\\f41d\"}.fa-line:before{content:\"\\f3c0\"}.fa-linkedin:before{content:\"\\f08c\"}.fa-linkedin-in:before{content:\"\\f0e1\"}.fa-linode:before{content:\"\\f2b8\"}.fa-linux:before{content:\"\\f17c\"}.fa-lyft:before{content:\"\\f3c3\"}.fa-magento:before{content:\"\\f3c4\"}.fa-mailchimp:before{content:\"\\f59e\"}.fa-mandalorian:before{content:\"\\f50f\"}.fa-markdown:before{content:\"\\f60f\"}.fa-mastodon:before{content:\"\\f4f6\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-mdb:before{content:\"\\f8ca\"}.fa-medapps:before{content:\"\\f3c6\"}.fa-medium-m:before,.fa-medium:before{content:\"\\f23a\"}.fa-medrt:before{content:\"\\f3c8\"}.fa-meetup:before{content:\"\\f2e0\"}.fa-megaport:before{content:\"\\f5a3\"}.fa-mendeley:before{content:\"\\f7b3\"}.fa-microblog:before{content:\"\\e01a\"}.fa-microsoft:before{content:\"\\f3ca\"}.fa-mix:before{content:\"\\f3cb\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-mixer:before{content:\"\\e056\"}.fa-mizuni:before{content:\"\\f3cc\"}.fa-modx:before{content:\"\\f285\"}.fa-monero:before{content:\"\\f3d0\"}.fa-napster:before{content:\"\\f3d2\"}.fa-neos:before{content:\"\\f612\"}.fa-nimblr:before{content:\"\\f5a8\"}.fa-node:before{content:\"\\f419\"}.fa-node-js:before{content:\"\\f3d3\"}.fa-npm:before{content:\"\\f3d4\"}.fa-ns8:before{content:\"\\f3d5\"}.fa-nutritionix:before{content:\"\\f3d6\"}.fa-octopus-deploy:before{content:\"\\e082\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-old-republic:before{content:\"\\f510\"}.fa-opencart:before{content:\"\\f23d\"}.fa-openid:before{content:\"\\f19b\"}.fa-opera:before{content:\"\\f26a\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-orcid:before{content:\"\\f8d2\"}.fa-osi:before{content:\"\\f41a\"}.fa-padlet:before{content:\"\\e4a0\"}.fa-page4:before{content:\"\\f3d7\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-palfed:before{content:\"\\f3d8\"}.fa-patreon:before{content:\"\\f3d9\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-perbyte:before{content:\"\\e083\"}.fa-periscope:before{content:\"\\f3da\"}.fa-phabricator:before{content:\"\\f3db\"}.fa-phoenix-framework:before{content:\"\\f3dc\"}.fa-phoenix-squadron:before{content:\"\\f511\"}.fa-php:before{content:\"\\f457\"}.fa-pied-piper:before{content:\"\\f2ae\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-pied-piper-hat:before{content:\"\\f4e5\"}.fa-pied-piper-pp:before{content:\"\\f1a7\"}.fa-pied-piper-square:before{content:\"\\e01e\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-pix:before{content:\"\\e43a\"}.fa-playstation:before{content:\"\\f3df\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-pushed:before{content:\"\\f3e1\"}.fa-python:before{content:\"\\f3e2\"}.fa-qq:before{content:\"\\f1d6\"}.fa-quinscape:before{content:\"\\f459\"}.fa-quora:before{content:\"\\f2c4\"}.fa-r-project:before{content:\"\\f4f7\"}.fa-raspberry-pi:before{content:\"\\f7bb\"}.fa-ravelry:before{content:\"\\f2d9\"}.fa-react:before{content:\"\\f41b\"}.fa-reacteurope:before{content:\"\\f75d\"}.fa-readme:before{content:\"\\f4d5\"}.fa-rebel:before{content:\"\\f1d0\"}.fa-red-river:before{content:\"\\f3e3\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-redhat:before{content:\"\\f7bc\"}.fa-renren:before{content:\"\\f18b\"}.fa-replyd:before{content:\"\\f3e6\"}.fa-researchgate:before{content:\"\\f4f8\"}.fa-resolving:before{content:\"\\f3e7\"}.fa-rev:before{content:\"\\f5b2\"}.fa-rocketchat:before{content:\"\\f3e8\"}.fa-rockrms:before{content:\"\\f3e9\"}.fa-rust:before{content:\"\\e07a\"}.fa-safari:before{content:\"\\f267\"}.fa-salesforce:before{content:\"\\f83b\"}.fa-sass:before{content:\"\\f41e\"}.fa-schlix:before{content:\"\\f3ea\"}.fa-scribd:before{content:\"\\f28a\"}.fa-searchengin:before{content:\"\\f3eb\"}.fa-sellcast:before{content:\"\\f2da\"}.fa-sellsy:before{content:\"\\f213\"}.fa-servicestack:before{content:\"\\f3ec\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-shopify:before{content:\"\\e057\"}.fa-shopware:before{content:\"\\f5b5\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-sistrix:before{content:\"\\f3ee\"}.fa-sith:before{content:\"\\f512\"}.fa-sitrox:before{content:\"\\e44a\"}.fa-sketch:before{content:\"\\f7c6\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-skype:before{content:\"\\f17e\"}.fa-slack-hash:before,.fa-slack:before{content:\"\\f198\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-snapchat-ghost:before,.fa-snapchat:before{content:\"\\f2ab\"}.fa-snapchat-square:before{content:\"\\f2ad\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-sourcetree:before{content:\"\\f7d3\"}.fa-speakap:before{content:\"\\f3f3\"}.fa-speaker-deck:before{content:\"\\f83c\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-square-font-awesome:before{content:\"\\f425\"}.fa-font-awesome-alt:before,.fa-square-font-awesome-stroke:before{content:\"\\f35c\"}.fa-squarespace:before{content:\"\\f5be\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-stackpath:before{content:\"\\f842\"}.fa-staylinked:before{content:\"\\f3f5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-steam-symbol:before{content:\"\\f3f6\"}.fa-sticker-mule:before{content:\"\\f3f7\"}.fa-strava:before{content:\"\\f428\"}.fa-stripe:before{content:\"\\f429\"}.fa-stripe-s:before{content:\"\\f42a\"}.fa-studiovinari:before{content:\"\\f3f8\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-superpowers:before{content:\"\\f2dd\"}.fa-supple:before{content:\"\\f3f9\"}.fa-suse:before{content:\"\\f7d6\"}.fa-swift:before{content:\"\\f8e1\"}.fa-symfony:before{content:\"\\f83d\"}.fa-teamspeak:before{content:\"\\f4f9\"}.fa-telegram-plane:before,.fa-telegram:before{content:\"\\f2c6\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-the-red-yeti:before{content:\"\\f69d\"}.fa-themeco:before{content:\"\\f5c6\"}.fa-themeisle:before{content:\"\\f2b2\"}.fa-think-peaks:before{content:\"\\f731\"}.fa-tiktok:before{content:\"\\e07b\"}.fa-trade-federation:before{content:\"\\f513\"}.fa-trello:before{content:\"\\f181\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-twitter:before{content:\"\\f099\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-typo3:before{content:\"\\f42b\"}.fa-uber:before{content:\"\\f402\"}.fa-ubuntu:before{content:\"\\f7df\"}.fa-uikit:before{content:\"\\f403\"}.fa-umbraco:before{content:\"\\f8e8\"}.fa-uncharted:before{content:\"\\e084\"}.fa-uniregistry:before{content:\"\\f404\"}.fa-unity:before{content:\"\\e049\"}.fa-unsplash:before{content:\"\\e07c\"}.fa-untappd:before{content:\"\\f405\"}.fa-ups:before{content:\"\\f7e0\"}.fa-usb:before{content:\"\\f287\"}.fa-usps:before{content:\"\\f7e1\"}.fa-ussunnah:before{content:\"\\f407\"}.fa-vaadin:before{content:\"\\f408\"}.fa-viacoin:before{content:\"\\f237\"}.fa-viadeo:before{content:\"\\f2a9\"}.fa-viadeo-square:before{content:\"\\f2aa\"}.fa-viber:before{content:\"\\f409\"}.fa-vimeo:before{content:\"\\f40a\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-vimeo-v:before{content:\"\\f27d\"}.fa-vine:before{content:\"\\f1ca\"}.fa-vk:before{content:\"\\f189\"}.fa-vnv:before{content:\"\\f40b\"}.fa-vuejs:before{content:\"\\f41f\"}.fa-watchman-monitoring:before{content:\"\\e087\"}.fa-waze:before{content:\"\\f83f\"}.fa-weebly:before{content:\"\\f5cc\"}.fa-weibo:before{content:\"\\f18a\"}.fa-weixin:before{content:\"\\f1d7\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-whatsapp-square:before{content:\"\\f40c\"}.fa-whmcs:before{content:\"\\f40d\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-windows:before{content:\"\\f17a\"}.fa-wirsindhandwerk:before,.fa-wsh:before{content:\"\\e2d0\"}.fa-wix:before{content:\"\\f5cf\"}.fa-wizards-of-the-coast:before{content:\"\\f730\"}.fa-wodu:before{content:\"\\e088\"}.fa-wolf-pack-battalion:before{content:\"\\f514\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-wordpress-simple:before{content:\"\\f411\"}.fa-wpbeginner:before{content:\"\\f297\"}.fa-wpexplorer:before{content:\"\\f2de\"}.fa-wpforms:before{content:\"\\f298\"}.fa-wpressr:before{content:\"\\f3e4\"}.fa-xbox:before{content:\"\\f412\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-y-combinator:before{content:\"\\f23b\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-yammer:before{content:\"\\f840\"}.fa-yandex:before{content:\"\\f413\"}.fa-yandex-international:before{content:\"\\f414\"}.fa-yarn:before{content:\"\\f7e3\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-yoast:before{content:\"\\f2b1\"}.fa-youtube:before{content:\"\\f167\"}.fa-youtube-square:before{content:\"\\f431\"}.fa-zhihu:before{content:\"\\f63f\"}:host,:root{--fa-font-regular:normal 400 1em/1 \"Font Awesome 6 Free\"}@font-face{font-family:\"Font Awesome 6 Free\";font-style:normal;font-weight:400;font-display:block;src:url(../webfonts/fa-regular-400.woff2) format(\"woff2\"),url(../webfonts/fa-regular-400.ttf) format(\"truetype\")}.fa-regular,.far{font-family:\"Font Awesome 6 Free\";font-weight:400}:host,:root{--fa-font-solid:normal 900 1em/1 \"Font Awesome 6 Free\"}@font-face{font-family:\"Font Awesome 6 Free\";font-style:normal;font-weight:900;font-display:block;src:url(../webfonts/fa-solid-900.woff2) format(\"woff2\"),url(../webfonts/fa-solid-900.ttf) format(\"truetype\")}.fa-solid,.fas{font-family:\"Font Awesome 6 Free\";font-weight:900}@font-face{font-family:\"Font Awesome 5 Brands\";font-display:block;font-weight:400;src:url(../webfonts/fa-brands-400.woff2) format(\"woff2\"),url(../webfonts/fa-brands-400.ttf) format(\"truetype\")}@font-face{font-family:\"Font Awesome 5 Free\";font-display:block;font-weight:900;src:url(../webfonts/fa-solid-900.woff2) format(\"woff2\"),url(../webfonts/fa-solid-900.ttf) format(\"truetype\")}@font-face{font-family:\"Font Awesome 5 Free\";font-display:block;font-weight:400;src:url(../webfonts/fa-regular-400.woff2) format(\"woff2\"),url(../webfonts/fa-regular-400.ttf) format(\"truetype\")}@font-face{font-family:\"FontAwesome\";font-display:block;src:url(../webfonts/fa-solid-900.woff2) format(\"woff2\"),url(../webfonts/fa-solid-900.ttf) format(\"truetype\")}@font-face{font-family:\"FontAwesome\";font-display:block;src:url(../webfonts/fa-brands-400.woff2) format(\"woff2\"),url(../webfonts/fa-brands-400.ttf) format(\"truetype\")}@font-face{font-family:\"FontAwesome\";font-display:block;src:url(../webfonts/fa-regular-400.woff2) format(\"woff2\"),url(../webfonts/fa-regular-400.ttf) format(\"truetype\");unicode-range:u+f003,u+f006,u+f014,u+f016-f017,u+f01a-f01b,u+f01d,u+f022,u+f03e,u+f044,u+f046,u+f05c-f05d,u+f06e,u+f070,u+f087-f088,u+f08a,u+f094,u+f096-f097,u+f09d,u+f0a0,u+f0a2,u+f0a4-f0a7,u+f0c5,u+f0c7,u+f0e5-f0e6,u+f0eb,u+f0f6-f0f8,u+f10c,u+f114-f115,u+f118-f11a,u+f11c-f11d,u+f133,u+f147,u+f14e,u+f150-f152,u+f185-f186,u+f18e,u+f190-f192,u+f196,u+f1c1-f1c9,u+f1d9,u+f1db,u+f1e3,u+f1ea,u+f1f7,u+f1f9,u+f20a,u+f247-f248,u+f24a,u+f24d,u+f255-f25b,u+f25d,u+f271-f274,u+f278,u+f27b,u+f28c,u+f28e,u+f29c,u+f2b5,u+f2b7,u+f2ba,u+f2bc,u+f2be,u+f2c0-f2c1,u+f2c3,u+f2d0,u+f2d2,u+f2d4,u+f2dc}@font-face{font-family:\"FontAwesome\";font-display:block;src:url(../webfonts/fa-v4compatibility.woff2) format(\"woff2\"),url(../webfonts/fa-v4compatibility.ttf) format(\"truetype\");unicode-range:u+f041,u+f047,u+f065-f066,u+f07d-f07e,u+f080,u+f08b,u+f08e,u+f090,u+f09a,u+f0ac,u+f0ae,u+f0b2,u+f0d0,u+f0d6,u+f0e4,u+f0ec,u+f10a-f10b,u+f123,u+f13e,u+f148-f149,u+f14c,u+f156,u+f15e,u+f160-f161,u+f163,u+f175-f178,u+f195,u+f1f8,u+f219,u+f250,u+f252,u+f27a}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": -1,
          "connect": -1,
          "ssl": -1,
          "send": 0,
          "wait": 0.020666666387114674,
          "receive": 0.019874998542945832
        },
        "_fetchType": "Memory Cache"
      }
    ]
  }
}